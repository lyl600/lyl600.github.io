<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pyspark的相关使用</title>
      <link href="/2024/06/19/pyspark%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/06/19/pyspark%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="pyspark数据的输入"><a class="markdownIt-Anchor" href="#pyspark数据的输入"></a> pyspark数据的输入</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">from pyspark import SparkConf, SparkContext</span><br><span class="line"></span><br><span class="line">conf = <span class="built_in">SparkConf</span>()<span class="selector-class">.setMaster</span>(<span class="string">&quot;local[*]&quot;</span>)<span class="selector-class">.setAppName</span>(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line"></span><br><span class="line">sc = <span class="built_in">SparkContext</span>(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd1 = sc<span class="selector-class">.parallelize</span>(<span class="selector-attr">[1, 2, 3, 4, 5]</span>)</span><br><span class="line">rdd2 = sc<span class="selector-class">.parallelize</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line">rdd3 = sc<span class="selector-class">.parallelize</span>(<span class="string">&quot;asdcascacasc&quot;</span>)</span><br><span class="line">rdd4 = sc<span class="selector-class">.parallelize</span>(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;)</span><br><span class="line">rdd5 = sc<span class="selector-class">.parallelize</span>(&#123;<span class="string">&quot;好啊&quot;</span>: <span class="string">&quot;value1&quot;</span>, <span class="string">&quot;key2&quot;</span>: <span class="string">&quot;value2&quot;</span>&#125;)</span><br><span class="line">rdd6 = sc<span class="selector-class">.textFile</span>(<span class="string">&quot;D:/桌面/资料内容/资料/hello.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd1.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd2.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd3.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd4.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd5.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd6.collect()</span></span>)</span><br><span class="line"></span><br><span class="line">sc<span class="selector-class">.stop</span>()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkConf, SparkContext</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;PYSPARK_PYTHON&#x27;</span>] = <span class="string">&quot;D:/Python/Anacond/python.exe&quot;</span></span><br><span class="line"></span><br><span class="line">conf = SparkConf().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line">sc = SparkContext(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd = sc.parallelize([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把rdd中的每个元素乘以10</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> data * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># rdd2 = rdd.map(func)</span></span><br><span class="line"><span class="comment"># lambda函数使用</span></span><br><span class="line">rdd2 = rdd.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x * <span class="number">10</span>).<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [10, 20, 30, 40, 50]</span></span><br><span class="line"><span class="built_in">print</span>(rdd2.collect())</span><br><span class="line"></span><br><span class="line">sc.stop()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flatMap(传入函数)方法：和map基本一样，但是flatmap可以用于解除嵌套</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from pyspark import <span class="symbol">SparkConf</span>, <span class="symbol">SparkContext</span></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;PYSPARK_PYTHON&#x27;</span>] = <span class="string">&quot;D:/Python/Anacond/python.exe&quot;</span></span><br><span class="line">conf = <span class="symbol">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line">sc = <span class="symbol">SparkContext</span>(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd = sc.parallelize([<span class="string">&quot;itheima pjb 666&quot;</span>, <span class="string">&quot;sadijad dsakj asdkj&quot;</span>, <span class="string">&quot;python nihaoa&quot;</span>])</span><br><span class="line"></span><br><span class="line"># 结果是 [[<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;pjb&#x27;</span>, <span class="string">&#x27;666&#x27;</span>], [<span class="string">&#x27;sadijad&#x27;</span>, <span class="string">&#x27;dsakj&#x27;</span>, <span class="string">&#x27;asdkj&#x27;</span>], [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;nihaoa&#x27;</span>]]</span><br><span class="line">rdd2 = rdd.map(lambda x: x.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line"></span><br><span class="line"># 结果是[<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;pjb&#x27;</span>, <span class="string">&#x27;666&#x27;</span>, <span class="string">&#x27;sadijad&#x27;</span>, <span class="string">&#x27;dsakj&#x27;</span>, <span class="string">&#x27;asdkj&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;nihaoa&#x27;</span>]</span><br><span class="line">rdd2 = rdd.flatMap(lambda x: x.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line">print(rdd2.collect())</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>reduceBykey 针对KV型RDD，自动按照key分组，然后根据你提供的逻辑，完成组内数据（value）的聚合操作</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkConf, SparkContext</span><br><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">os</span>.environ[<span class="string">&#x27;PYSPARK_PYTHON&#x27;</span>] = <span class="string">&quot;D:/Python/Anacond/python.exe&quot;</span></span><br><span class="line">conf = SparkConf().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line">sc = SparkContext(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd = sc.parallelize([(<span class="string">&#x27;男&#x27;</span>, <span class="number">99</span>), (<span class="string">&#x27;男&#x27;</span>, <span class="number">69</span>), (<span class="string">&#x27;女&#x27;</span>, <span class="number">49</span>), (<span class="string">&#x27;女&#x27;</span>, <span class="number">29</span>)])</span><br><span class="line"></span><br><span class="line"># 结果[(<span class="string">&#x27;男&#x27;</span>, <span class="number">168</span>), (<span class="string">&#x27;女&#x27;</span>, <span class="number">78</span>)]</span><br><span class="line">rdd2 = rdd.reduceByKey(lambda a, <span class="name">b</span>: a + b)</span><br><span class="line"><span class="built_in">print</span>(rdd2.collect())</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>什么是指标体系？及如何构建体表体系</title>
      <link href="/2024/03/19/%E4%BB%80%E4%B9%88%E6%98%AF%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB%EF%BC%9F%E5%8F%8A%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%BD%93%E8%A1%A8%E4%BD%93%E7%B3%BB/"/>
      <url>/2024/03/19/%E4%BB%80%E4%B9%88%E6%98%AF%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB%EF%BC%9F%E5%8F%8A%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%BD%93%E8%A1%A8%E4%BD%93%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p>一、指标体系的定义<br />1. 指标概述</p><p>在介绍指标体系的概念之前，首先需明确什么是指标。指标是一种用于定量或定性衡量特定事物或现象的标准，用以度量、评估或衡量各种情况、性能、趋势或质量。这些指标可以是数值、比率、百分比、数量或描述性信息，涵盖人数、收入、利润、升学率等常见数据指标。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/04a90b5df51900aea145885ee0142169.jpeg" alt="04a90b5df51900aea145885ee0142169.jpeg" /></p><p>指标的主要构成要素包括维度、汇总方式和量度。</p><p>维度：衡量的角度；<br />汇总方式：衡量的方法；<br />量度：衡量的计量单位。</p><p>简而言之，指标将某个事件量化并转化为数字，以衡量目标。在日常工作中，大家普遍应用这种量化方法。</p><p>2. 指标体系的概念</p><p>在实际工作中，准确清晰地表达一项事务通常颇为复杂。例如，如果我们计划投资商超市，目前待选名单上有A和B两家超市，我们如何准确衡量它们的经营状况和盈利能力呢？</p><p><img src="https://img-blog.csdnimg.cn/img_convert/cc1631700fdddfbaded288faac1d25a3.jpeg" alt="cc1631700fdddfbaded288faac1d25a3.jpeg" /></p><p>大部分人会建议说：</p><p>可以看哪家超市的“收入”更高？<br />不，我们应该看“利润”，因为利润多的超市盈利能力更强！<br />也不够，我们要看利润占收入的比例，即“利润率”。<br />我们还可以查看两家超市的“投资回报率”，即每投入100元，每家超市可以赚多少钱？</p><p>然而，上述每个观点都仅涉及单一指标。那么，单一的财务指标是否足以全面衡量公司的盈利状况呢？答案显然是否定的。因为企业经营管理涉及多方面，一个问题通常需要从多个角度进行分析。相对于“发现问题，分析问题”的单一指标方法，构建成体系的指标，即指标体系，通常能够通过串联各指标、多维度分析问题背后的背景，使解决方案更具针对性，也能在问题发生时迅速定位问题症结。</p><p>因此，指标体系是一个用于度量、评估和监控组织或企业绩效的结构化框架，由一系列明确定义的指标和度量组成，用于反映组织在各关键领域的表现。</p><p>二、企业为何需要指标体系？<br />指标体系是企业思考如何实现战略目标、提升创造价值的工具，也是连接战略目标与实际工作的纽带。其存在的价值和意义在于确保企业内部对于同一价值目标具备明确而统一的理解和沟通。</p><p>指标体系的建立，为企业带来以下好处：</p><ol><li>明确战略目标</li></ol><p>指标体系协助企业明确规划战略目标的实施路径。企业无需依赖猜测或主观意见，可以根据数据建立明确的指标，以计算目标的实现程度。这种客观方法有助于更好地理解目标，将其分解成可量化的步骤，并建立清晰的路线图来实现这些目标。</p><ol start="2"><li>实时监控业务绩效</li></ol><p>指标体系使企业能够实时监控业务绩效。通过将关键业务指标纳入指标体系，企业可以随时了解业务的状态，发现问题并及时采取行动。这种实时监控不仅有助于问题的及时解决，还大幅提高报表制作与BI数据分析的效率。</p><ol start="3"><li>提高决策的科学性</li></ol><p>指标体系使企业决策更具科学性。有了数据支持，企业可以更好地了解市场、产品、客户和竞争对手。这使得他们能够制定更明智的决策，减少决策的风险，并提高成功的机会。无论是在市场扩张、产品开发还是运营管理方面，指标体系都为企业提供了更多的决策依据。</p><ol start="4"><li>提高资源利用效率</li></ol><p>指标体系有助于企业更有效地利用资源。通过数据分析，企业可以识别哪些活动或项目最有利可图，哪些需要改进或淘汰。这有助于减少浪费，提高资源利用效率，从而降低成本，提高盈利能力。</p><ol start="5"><li>增强员工效率与动力</li></ol><p>有明确的指标和目标有助于激发员工的动力，当员工明白他们的工作如何与企业的战略目标相关联时，他们才更有动力与方向去实施。指标体系的建立还能解决减少部门间沟通协作的痛点，也能帮助企业建立绩效评估体系，从而提高整体团队的表现。</p><ol start="6"><li>响应市场变化</li></ol><p>市场环境不断变化，企业需要及时调整战略来适应这些变化。指标体系可以帮助企业监测市场趋势，识别机会和威胁，从而更灵活地做出调整。这使企业能够更好地应对市场的不确定性，保持竞争力。</p><p>那么，企业应该如何构建一个有力的指标体系呢？</p><p>三、指标体系构建的 4 大原则<br />企业在设计指标体系时，必须遵照以下 4 大原则：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/07eb61f49db94f72ac0aa9038583b274.jpeg" alt="07eb61f49db94f72ac0aa9038583b274.jpeg" /></p><p>用户第一原则：指标体系的核心在于为实际业务提供服务，因此首要考虑用户的业务目标。在构建指标体系时，首先需要明确用户的业务目标，然后思考实现这些目标的方法以及哪些做法能够最好地支持这些目标。最终，通过找出相关指标来支撑数据指标体系的构建。因此，指标的数量并非越多越好，更不能包含“虚荣指标”。</p><p>典型性原则：倾向选择具有典型性和代表性的指标，确保这些指标能够真实反映业务的实际状况。在构建指标体系时，优先考虑那些最能代表业务本质的指标，以确保数据的准确性和可信度。</p><p>系统性原则：指标体系的建设需要注重系统性，常见的方法是找到核心原子指标，然后进行延伸，最终形成类似二叉树结构的指标体系。这样的树状结构使得每个指标都有可追溯的根，有助于全面理解业务的各个方面。</p><p>动态性原则：数据指标体系随着业务的发展和数据分析需求的变化而不断演变。因此，维护和迭代更新指标体系是必要的。在构建指标体系后，需要持续关注业务的变化，根据实际需要对指标体系进行灵活调整，以确保其与业务的实际发展保持一致。</p><p>总体而言，构建指标体系的关键在于选择能够真实反映实际业务、具有代表性、有系统性结构且具备动态更新机制的指标。</p><p>四、指标体系构建的整体思路——指标金字塔<br />在构建指标体系前，我们可以利用“指标金字塔”的指标分层概念来拆解指标，梳理构建指标体系的整体思路。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/baac4e340e983478ec77bbefc0507aba.jpeg" alt="baac4e340e983478ec77bbefc0507aba.jpeg" /></p><p>1.核心指标</p><p>位于最顶端的指标是核心指标，通常与整体业务的年度目标一致。这个指标要服务于业务发展需要，能反映整个业务的走向。一段时期内只有一个工作重心，所以核心指标最好是 1 个，也就是所谓的北极星指标（唯一关键指标），能够体现公司业务完成情况、进展情况。</p><p>制定核心指标的 6 条标准：</p><ul><li><p>标准 1：你的产品的核心价值是什么？这个指标可以让你知道你的用户体验到了这种价值吗？</p></li><li><p>标准 2：核心指标要具备典型性，能够看出长期一段时间的变化情况与表现情况的好坏。</p></li><li><p>标准 3：如果这个指标变好了，是不是能说明整个公司是在向好的方向发展？</p></li><li><p>标准 4：这个指标是不是很容易被整个团队理解和交流呢？</p></li><li><p>标准 5：这个指标是一个先导指标，还是一个滞后指标？</p></li><li><p>标准 6：这个指标是不是一个可操作的指标？</p></li></ul><p>2.业务指标</p><p>第二级指标对应的是支撑核心目标完成的关键动作，通常要完成核心目标就要从多个业务角度考虑，所以第二层的指标就是用来衡量这多个重点业务的业务指标。</p><p>这时候就要对核心指标进行拆解，根据业务拆出过程性关键指标，也就是业务指标。有了业务指标，相当于每个业务方向也就有了核心指标。</p><p>3.操作指标</p><p>业务指标能否完成，最终还是要看各个动作下的事项执行的怎么样，那就是要和最基础的岗位、业务关联起来。所以第三级指标是由业务指标拆解而来，这类操作指标可以跟踪常规的业务结果，一般都会落实到基础岗位和具体的执行人员，可以衡量基础业务人员日常工作的效果。</p><p>五、构建指标体系的 4 大关键步骤<br />根据“指标金字塔”概念，我们可以将构建指标体系的过程分成以下 4 个步骤：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d709984d40041c8e75db904d427b12f9.jpeg" alt="d709984d40041c8e75db904d427b12f9.jpeg" /></p><p>步骤一：确立指引方向的核心指标</p><p>核心指标要能指引业务发展，对齐业务发展方向和业务目标，有牵引性，最好不要超过三个，一般选用北极星指标。所以这个阶段，我们的最终产物就是确定 1-3 个最上层的关键指标。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8e980acd67350e9a1856da6cdaa450b8.jpeg" alt="8e980acd67350e9a1856da6cdaa450b8.jpeg" /></p><p>步骤二：基于业务拆解核心指标</p><p>拆解核心指标，一般从业务角度考虑，根据业务来拆出过程性关键指标。</p><p>找出哪些能让核心目标达成的动作，然后再定义出衡量这些动作效果的指标，就完成了拆分过程。因为还要进行再次拆分，所以在这个阶段，不必要拆分的太过零碎，每个业务方向 1 个指标即可，不要多于 3 个。</p><p>这个阶段的最终产物是几大过程性关键业务指标。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a8c188ff625e91e99efa42da90e0cf07.jpeg" alt="a8c188ff625e91e99efa42da90e0cf07.jpeg" /></p><p>步骤三：拆解业务落实到操作指标</p><p>操作指标最终会落实到具体的业务执行人员，对他们日常的工作做牵引。将业务指标拆解成操作指标，拆解时注意不要有重复，同一个指标不要对应多个负责人，尽可能做到相互独立、各自负责。</p><p>这个阶段的最终产物是所有的操作性指标和对应的业务负责任人。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d7982c9d8da1dd063042725a3aa2e929.jpeg" alt="d7982c9d8da1dd063042725a3aa2e929.jpeg" /></p><p>步骤四：进行系统性梳理和整合</p><p>经过前面 3 步，我们已经从顶层拆分到了底层，如果你的业务比较复杂，也可以再做拆分，但其实一般 3 层就比较合适，容易溯源和追踪。</p><p>最后，我们需要进行梳理、整合、排查、演练，完成这个过程后，我们就可以输出完整的指标体系结果了。这个过程中，最终将会输出指标思维导图，如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/da5bf2fce6ea63665963f13881aaccbd.jpeg" alt="da5bf2fce6ea63665963f13881aaccbd.jpeg" /></p><p>六、结语<br />总的来说，构建一个有效的指标体系需要明确定义业务目标和战略，基于业务拆解核心指标，制定落实举措，最后进行系统性梳理和整合，并持续改进。一个有力的指标体系将帮助企业更好地了解其绩效，支持决策制定，并确保业务与战略目标保持一致。它是企业成功的关键工具之一，值得精心构建和维护。期望本文能对贵企业在建立指标体系方面提供一些有益的指导和启示。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用脚本</title>
      <link href="/2024/02/19/Hadoop%E7%9A%84%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/02/19/Hadoop%E7%9A%84%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="1-第一个案例helloworld"><a class="markdownIt-Anchor" href="#1-第一个案例helloworld"></a> 1、第一个案例：helloworld</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> example &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello world!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">example</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-打印运行的python进程"><a class="markdownIt-Anchor" href="#2-打印运行的python进程"></a> 2、打印运行的python进程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">pidlist=`ps -aux | grep python | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pidlist</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-获取并打印参数"><a class="markdownIt-Anchor" href="#3-获取并打印参数"></a> 3、获取并打印参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$0</span> <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span>&quot;</span>  // 传入三个参数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$#</span>    //获取传入参数的数量</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$@</span>    //打印获取传入参数</span><br><span class="line"><span class="built_in">echo</span> $*    //打印获取传入参数</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-用脚本写for循环"><a class="markdownIt-Anchor" href="#4-用脚本写for循环"></a> 4、用脚本写for循环</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">s</span>=0;</span><br><span class="line"><span class="keyword">for</span>((<span class="attribute">i</span>=1;i&lt;100;i++))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"> <span class="attribute">s</span>=$[<span class="variable">$s</span>+<span class="variable">$i</span>]</span><br><span class="line">done </span><br><span class="line"></span><br><span class="line">echo <span class="variable">$s</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">r</span>=0;</span><br><span class="line"><span class="attribute">a</span>=0;</span><br><span class="line"><span class="attribute">b</span>=0;</span><br><span class="line"><span class="keyword">for</span>((<span class="attribute">x</span>=1;x&lt;9;x++))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"> <span class="attribute">a</span>=$[<span class="variable">$a</span>+<span class="variable">$x</span>] </span><br><span class="line">echo <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="keyword">for</span>((<span class="attribute">y</span>=1;y&lt;9;y++))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"> <span class="attribute">b</span>=$[<span class="variable">$b</span>+<span class="variable">$y</span>]</span><br><span class="line">echo <span class="variable">$y</span></span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo <span class="variable">$r</span>=$[<span class="variable">$a</span>+<span class="variable">$b</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-使用c语言风格的for命令"><a class="markdownIt-Anchor" href="#5-使用c语言风格的for命令"></a> 5、使用C语言风格的for命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#testing the C-style for loop</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The next number is <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-获取用户输入"><a class="markdownIt-Anchor" href="#6-获取用户输入"></a> 6、获取用户输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># testing the reading command</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter your name:&quot;</span></span><br><span class="line"><span class="built_in">read</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>, welcome to my program&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter your age: &quot;</span> age</span><br><span class="line">days=$[ <span class="variable">$age</span> * 365 ]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;That makes you over <span class="variable">$days</span> days old&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定多个变量，输入的每个数据值都会分配给表中的下一个变量，如果用完了，就全分配各最后一个变量</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter name:&quot;</span> first last</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Checking data for <span class="variable">$last</span>. <span class="variable">$first</span>...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果不指定变量，read命令就会把它收到的任何数据都放到特殊环境变量REPLY中</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Enter a number:&quot;</span></span><br><span class="line">factorial=1</span><br><span class="line"><span class="keyword">for</span> (( count=<span class="number">1</span>; count&lt;=<span class="variable">$REPLY</span>; count++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">factorial=$[ <span class="variable">$factorial</span> * <span class="variable">$count</span> ]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The factorial of <span class="variable">$REPLY</span> is <span class="variable">$factorial</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7目录文件计数"><a class="markdownIt-Anchor" href="#7目录文件计数"></a> 7，目录文件计数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># count number of files in your PATH</span></span><br><span class="line"></span><br><span class="line">mypath=`<span class="built_in">echo</span> <span class="variable">$PATH</span> | sed <span class="string">&#x27;s/:/ /g&#x27;</span>`</span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">for</span> directory <span class="keyword">in</span> <span class="variable">$mypath</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">check=`<span class="built_in">ls</span> <span class="variable">$directory</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$check</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> <span class="variable">$check</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">count=$(( <span class="variable">$count</span> + <span class="number">1</span> ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$directory</span> - <span class="variable">$count</span>&quot;</span></span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8从文件中读取数据"><a class="markdownIt-Anchor" href="#8从文件中读取数据"></a> 8，从文件中读取数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># reading data from a file</span></span><br><span class="line"></span><br><span class="line">count=1</span><br><span class="line"><span class="built_in">cat</span> <span class="built_in">test</span> | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Line <span class="variable">$count</span>: <span class="variable">$line</span>&quot;</span></span><br><span class="line">count=$[ <span class="variable">$count</span> + 1 ]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Finished processing the file&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="9用脚本实现复制"><a class="markdownIt-Anchor" href="#9用脚本实现复制"></a> 9，用脚本实现复制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="10检查指定目录下是否有指定文件"><a class="markdownIt-Anchor" href="#10检查指定目录下是否有指定文件"></a> 10，检查指定目录下是否有指定文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f /home/wenmin/datas ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File exists&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="11-sed文件操作"><a class="markdownIt-Anchor" href="#11-sed文件操作"></a> 11、sed文件操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#向文件写入</span></span><br><span class="line">sed <span class="string">&#x27;1,2w test1&#x27;</span> test1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;next\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从文件读取</span></span><br><span class="line">sed <span class="string">&#x27;3r ./test&#x27;</span> ./test</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;next\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从文件读取，并插入字符流</span></span><br><span class="line">sed <span class="string">&#x27;/lazy/r test&#x27;</span> <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#向数据流末尾添加数据</span></span><br><span class="line">sed <span class="string">&#x27;$r test&#x27;</span> <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;next1\n&quot;</span></span><br><span class="line"></span><br><span class="line">sed <span class="string">&#x27;/lazy/ &#123;</span></span><br><span class="line"><span class="string">r test</span></span><br><span class="line"><span class="string">d</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> <span class="built_in">test</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="12-实时监控本机内存和硬盘剩余空间"><a class="markdownIt-Anchor" href="#12-实时监控本机内存和硬盘剩余空间"></a> 12、实时监控本机内存和硬盘剩余空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时监控本机内存和硬盘剩余空间,剩余内存小于500M、根分区剩余空间小于1000M时,发送报警邮件给root管理员</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取根分区剩余空间</span></span><br><span class="line">disk_size=$(<span class="built_in">df</span> / | awk <span class="string">&#x27;/\//&#123;print $4&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取内存剩余空空间</span></span><br><span class="line">mem_size=$(free | awk <span class="string">&#x27;/Mem/&#123;print $4&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"><span class="comment"># 注意内存和磁盘提取的空间大小都是以 Kb 为单位</span></span><br><span class="line"><span class="keyword">if</span>  [  <span class="variable">$disk_size</span> -le 512000 -a <span class="variable">$mem_size</span> -le 1024000  ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    mail  ‐s  <span class="string">&quot;Warning&quot;</span>  root  &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"> Insufficient resources,资源不足</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="13-使用菜单显示指令操作"><a class="markdownIt-Anchor" href="#13-使用菜单显示指令操作"></a> 13、使用菜单显示指令操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> menu &#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\tSys Admin Menu\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t1. Display disk space&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t2. Display logged on users&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t3. Display memory usage&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t0. Exit program\n\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\t\tEnter option:&quot;</span></span><br><span class="line"><span class="built_in">read</span> -n 1 option</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> diskspace &#123;</span><br><span class="line">clear </span><br><span class="line"><span class="built_in">df</span> -k</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> whoseon &#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">who</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> menusage &#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">cat</span> /proc/meminfo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ 1 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">menu</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$option</span> <span class="keyword">in</span></span><br><span class="line">0) </span><br><span class="line"><span class="built_in">break</span>;;</span><br><span class="line">1) </span><br><span class="line">diskspace;;</span><br><span class="line">2)</span><br><span class="line">whoseon;;</span><br><span class="line">3)</span><br><span class="line">menusage;;</span><br><span class="line">*)</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Sorry, wrong selection&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\n\n\t\tHit any key to continue&quot;</span></span><br><span class="line"><span class="built_in">read</span> -n 1 line</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">clear</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用指南</title>
      <link href="/2023/11/18/begin/"/>
      <url>/2023/11/18/begin/</url>
      
        <content type="html"><![CDATA[<h3 id="网站更新"><a class="markdownIt-Anchor" href="#网站更新"></a> 网站更新</h3><p>先开启clash代理</p><p>在E盘hexo文件夹右键 open git bash here 进入git窗口 输入以下三行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl #清除缓存</span><br><span class="line">hexo g #渲染</span><br><span class="line">hexo d #上传</span><br></pre></td></tr></table></figure><h3 id="写文章"><a class="markdownIt-Anchor" href="#写文章"></a> 写文章</h3><p>在E盘hexo文件夹右键 open git bash here 进入git窗口 输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名&quot;</span><br></pre></td></tr></table></figure><p>文章使用Markdown格式，存在hexo/source/_post文件夹下 在该目录打开即可编辑文章</p><p>文章开头的是ymal代码块 title是标题 以此类推</p><h3 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h3><p>有两处要修改</p><p>根目录下的config.yml文件</p><p>theme/butterfly主题下的config.yml文件</p><p>所有要修改的地方我已经用注释标出 vscode ctrl+f 检索 “要修改” 即可 用处也写了</p><p>主题文档<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><h3 id="markdown语法及typora用法"><a class="markdownIt-Anchor" href="#markdown语法及typora用法"></a> Markdown语法及Typora用法</h3><p><a href="https://www.typora.net/1249.html">https://www.typora.net/1249.html</a> 网上很多 搜一下即可</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
