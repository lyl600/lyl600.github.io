<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux常用脚本</title>
      <link href="/2024/06/19/Hadoop%E7%9A%84%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/06/19/Hadoop%E7%9A%84%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="1-第一个案例helloworld"><a class="markdownIt-Anchor" href="#1-第一个案例helloworld"></a> 1、第一个案例：helloworld</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> example &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello world!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">example</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-打印运行的python进程"><a class="markdownIt-Anchor" href="#2-打印运行的python进程"></a> 2、打印运行的python进程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">pidlist=`ps -aux | grep python | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pidlist</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-获取并打印参数"><a class="markdownIt-Anchor" href="#3-获取并打印参数"></a> 3、获取并打印参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$0</span> <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span>&quot;</span>  // 传入三个参数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$#</span>    //获取传入参数的数量</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$@</span>    //打印获取传入参数</span><br><span class="line"><span class="built_in">echo</span> $*    //打印获取传入参数</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-用脚本写for循环"><a class="markdownIt-Anchor" href="#4-用脚本写for循环"></a> 4、用脚本写for循环</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">s</span>=0;</span><br><span class="line"><span class="keyword">for</span>((<span class="attribute">i</span>=1;i&lt;100;i++))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"> <span class="attribute">s</span>=$[<span class="variable">$s</span>+<span class="variable">$i</span>]</span><br><span class="line">done </span><br><span class="line"></span><br><span class="line">echo <span class="variable">$s</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">r</span>=0;</span><br><span class="line"><span class="attribute">a</span>=0;</span><br><span class="line"><span class="attribute">b</span>=0;</span><br><span class="line"><span class="keyword">for</span>((<span class="attribute">x</span>=1;x&lt;9;x++))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"> <span class="attribute">a</span>=$[<span class="variable">$a</span>+<span class="variable">$x</span>] </span><br><span class="line">echo <span class="variable">$x</span></span><br><span class="line">done</span><br><span class="line"><span class="keyword">for</span>((<span class="attribute">y</span>=1;y&lt;9;y++))</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"> <span class="attribute">b</span>=$[<span class="variable">$b</span>+<span class="variable">$y</span>]</span><br><span class="line">echo <span class="variable">$y</span></span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo <span class="variable">$r</span>=$[<span class="variable">$a</span>+<span class="variable">$b</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-使用c语言风格的for命令"><a class="markdownIt-Anchor" href="#5-使用c语言风格的for命令"></a> 5、使用C语言风格的for命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#testing the C-style for loop</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The next number is <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-获取用户输入"><a class="markdownIt-Anchor" href="#6-获取用户输入"></a> 6、获取用户输入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># testing the reading command</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Enter your name:&quot;</span></span><br><span class="line"><span class="built_in">read</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>, welcome to my program&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter your age: &quot;</span> age</span><br><span class="line">days=$[ <span class="variable">$age</span> * 365 ]</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;That makes you over <span class="variable">$days</span> days old&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定多个变量，输入的每个数据值都会分配给表中的下一个变量，如果用完了，就全分配各最后一个变量</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter name:&quot;</span> first last</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Checking data for <span class="variable">$last</span>. <span class="variable">$first</span>...&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果不指定变量，read命令就会把它收到的任何数据都放到特殊环境变量REPLY中</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Enter a number:&quot;</span></span><br><span class="line">factorial=1</span><br><span class="line"><span class="keyword">for</span> (( count=<span class="number">1</span>; count&lt;=<span class="variable">$REPLY</span>; count++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">factorial=$[ <span class="variable">$factorial</span> * <span class="variable">$count</span> ]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The factorial of <span class="variable">$REPLY</span> is <span class="variable">$factorial</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7目录文件计数"><a class="markdownIt-Anchor" href="#7目录文件计数"></a> 7，目录文件计数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># count number of files in your PATH</span></span><br><span class="line"></span><br><span class="line">mypath=`<span class="built_in">echo</span> <span class="variable">$PATH</span> | sed <span class="string">&#x27;s/:/ /g&#x27;</span>`</span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">for</span> directory <span class="keyword">in</span> <span class="variable">$mypath</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">check=`<span class="built_in">ls</span> <span class="variable">$directory</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$check</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> <span class="variable">$check</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">count=$(( <span class="variable">$count</span> + <span class="number">1</span> ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$directory</span> - <span class="variable">$count</span>&quot;</span></span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8从文件中读取数据"><a class="markdownIt-Anchor" href="#8从文件中读取数据"></a> 8，从文件中读取数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># reading data from a file</span></span><br><span class="line"></span><br><span class="line">count=1</span><br><span class="line"><span class="built_in">cat</span> <span class="built_in">test</span> | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Line <span class="variable">$count</span>: <span class="variable">$line</span>&quot;</span></span><br><span class="line">count=$[ <span class="variable">$count</span> + 1 ]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Finished processing the file&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="9用脚本实现复制"><a class="markdownIt-Anchor" href="#9用脚本实现复制"></a> 9，用脚本实现复制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="10检查指定目录下是否有指定文件"><a class="markdownIt-Anchor" href="#10检查指定目录下是否有指定文件"></a> 10，检查指定目录下是否有指定文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f /home/wenmin/datas ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File exists&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="11-sed文件操作"><a class="markdownIt-Anchor" href="#11-sed文件操作"></a> 11、sed文件操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#向文件写入</span></span><br><span class="line">sed <span class="string">&#x27;1,2w test1&#x27;</span> test1</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;next\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从文件读取</span></span><br><span class="line">sed <span class="string">&#x27;3r ./test&#x27;</span> ./test</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;next\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从文件读取，并插入字符流</span></span><br><span class="line">sed <span class="string">&#x27;/lazy/r test&#x27;</span> <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#向数据流末尾添加数据</span></span><br><span class="line">sed <span class="string">&#x27;$r test&#x27;</span> <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;next1\n&quot;</span></span><br><span class="line"></span><br><span class="line">sed <span class="string">&#x27;/lazy/ &#123;</span></span><br><span class="line"><span class="string">r test</span></span><br><span class="line"><span class="string">d</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> <span class="built_in">test</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="12-实时监控本机内存和硬盘剩余空间"><a class="markdownIt-Anchor" href="#12-实时监控本机内存和硬盘剩余空间"></a> 12、实时监控本机内存和硬盘剩余空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时监控本机内存和硬盘剩余空间,剩余内存小于500M、根分区剩余空间小于1000M时,发送报警邮件给root管理员</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取根分区剩余空间</span></span><br><span class="line">disk_size=$(<span class="built_in">df</span> / | awk <span class="string">&#x27;/\//&#123;print $4&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取内存剩余空空间</span></span><br><span class="line">mem_size=$(free | awk <span class="string">&#x27;/Mem/&#123;print $4&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line"><span class="comment"># 注意内存和磁盘提取的空间大小都是以 Kb 为单位</span></span><br><span class="line"><span class="keyword">if</span>  [  <span class="variable">$disk_size</span> -le 512000 -a <span class="variable">$mem_size</span> -le 1024000  ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    mail  ‐s  <span class="string">&quot;Warning&quot;</span>  root  &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"> Insufficient resources,资源不足</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="13-使用菜单显示指令操作"><a class="markdownIt-Anchor" href="#13-使用菜单显示指令操作"></a> 13、使用菜单显示指令操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> menu &#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t\tSys Admin Menu\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t1. Display disk space&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t2. Display logged on users&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t3. Display memory usage&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t0. Exit program\n\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\t\tEnter option:&quot;</span></span><br><span class="line"><span class="built_in">read</span> -n 1 option</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> diskspace &#123;</span><br><span class="line">clear </span><br><span class="line"><span class="built_in">df</span> -k</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> whoseon &#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">who</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> menusage &#123;</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">cat</span> /proc/meminfo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ 1 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">menu</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$option</span> <span class="keyword">in</span></span><br><span class="line">0) </span><br><span class="line"><span class="built_in">break</span>;;</span><br><span class="line">1) </span><br><span class="line">diskspace;;</span><br><span class="line">2)</span><br><span class="line">whoseon;;</span><br><span class="line">3)</span><br><span class="line">menusage;;</span><br><span class="line">*)</span><br><span class="line">clear</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Sorry, wrong selection&quot;</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\n\n\t\tHit any key to continue&quot;</span></span><br><span class="line"><span class="built_in">read</span> -n 1 line</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">clear</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pyspark的相关使用</title>
      <link href="/2024/06/19/pyspark%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/06/19/pyspark%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="pyspark数据的输入"><a class="markdownIt-Anchor" href="#pyspark数据的输入"></a> pyspark数据的输入</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">from pyspark import SparkConf, SparkContext</span><br><span class="line"></span><br><span class="line">conf = <span class="built_in">SparkConf</span>()<span class="selector-class">.setMaster</span>(<span class="string">&quot;local[*]&quot;</span>)<span class="selector-class">.setAppName</span>(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line"></span><br><span class="line">sc = <span class="built_in">SparkContext</span>(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd1 = sc<span class="selector-class">.parallelize</span>(<span class="selector-attr">[1, 2, 3, 4, 5]</span>)</span><br><span class="line">rdd2 = sc<span class="selector-class">.parallelize</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line">rdd3 = sc<span class="selector-class">.parallelize</span>(<span class="string">&quot;asdcascacasc&quot;</span>)</span><br><span class="line">rdd4 = sc<span class="selector-class">.parallelize</span>(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;)</span><br><span class="line">rdd5 = sc<span class="selector-class">.parallelize</span>(&#123;<span class="string">&quot;好啊&quot;</span>: <span class="string">&quot;value1&quot;</span>, <span class="string">&quot;key2&quot;</span>: <span class="string">&quot;value2&quot;</span>&#125;)</span><br><span class="line">rdd6 = sc<span class="selector-class">.textFile</span>(<span class="string">&quot;D:/桌面/资料内容/资料/hello.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd1.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd2.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd3.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd4.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd5.collect()</span></span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(rdd6.collect()</span></span>)</span><br><span class="line"></span><br><span class="line">sc<span class="selector-class">.stop</span>()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>方法的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkConf, SparkContext</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;PYSPARK_PYTHON&#x27;</span>] = <span class="string">&quot;D:/Python/Anacond/python.exe&quot;</span></span><br><span class="line"></span><br><span class="line">conf = SparkConf().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line">sc = SparkContext(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd = sc.parallelize([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把rdd中的每个元素乘以10</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">return</span> data * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># rdd2 = rdd.map(func)</span></span><br><span class="line"><span class="comment"># lambda函数使用</span></span><br><span class="line">rdd2 = rdd.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x * <span class="number">10</span>).<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x + <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># [10, 20, 30, 40, 50]</span></span><br><span class="line"><span class="built_in">print</span>(rdd2.collect())</span><br><span class="line"></span><br><span class="line">sc.stop()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flatMap(传入函数)方法：和map基本一样，但是flatmap可以用于解除嵌套</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from pyspark import <span class="symbol">SparkConf</span>, <span class="symbol">SparkContext</span></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;PYSPARK_PYTHON&#x27;</span>] = <span class="string">&quot;D:/Python/Anacond/python.exe&quot;</span></span><br><span class="line">conf = <span class="symbol">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line">sc = <span class="symbol">SparkContext</span>(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd = sc.parallelize([<span class="string">&quot;itheima pjb 666&quot;</span>, <span class="string">&quot;sadijad dsakj asdkj&quot;</span>, <span class="string">&quot;python nihaoa&quot;</span>])</span><br><span class="line"></span><br><span class="line"># 结果是 [[<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;pjb&#x27;</span>, <span class="string">&#x27;666&#x27;</span>], [<span class="string">&#x27;sadijad&#x27;</span>, <span class="string">&#x27;dsakj&#x27;</span>, <span class="string">&#x27;asdkj&#x27;</span>], [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;nihaoa&#x27;</span>]]</span><br><span class="line">rdd2 = rdd.map(lambda x: x.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line"></span><br><span class="line"># 结果是[<span class="string">&#x27;itheima&#x27;</span>, <span class="string">&#x27;pjb&#x27;</span>, <span class="string">&#x27;666&#x27;</span>, <span class="string">&#x27;sadijad&#x27;</span>, <span class="string">&#x27;dsakj&#x27;</span>, <span class="string">&#x27;asdkj&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;nihaoa&#x27;</span>]</span><br><span class="line">rdd2 = rdd.flatMap(lambda x: x.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line">print(rdd2.collect())</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>reduceBykey 针对KV型RDD，自动按照key分组，然后根据你提供的逻辑，完成组内数据（value）的聚合操作</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkConf, SparkContext</span><br><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">os</span>.environ[<span class="string">&#x27;PYSPARK_PYTHON&#x27;</span>] = <span class="string">&quot;D:/Python/Anacond/python.exe&quot;</span></span><br><span class="line">conf = SparkConf().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;test_spark&quot;</span>)</span><br><span class="line">sc = SparkContext(conf=conf)</span><br><span class="line"></span><br><span class="line">rdd = sc.parallelize([(<span class="string">&#x27;男&#x27;</span>, <span class="number">99</span>), (<span class="string">&#x27;男&#x27;</span>, <span class="number">69</span>), (<span class="string">&#x27;女&#x27;</span>, <span class="number">49</span>), (<span class="string">&#x27;女&#x27;</span>, <span class="number">29</span>)])</span><br><span class="line"></span><br><span class="line"># 结果[(<span class="string">&#x27;男&#x27;</span>, <span class="number">168</span>), (<span class="string">&#x27;女&#x27;</span>, <span class="number">78</span>)]</span><br><span class="line">rdd2 = rdd.reduceByKey(lambda a, <span class="name">b</span>: a + b)</span><br><span class="line"><span class="built_in">print</span>(rdd2.collect())</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用指南</title>
      <link href="/2024/06/18/begin/"/>
      <url>/2024/06/18/begin/</url>
      
        <content type="html"><![CDATA[<h3 id="网站更新"><a class="markdownIt-Anchor" href="#网站更新"></a> 网站更新</h3><p>先开启clash代理</p><p>在E盘hexo文件夹右键 open git bash here 进入git窗口 输入以下三行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl #清除缓存</span><br><span class="line">hexo g #渲染</span><br><span class="line">hexo d #上传</span><br></pre></td></tr></table></figure><h3 id="写文章"><a class="markdownIt-Anchor" href="#写文章"></a> 写文章</h3><p>在E盘hexo文件夹右键 open git bash here 进入git窗口 输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名&quot;</span><br></pre></td></tr></table></figure><p>文章使用Markdown格式，存在hexo/source/_post文件夹下 在该目录打开即可编辑文章</p><p>文章开头的是ymal代码块 title是标题 以此类推</p><h3 id="主题配置"><a class="markdownIt-Anchor" href="#主题配置"></a> 主题配置</h3><p>有两处要修改</p><p>根目录下的config.yml文件</p><p>theme/butterfly主题下的config.yml文件</p><p>所有要修改的地方我已经用注释标出 vscode ctrl+f 检索 “要修改” 即可 用处也写了</p><p>主题文档<a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><h3 id="markdown语法及typora用法"><a class="markdownIt-Anchor" href="#markdown语法及typora用法"></a> Markdown语法及Typora用法</h3><p><a href="https://www.typora.net/1249.html">https://www.typora.net/1249.html</a> 网上很多 搜一下即可</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
